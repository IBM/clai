[{"aliases":["find"],"description":"find: walk a file hierarchy\n\n     The find utility recursively descends the directory tree for each path\n     listed, evaluating an expression (composed of the ``primaries'' and\n     ``operands'' listed below) in terms of each file in the tree.\n","rawSynopsis":"find [-H | -L | -P] [-EXdsx] [-f path] path ... [expression]\nfind [-H | -L | -P] [-EXdsx] -f path [path ...] [expression]","optionLists":[{"type":"compound_options","commands":[{"type":"optional_option","cmd":{"type":"exclusive_options","commands":[{"type":"flag_option","flag_name":"H"},{"type":"flag_option","flag_name":"L"},{"type":"flag_option","flag_name":"P"}]}},{"type":"compound_options","commands":[{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"E"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"X"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"d"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"s"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"x"}}]},{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"f"},{"type":"argument_option","arg_name":"path","arg_type":"Unknown","isList":false}]}},{"type":"argument_option","arg_name":"path","arg_type":"Unknown","isList":true},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"expression","arg_type":"Unknown","isList":false}}]},{"type":"compound_options","commands":[{"type":"optional_option","cmd":{"type":"exclusive_options","commands":[{"type":"flag_option","flag_name":"H"},{"type":"flag_option","flag_name":"L"},{"type":"flag_option","flag_name":"P"}]}},{"type":"compound_options","commands":[{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"E"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"X"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"d"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"s"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"x"}}]},{"type":"flag_option","flag_name":"f"},{"type":"argument_option","arg_name":"path","arg_type":"Unknown","isList":false},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"path","arg_type":"Unknown","isList":true}},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"expression","arg_type":"Unknown","isList":false}}]}],"optionDesc":[{"name":"-E","option":{"type":"flag_option","flag_name":"E"},"description":"\n     -E      Interpret regular expressions followed by -regex and -iregex pri-\n             maries as extended (modern) regular expressions rather than basic\n             regular expressions (BRE's).  The re_format(7) manual page fully\n             describes both formats.\n"},{"name":"-H","option":{"type":"flag_option","flag_name":"H"},"description":"\n     -H      Cause the file information and file type (see stat(2)) returned\n             for each symbolic link specified on the command line to be those\n             of the file referenced by the link, not the link itself.  If the\n             referenced file does not exist, the file information and type\n             will be for the link itself.  File information of all symbolic\n             links not on the command line is that of the link itself.\n"},{"name":"-L","option":{"type":"flag_option","flag_name":"L"},"description":"\n     -L      Cause the file information and file type (see stat(2)) returned\n             for each symbolic link to be those of the file referenced by the\n             link, not the link itself.  If the referenced file does not\n             exist, the file information and type will be for the link itself.\n\n             This option is equivalent to the deprecated -follow primary.\n"},{"name":"-P","option":{"type":"flag_option","flag_name":"P"},"description":"\n     -P      Cause the file information and file type (see stat(2)) returned\n             for each symbolic link to be those of the link itself.  This is\n             the default.\n"},{"name":"-X","option":{"type":"flag_option","flag_name":"X"},"description":"\n     -X      Permit find to be safely used in conjunction with xargs(1).  If a\n             file name contains any of the delimiting characters used by\n             xargs(1), a diagnostic message is displayed on standard error,\n             and the file is skipped.  The delimiting characters include sin-\n             gle (`` ' '') and double (`` \" '') quotes, backslash (``\\''),\n             space, tab and newline characters.\n\n             However, you may wish to consider the -print0 primary in conjunc-\n             tion with ``xargs -0'' as an effective alternative.\n"},{"name":"-d","option":{"type":"flag_option","flag_name":"d"},"description":"\n     -d      Cause find to perform a depth-first traversal, i.e., directories\n             are visited in post-order and all entries in a directory will be\n             acted on before the directory itself.  By default, find visits\n             directories in pre-order, i.e., before their contents.  Note, the\n             default is not a breadth-first traversal.\n\n             This option is equivalent to the -depth primary of IEEE Std\n             1003.1-2001 (``POSIX.1'').  The -d option can be useful when find\n             is used with cpio(1) to process files that are contained in\n             directories with unusual permissions.  It ensures that you have\n             write permission while you are placing files in a directory, then\n             sets the directory's permissions as the last thing.\n"},{"name":"-f","option":{"type":"flag_option","flag_name":"f"},"description":"\n     -f      Specify a file hierarchy for find to traverse.  File hierarchies\n             may also be specified as the operands immediately following the\n             options.\n"},{"name":"-s","option":{"type":"flag_option","flag_name":"s"},"description":"\n     -s      Cause find to traverse the file hierarchies in lexicographical\n             order, i.e., alphabetical order within each directory.  Note:\n             `find -s' and `find | sort' may give different results.\n"},{"name":"-x","option":{"type":"flag_option","flag_name":"x"},"description":"\n     -x      Prevent find from descending into directories that have a device\n             number different than that of the file from which the descent\n             began.\n\n             This option is equivalent to the deprecated -xdev primary.\n"},{"name":"-Bmin n","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"Bmin"},{"type":"argument_option","arg_name":"n","arg_type":"Unknown","isList":false}]},"description":"\n     -Bmin n\n             True if the difference between the time of a file's inode cre-\n             ation and the time find was started, rounded up to the next full\n             minute, is n minutes.\n"},{"name":"-Bnewer file","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"Bnewer"},{"type":"argument_option","arg_name":"file","arg_type":"Unknown","isList":false}]},"description":"\n     -Bnewer file\n             Same as -newerBm.\n"},{"name":"-Btime n [smhdw]","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"Btime"},{"type":"argument_option","arg_name":"n","arg_type":"Unknown","isList":false},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"smhdw","arg_type":"Unknown","isList":false}}]},"description":"\n     -Btime n[smhdw]\n             If no units are specified, this primary evaluates to true if the\n             difference between the time of a file's inode creation and the\n             time find was started, rounded up to the next full 24-hour\n             period, is n 24-hour periods.\n\n             If units are specified, this primary evaluates to true if the\n             difference between the time of a file's inode creation and the\n             time find was started is exactly n units.  Please refer to the\n             -atime primary description for information on supported time\n             units.\n"},{"name":"-acl","option":{"type":"flag_option","flag_name":"acl"},"description":"\n     -acl    May be used in conjunction with other primaries to locate files\n             with extended ACLs.  See acl(3) for more information.\n"},{"name":"-amin n","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"amin"},{"type":"argument_option","arg_name":"n","arg_type":"Unknown","isList":false}]},"description":"\n     -amin n\n             True if the difference between the file last access time and the\n             time find was started, rounded up to the next full minute, is n\n             minutes.\n"},{"name":"-anewer file","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"anewer"},{"type":"argument_option","arg_name":"file","arg_type":"Unknown","isList":false}]},"description":"\n     -anewer file\n             Same as -neweram.\n"},{"name":"-atime n [smhdw]","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"atime"},{"type":"argument_option","arg_name":"n","arg_type":"Unknown","isList":false},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"smhdw","arg_type":"Unknown","isList":false}}]},"description":"\n     -atime n[smhdw]\n             If no units are specified, this primary evaluates to true if the\n             difference between the file last access time and the time find\n             was started, rounded up to the next full 24-hour period, is n\n             24-hour periods.\n\n             If units are specified, this primary evaluates to true if the\n             difference between the file last access time and the time find\n             was started is exactly n units.  Possible time units are as fol-\n             lows:\n\n             s       second\n             m       minute (60 seconds)\n             h       hour (60 minutes)\n             d       day (24 hours)\n             w       week (7 days)\n\n             Any number of units may be combined in one -atime argument, for\n             example, ``-atime -1h30m''.  Units are probably only useful when\n             used in conjunction with the + or - modifier.\n"},{"name":"-cmin n","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"cmin"},{"type":"argument_option","arg_name":"n","arg_type":"Unknown","isList":false}]},"description":"\n     -cmin n\n             True if the difference between the time of last change of file\n             status information and the time find was started, rounded up to\n             the next full minute, is n minutes.\n"},{"name":"-cnewer file","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"cnewer"},{"type":"argument_option","arg_name":"file","arg_type":"Unknown","isList":false}]},"description":"\n     -cnewer file\n             Same as -newercm.\n"},{"name":"-ctime n [smhdw]","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"ctime"},{"type":"argument_option","arg_name":"n","arg_type":"Unknown","isList":false},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"smhdw","arg_type":"Unknown","isList":false}}]},"description":"\n     -ctime n[smhdw]\n             If no units are specified, this primary evaluates to true if the\n             difference between the time of last change of file status infor-\n             mation and the time find was started, rounded up to the next full\n             24-hour period, is n 24-hour periods.\n\n             If units are specified, this primary evaluates to true if the\n             difference between the time of last change of file status infor-\n             mation and the time find was started is exactly n units.  Please\n             refer to the -atime primary description for information on sup-\n             ported time units.\n"},{"name":"-d","option":{"type":"flag_option","flag_name":"d"},"description":"\n     -d      Same as depth.  GNU find implements this as a primary in mistaken\n             emulation of FreeBSD find(1).\n"},{"name":"-daystart","option":{"type":"flag_option","flag_name":"daystart"},"description":"\n     -daystart\n            Measure times (for -amin, -atime, -cmin, -ctime, -mmin, and -mtime) \n            from the beginning of today rather than from 24 hours ago. \n            This option only affects tests which appear later on the command line.\n"},{"name":"-delete","option":{"type":"flag_option","flag_name":"delete"},"description":"\n     -delete\n             Delete found files and/or directories.  Always returns true.\n             This executes from the current working directory as find recurses\n             down the tree.  It will not attempt to delete a filename with a\n             ``/'' character in its pathname relative to ``.'' for security\n             reasons.  Depth-first traversal processing is implied by this\n             option.  Following symlinks is incompatible with this option.\n"},{"name":"-depth","option":{"type":"flag_option","flag_name":"depth"},"description":"\n     -depth  Always true; same as the -d option.\n"},{"name":"-depth n","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"depth"},{"type":"argument_option","arg_name":"n","arg_type":"Unknown","isList":false}]},"description":"\n     -depth n\n             True if the depth of the file relative to the starting point of\n             the traversal is n.\n"},{"name":"-empty","option":{"type":"flag_option","flag_name":"empty"},"description":"\n     -empty  True if the current file or directory is empty.\n"},{"name":"-exec utility [argument...]","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"exec"},{"type":"argument_option","arg_name":"utility","arg_type":"Unknown","isList":false},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"argument","arg_type":"Unknown","isList":true}}]},"description":"\n     -exec utility [argument ...] ;\n             True if the program named utility returns a zero value as its\n             exit status.  Optional arguments may be passed to the utility.\n             The expression must be terminated by a semicolon (``;'').  If you\n             invoke find from a shell you may need to quote the semicolon if\n             the shell would otherwise treat it as a control operator.  If the\n             string ``{}'' appears anywhere in the utility name or the argu-\n             ments it is replaced by the pathname of the current file.\n             Utility will be executed from the directory from which find was\n             executed.  Utility and arguments are not subject to the further\n             expansion of shell patterns and constructs.\n"},{"name":"-exec utility [argument...]","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"exec"},{"type":"argument_option","arg_name":"utility","arg_type":"Unknown","isList":false},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"argument","arg_type":"Unknown","isList":true}}]},"description":"\n     -exec utility [argument ...] {} +\n             Same as -exec, except that ``{}'' is replaced with as many path-\n             names as possible for each invocation of utility.  This behaviour\n             is similar to that of xargs(1).\n"},{"name":"-execdir utility [argument...]","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"execdir"},{"type":"argument_option","arg_name":"utility","arg_type":"Unknown","isList":false},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"argument","arg_type":"Unknown","isList":true}}]},"description":"\n     -execdir utility [argument ...] ;\n             The -execdir primary is identical to the -exec primary with the\n             exception that utility will be executed from the directory that\n             holds the current file.  The filename substituted for the string\n             ``{}'' is not qualified.\n"},{"name":"-execdir utility [argument...]","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"execdir"},{"type":"argument_option","arg_name":"utility","arg_type":"Unknown","isList":false},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"argument","arg_type":"Unknown","isList":true}}]},"description":"\n     -execdir utility [argument ...] {} +\n             Same as -execdir, except that ``{}'' is replaced with as many\n             pathnames as possible for each invocation of utility.  This be-\n             haviour is similar to that of xargs(1).\n"},{"name":"-flags","option":{"type":"flag_option","flag_name":"flags"},"description":"\n     -flags [-|+]flags,notflags\n             The flags are specified using symbolic names (see chflags(1)).\n             Those with the \"no\" prefix (except \"nodump\") are said to be\n             notflags.  Flags in flags are checked to be set, and flags in\n             notflags are checked to be not set.  Note that this is different\n             from -perm, which only allows the user to specify mode bits that\n             are set.\n\n             If flags are preceded by a dash (``-''), this primary evaluates\n             to true if at least all of the bits in flags and none of the bits\n             in notflags are set in the file's flags bits.  If flags are pre-\n             ceded by a plus (``+''), this primary evaluates to true if any of\n             the bits in flags is set in the file's flags bits, or any of the\n             bits in notflags is not set in the file's flags bits.  Otherwise,\n             this primary evaluates to true if the bits in flags exactly match\n             the file's flags bits, and none of the flags bits match those of\n             notflags.\n"},{"name":"-fstype type","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"fstype"},{"type":"argument_option","arg_name":"type","arg_type":"Unknown","isList":false}]},"description":"\n     -fstype type\n             True if the file is contained in a file system of type type.  The\n             lsvfs(1) command can be used to find out the types of file sys-\n             tems that are available on the system.  In addition, there are\n             two pseudo-types, ``local'' and ``rdonly''.  The former matches\n             any file system physically mounted on the system where the find\n             is being executed and the latter matches any file system which is\n             mounted read-only.\n"},{"name":"-gid gname","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"gid"},{"type":"argument_option","arg_name":"gname","arg_type":"Unknown","isList":false}]},"description":"\n     -gid gname\n             The same thing as -group gname for compatibility with GNU find.\n             GNU find imposes a restriction that gname is numeric, while\n             find(1) does not.\n"},{"name":"-group gname","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"group"},{"type":"argument_option","arg_name":"gname","arg_type":"Unknown","isList":false}]},"description":"\n     -group gname\n             True if the file belongs to the group gname.  If gname is numeric\n             and there is no such group name, then gname is treated as a group\n             ID.\n"},{"name":"-ignore_readdir_race","option":{"type":"flag_option","flag_name":"ignore_readdir_race"},"description":"\n     -ignore_readdir_race\n             This option is for GNU find compatibility and is ignored.\n"},{"name":"-ilname pattern","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"ilname"},{"type":"argument_option","arg_name":"pattern","arg_type":"Unknown","isList":false}]},"description":"\n     -ilname pattern\n             Like -lname, but the match is case insensitive.  This is a GNU\n             find extension.\n"},{"name":"-iname pattern","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"iname"},{"type":"argument_option","arg_name":"pattern","arg_type":"Unknown","isList":false}]},"description":"\n     -iname pattern\n             Like -name, but the match is case insensitive.\n"},{"name":"-inum n","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"inum"},{"type":"argument_option","arg_name":"n","arg_type":"Unknown","isList":false}]},"description":"\n     -inum n\n             True if the file has inode number n.\n"},{"name":"-ipath pattern","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"ipath"},{"type":"argument_option","arg_name":"pattern","arg_type":"Unknown","isList":false}]},"description":"\n     -ipath pattern\n             Like -path, but the match is case insensitive.\n"},{"name":"-iregex pattern","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"iregex"},{"type":"argument_option","arg_name":"pattern","arg_type":"Unknown","isList":false}]},"description":"\n     -iregex pattern\n             Like -regex, but the match is case insensitive.\n"},{"name":"-iwholename pattern","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"iwholename"},{"type":"argument_option","arg_name":"pattern","arg_type":"Unknown","isList":false}]},"description":"\n     -iwholename pattern\n             The same thing as -ipath, for GNU find compatibility.\n"},{"name":"-links n","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"links"},{"type":"argument_option","arg_name":"n","arg_type":"Unknown","isList":false}]},"description":"\n     -links n\n             True if the file has n links.\n"},{"name":"-lname pattern","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"lname"},{"type":"argument_option","arg_name":"pattern","arg_type":"Unknown","isList":false}]},"description":"\n     -lname pattern\n             Like -name, but the contents of the symbolic link are matched\n             instead of the file name.  Note that this only matches broken\n             symbolic links if symbolic links are being followed.  This is a\n             GNU find extension.\n"},{"name":"-ls","option":{"type":"flag_option","flag_name":"ls"},"description":"\n     -ls     This primary always evaluates to true.  The following information\n             for the current file is written to standard output: its inode\n             number, size in 512-byte blocks, file permissions, number of hard\n             links, owner, group, size in bytes, last modification time, and\n             pathname.  If the file is a block or character special file, the\n             device number will be displayed instead of the size in bytes.  If\n             the file is a symbolic link, the pathname of the linked-to file\n             will be displayed preceded by ``->''.  The format is identical to\n             that produced by ``ls -dgils''.\n"},{"name":"-maxdepth n","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"maxdepth"},{"type":"argument_option","arg_name":"n","arg_type":"Unknown","isList":false}]},"description":"\n     -maxdepth n\n             Always true; descend at most n directory levels below the command\n             line arguments.  If any -maxdepth primary is specified, it\n             applies to the entire expression even if it would not normally be\n             evaluated.  ``-maxdepth 0'' limits the whole search to the com-\n             mand line arguments.\n"},{"name":"-mindepth n","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"mindepth"},{"type":"argument_option","arg_name":"n","arg_type":"Unknown","isList":false}]},"description":"\n     -mindepth n\n             Always true; do not apply any tests or actions at levels less\n             than n.  If any -mindepth primary is specified, it applies to the\n             entire expression even if it would not normally be evaluated.\n             ``-mindepth 1'' processes all but the command line arguments.\n"},{"name":"-mmin n","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"mmin"},{"type":"argument_option","arg_name":"n","arg_type":"Unknown","isList":false}]},"description":"\n     -mmin n\n             True if the difference between the file last modification time\n             and the time find was started, rounded up to the next full\n             minute, is n minutes.\n"},{"name":"-mnewer file","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"mnewer"},{"type":"argument_option","arg_name":"file","arg_type":"Unknown","isList":false}]},"description":"\n     -mnewer file\n             Same as -newer.\n"},{"name":"-mount","option":{"type":"flag_option","flag_name":"mount"},"description":"\n     -mount  The same thing as -xdev, for GNU find compatibility.\n"},{"name":"-mtime n [smhdw]","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"mtime"},{"type":"argument_option","arg_name":"n","arg_type":"Unknown","isList":false},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"smhdw","arg_type":"Unknown","isList":false}}]},"description":"\n     -mtime n[smhdw]\n             If no units are specified, this primary evaluates to true if the\n             difference between the file last modification time and the time\n             find was started, rounded up to the next full 24-hour period, is\n             n 24-hour periods.\n\n             If units are specified, this primary evaluates to true if the\n             difference between the file last modification time and the time\n             find was started is exactly n units.  Please refer to the -atime\n             primary description for information on supported time units.\n"},{"name":"-name pattern","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"name"},{"type":"argument_option","arg_name":"pattern","arg_type":"Unknown","isList":false}]},"description":"\n     -name pattern\n             True if the last component of the pathname being examined matches\n             pattern.  Special shell pattern matching characters (``['',\n             ``]'', ``*'', and ``?'') may be used as part of pattern.  These\n             characters may be matched explicitly by escaping them with a\n             backslash (``\\'').\n"},{"name":"-newer file","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"newer"},{"type":"argument_option","arg_name":"file","arg_type":"Unknown","isList":false}]},"description":"\n     -newer file\n             True if the current file has a more recent last modification time\n             than file.\n"},{"name":"-newerXY file","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"newerXY"},{"type":"argument_option","arg_name":"file","arg_type":"Unknown","isList":false}]},"description":"\n     -newerXY file\n             True if the current file has a more recent last access time\n             (X=a), inode creation time (X=B), change time (X=c), or modifica-\n             tion time (X=m) than the last access time (Y=a), inode creation\n             time (Y=B), change time (Y=c), or modification time (Y=m) of\n             file.  In addition, if Y=t, then file is instead interpreted as a\n             direct date specification of the form understood by cvs(1).  Note\n             that -newermm is equivalent to -newer.\n"},{"name":"-nogroup","option":{"type":"flag_option","flag_name":"nogroup"},"description":"\n     -nogroup\n             True if the file belongs to an unknown group.\n"},{"name":"-noignore_readdir_race","option":{"type":"flag_option","flag_name":"noignore_readdir_race"},"description":"\n     -noignore_readdir_race\n             This option is for GNU find compatibility and is ignored.\n"},{"name":"-noleaf","option":{"type":"flag_option","flag_name":"noleaf"},"description":"\n     -noleaf\n             This option is for GNU find compatibility.  In GNU find it dis-\n             ables an optimization not relevant to find(1), so it is ignored.\n"},{"name":"-nouser","option":{"type":"flag_option","flag_name":"nouser"},"description":"\n     -nouser\n             True if the file belongs to an unknown user.\n"},{"name":"-ok utility [argument...]","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"ok"},{"type":"argument_option","arg_name":"utility","arg_type":"Unknown","isList":false},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"argument","arg_type":"Unknown","isList":true}}]},"description":"\n     -ok utility [argument ...] ;\n             The -ok primary is identical to the -exec primary with the excep-\n             tion that find requests user affirmation for the execution of the\n             utility by printing a message to the terminal and reading a\n             response.  If the response is not affirmative (`y' in the\n             ``POSIX'' locale), the command is not executed and the value of\n             the -ok expression is false.\n"},{"name":"-okdir utility [argument...]","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"okdir"},{"type":"argument_option","arg_name":"utility","arg_type":"Unknown","isList":false},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"argument","arg_type":"Unknown","isList":true}}]},"description":"\n     -okdir utility [argument ...] ;\n             The -okdir primary is identical to the -execdir primary with the\n             same exception as described for the -ok primary.\n"},{"name":"-path pattern","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"path"},{"type":"argument_option","arg_name":"pattern","arg_type":"Unknown","isList":false}]},"description":"\n     -path pattern\n             True if the pathname being examined matches pattern.  Special\n             shell pattern matching characters (``['', ``]'', ``*'', and\n             ``?'') may be used as part of pattern.  These characters may be\n             matched explicitly by escaping them with a backslash (``\\'').\n             Slashes (``/'') are treated as normal characters and do not have\n             to be matched explicitly.\n"},{"name":"-perm","option":{"type":"flag_option","flag_name":"perm"},"description":"\n     -perm [-|+]mode\n             The mode may be either symbolic (see chmod(1)) or an octal num-\n             ber.  If the mode is symbolic, a starting value of zero is\n             assumed and the mode sets or clears permissions without regard to\n             the process' file mode creation mask.  If the mode is octal, only\n             bits 07777 (S_ISUID | S_ISGID | S_ISTXT | S_IRWXU | S_IRWXG |\n             S_IRWXO) of the file's mode bits participate in the comparison.\n             If the mode is preceded by a dash (``-''), this primary evaluates\n             to true if at least all of the bits in the mode are set in the\n             file's mode bits.  If the mode is preceded by a plus (``+''),\n             this primary evaluates to true if any of the bits in the mode are\n             set in the file's mode bits.  Otherwise, this primary evaluates\n             to true if the bits in the mode exactly match the file's mode\n             bits.  Note, the first character of a symbolic mode may not be a\n             dash (``-'').\n"},{"name":"-print","option":{"type":"flag_option","flag_name":"print"},"description":"\n     -print  This primary always evaluates to true.  It prints the pathname of\n             the current file to standard output.  If none of -exec, -ls,\n             -print, -print0, or -ok is specified, the given expression shall\n             be effectively replaced by ( given expression ) -print.\n"},{"name":"-print0","option":{"type":"flag_option","flag_name":"print0"},"description":"\n     -print0\n             This primary always evaluates to true.  It prints the pathname of\n             the current file to standard output, followed by an ASCII NUL\n             character (character code 0).\n"},{"name":"-prune","option":{"type":"flag_option","flag_name":"prune"},"description":"\n     -prune  This primary always evaluates to true.  It causes find to not\n             descend into the current file.  Note, the -prune primary has no\n             effect if the -d option was specified.\n"},{"name":"-regex pattern","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"regex"},{"type":"argument_option","arg_name":"pattern","arg_type":"Unknown","isList":false}]},"description":"\n     -regex pattern\n             True if the whole path of the file matches pattern using regular\n             expression.  To match a file named ``./foo/xyzzy'', you can use\n             the regular expression ``.*/[xyz]*'' or ``.*/foo/.*'', but not\n             ``xyzzy'' or ``/foo/''.\n"},{"name":"-samefile name","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"samefile"},{"type":"argument_option","arg_name":"name","arg_type":"Unknown","isList":false}]},"description":"\n     -samefile name\n             True if the file is a hard link to name.  If the command option\n             -L is specified, it is also true if the file is a symbolic link\n             and points to name.\n"},{"name":"-size n [ckMGTP]","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"size"},{"type":"argument_option","arg_name":"n","arg_type":"Unknown","isList":false},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"ckMGTP","arg_type":"Unknown","isList":false}}]},"description":"\n     -size n[ckMGTP]\n             True if the file's size, rounded up, in 512-byte blocks is n.  If\n             n is followed by a c, then the primary is true if the file's size\n             is n bytes (characters).  Similarly if n is followed by a scale\n             indicator then the file's size is compared to n scaled as:\n\n             k       kilobytes (1024 bytes)\n             M       megabytes (1024 kilobytes)\n             G       gigabytes (1024 megabytes)\n             T       terabytes (1024 gigabytes)\n             P       petabytes (1024 terabytes)\n"},{"name":"-type t","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"type"},{"type":"argument_option","arg_name":"t","arg_type":"Unknown","isList":false}]},"description":"\n     -type t\n             True if the file is of the specified type.  Possible file types\n             are as follows:\n\n             b       block special\n             c       character special\n             d       directory\n             f       regular file\n             l       symbolic link\n             p       FIFO\n             s       socket\n"},{"name":"-uid uname","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"uid"},{"type":"argument_option","arg_name":"uname","arg_type":"Unknown","isList":false}]},"description":"\n     -uid uname\n             The same thing as -user uname for compatibility with GNU find.\n             GNU find imposes a restriction that uname is numeric, while\n             find(1) does not.\n"},{"name":"-user uname","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"user"},{"type":"argument_option","arg_name":"uname","arg_type":"Unknown","isList":false}]},"description":"\n     -user uname\n             True if the file belongs to the user uname.  If uname is numeric\n             and there is no such user name, then uname is treated as a user\n             ID.\n"},{"name":"-wholename pattern","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"wholename"},{"type":"argument_option","arg_name":"pattern","arg_type":"Unknown","isList":false}]},"description":"\n     -wholename pattern\n             The same thing as -path, for GNU find compatibility.\n"},{"name":"-xattr","option":{"type":"flag_option","flag_name":"xattr"},"description":"\n     -xattr  True if the file has any extended attributes.\n"},{"name":"-xattrname name","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"xattrname"},{"type":"argument_option","arg_name":"name","arg_type":"Unknown","isList":false}]},"description":"\n     -xattrname name\n             True if the file has an extended attribute with the specified\n             name.\n"}],"name":"find"},{"aliases":["mv"],"description":"mv: move files\n\n     In its first form, the mv utility renames the file named by the source\n     operand to the destination path named by the target operand.  This form\n     is assumed when the last operand does not name an already existing direc-\n     tory.\n\n     In its second form, mv moves each file named by a source operand to a\n     destination file in the existing directory named by the directory oper-\n     and.  The destination path for each operand is the pathname produced by\n     the concatenation of the last operand, a slash, and the final pathname\n     component of the named file.\n","rawSynopsis":"mv [-f | -i | -n] [-v] source target\nmv [-f | -i | -n] [-v] source ... directory","optionLists":[{"type":"compound_options","commands":[{"type":"optional_option","cmd":{"type":"exclusive_options","commands":[{"type":"flag_option","flag_name":"f"},{"type":"flag_option","flag_name":"i"},{"type":"flag_option","flag_name":"n"}]}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"v"}},{"type":"argument_option","arg_name":"source","arg_type":"Unknown","isList":false},{"type":"argument_option","arg_name":"target","arg_type":"Unknown","isList":false}]},{"type":"compound_options","commands":[{"type":"optional_option","cmd":{"type":"exclusive_options","commands":[{"type":"flag_option","flag_name":"f"},{"type":"flag_option","flag_name":"i"},{"type":"flag_option","flag_name":"n"}]}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"v"}},{"type":"argument_option","arg_name":"source","arg_type":"Unknown","isList":true},{"type":"argument_option","arg_name":"directory","arg_type":"Unknown","isList":false}]}],"optionDesc":[{"name":"-f","option":{"type":"flag_option","flag_name":"f"},"description":"\n     -f      Do not prompt for confirmation before overwriting the destination\n             path.  (The -f option overrides any previous -i or -n options.)\n"},{"name":"-i","option":{"type":"flag_option","flag_name":"i"},"description":"\n     -i      Cause mv to write a prompt to standard error before moving a file\n             that would overwrite an existing file.  If the response from the\n             standard input begins with the character `y' or `Y', the move is\n             attempted.  (The -i option overrides any previous -f or -n\n             options.)\n"},{"name":"-n","option":{"type":"flag_option","flag_name":"n"},"description":"\n     -n      Do not overwrite an existing file.  (The -n option overrides any\n             previous -f or -i options.)\n"},{"name":"-v","option":{"type":"flag_option","flag_name":"v"},"description":"\n     -v      Cause mv to be verbose, showing files after they are moved.\n"}],"name":"mv"},{"aliases":["sort"],"description":"sort: sort lines of text files\n\n       Write sorted concatenation of all FILE(s) to standard output.\n\n       Mandatory  arguments  to  long  options are mandatory for short options\n","rawSynopsis":"sort [-bdfgiMnrckmosStTuz] [FILE ...]","optionLists":[{"type":"compound_options","commands":[{"type":"compound_options","commands":[{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"b"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"d"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"f"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"g"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"i"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"M"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"n"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"r"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"c"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"k"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"m"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"o"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"s"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"S"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"t"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"T"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"u"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"z"}}]},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"FILE","arg_type":"Unknown","isList":true}}]}],"optionDesc":[{"name":"-b","option":{"type":"flag_option","flag_name":"b"},"description":"\n       -b, --ignore-leading-blanks\n              ignore leading blanks\n"},{"name":"-d","option":{"type":"flag_option","flag_name":"d"},"description":"\n       -d, --dictionary-order\n              consider only blanks and alphanumeric characters\n"},{"name":"-f","option":{"type":"flag_option","flag_name":"f"},"description":"\n       -f, --ignore-case\n              fold lower case to upper case characters\n"},{"name":"-g","option":{"type":"flag_option","flag_name":"g"},"description":"\n       -g, --general-numeric-sort\n              compare according to general numerical value\n"},{"name":"-i","option":{"type":"flag_option","flag_name":"i"},"description":"\n       -i, --ignore-nonprinting\n              consider only printable characters\n"},{"name":"-M","option":{"type":"flag_option","flag_name":"M"},"description":"\n       -M, --month-sort\n              compare (unknown) < `JAN' < ... < `DEC'\n"},{"name":"-n","option":{"type":"flag_option","flag_name":"n"},"description":"\n       -n, --numeric-sort\n              compare according to string numerical value\n"},{"name":"-r","option":{"type":"flag_option","flag_name":"r"},"description":"\n       -r, --reverse\n              reverse the result of comparisons\n"}],"name":"sort"},{"aliases":["grep","egrep","fgrep","zgrep","zegrep","zfgrep"],"description":"grep: file pattern searcher\n\n     The grep utility searches any given input files, selecting lines that\n     match one or more patterns.  By default, a pattern matches an input line\n     if the regular expression (RE) in the pattern matches the input line\n     without its trailing newline.  An empty expression matches every line.\n     Each input line that matches at least one of the patterns is written to\n     the standard output.\n\n     grep is used for simple patterns and basic regular expressions (BREs);\n     egrep can handle extended regular expressions (EREs).  See re_format(7)\n     for more information on regular expressions.  fgrep is quicker than both\n     grep and egrep, but can only handle fixed patterns (i.e. it does not\n     interpret regular expressions).  Patterns may consist of one or more\n     lines, allowing any of the pattern lines to match a portion of the input.\n\n     zgrep, zegrep, and zfgrep act like grep, egrep, and fgrep, respectively,\n     but accept input files compressed with the compress(1) or gzip(1) com-\n     pression utilities.\n","rawSynopsis":"grep [-abcdDEFGHhIiJLlmnOopqRSsUVvwxZ] [-A num] [-B num] [-C[num]]\n[-e pattern] [-f file] [--binary-files=value] [--color[=when]]\n[--colour[=when]] [--context[=num]] [--label] [--line-buffered]\n[--null] [pattern] [file ...]","optionLists":[{"type":"compound_options","commands":[{"type":"compound_options","commands":[{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"a"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"b"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"c"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"d"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"D"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"E"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"F"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"G"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"H"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"h"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"I"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"i"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"J"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"L"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"l"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"m"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"n"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"O"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"o"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"p"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"q"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"R"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"S"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"s"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"U"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"V"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"v"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"w"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"x"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"Z"}}]},{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"A"},{"type":"argument_option","arg_name":"num","arg_type":"Unknown","isList":false}]}},{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"B"},{"type":"argument_option","arg_name":"num","arg_type":"Unknown","isList":false}]}},{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"C"},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"num","arg_type":"Unknown","isList":false}}]}},{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"e"},{"type":"argument_option","arg_name":"pattern","arg_type":"Unknown","isList":false}]}},{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"f"},{"type":"argument_option","arg_name":"file","arg_type":"Unknown","isList":false}]}},{"type":"optional_option","cmd":{"type":"long_flag_option","flag_name":"binary-files","arg_exists":true,"arg_optional":false,"argument":{"type":"argument_option","arg_name":"value","arg_type":"Unknown","isList":false}}},{"type":"optional_option","cmd":{"type":"long_flag_option","flag_name":"color","arg_exists":true,"arg_optional":true,"argument":{"type":"argument_option","arg_name":"when","arg_type":"Unknown","isList":false}}},{"type":"optional_option","cmd":{"type":"long_flag_option","flag_name":"colour","arg_exists":true,"arg_optional":true,"argument":{"type":"argument_option","arg_name":"when","arg_type":"Unknown","isList":false}}},{"type":"optional_option","cmd":{"type":"long_flag_option","flag_name":"context","arg_exists":true,"arg_optional":true,"argument":{"type":"argument_option","arg_name":"num","arg_type":"Unknown","isList":false}}},{"type":"optional_option","cmd":{"type":"long_flag_option","flag_name":"label","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}}},{"type":"optional_option","cmd":{"type":"long_flag_option","flag_name":"line-buffered","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}}},{"type":"optional_option","cmd":{"type":"long_flag_option","flag_name":"null","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}}},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"pattern","arg_type":"Unknown","isList":false}},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"file","arg_type":"Unknown","isList":true}}]}],"optionDesc":[{"name":"-A num","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"A"},{"type":"argument_option","arg_name":"num","arg_type":"Unknown","isList":false}]},"description":"\n     -A num, --after-context=num\n             Print num lines of trailing context after each match.  See also\n             the -B and -C options.\n"},{"name":"-a","option":{"type":"flag_option","flag_name":"a"},"description":"\n     -a, --text\n             Treat all files as ASCII text.  Normally grep will simply print\n             ``Binary file ... matches'' if files contain binary characters.\n             Use of this option forces grep to output lines matching the spec-\n             ified pattern.\n"},{"name":"-B num","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"B"},{"type":"argument_option","arg_name":"num","arg_type":"Unknown","isList":false}]},"description":"\n     -B num, --before-context=num\n             Print num lines of leading context before each match.  See also\n             the -A and -C options.\n"},{"name":"-b","option":{"type":"flag_option","flag_name":"b"},"description":"\n     -b, --byte-offset\n             The offset in bytes of a matched pattern is displayed in front of\n             the respective matched line.\n"},{"name":"-c","option":{"type":"flag_option","flag_name":"c"},"description":"\n     -c, --count\n             Only a count of selected lines is written to standard output.\n"},{"name":"--colour","option":{"type":"long_flag_option","flag_name":"colour","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n     --colour=[when, --color=[when]]\n             Mark up the matching text with the expression stored in\n             GREP_COLOR environment variable.  The possible values of when can\n             be `never', `always' or `auto'.\n"},{"name":"-D action","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"D"},{"type":"argument_option","arg_name":"action","arg_type":"Unknown","isList":false}]},"description":"\n     -D action, --devices=action\n             Specify the demanded action for devices, FIFOs and sockets.  The\n             default action is `read', which means, that they are read as if\n             they were normal files.  If the action is set to `skip', devices\n             will be silently skipped.\n"},{"name":"-d action","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"d"},{"type":"argument_option","arg_name":"action","arg_type":"Unknown","isList":false}]},"description":"\n     -d action, --directories=action\n             Specify the demanded action for directories.  It is `read' by\n             default, which means that the directories are read in the same\n             manner as normal files.  Other possible values are `skip' to\n             silently ignore the directories, and `recurse' to read them\n             recursively, which has the same effect as the -R and -r option.\n"},{"name":"-E","option":{"type":"flag_option","flag_name":"E"},"description":"\n     -E, --extended-regexp\n             Interpret pattern as an extended regular expression (i.e. force\n             grep to behave as egrep).\n"},{"name":"-e pattern","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"e"},{"type":"argument_option","arg_name":"pattern","arg_type":"Unknown","isList":false}]},"description":"\n     -e pattern, --regexp=pattern\n             Specify a pattern used during the search of the input: an input\n             line is selected if it matches any of the specified patterns.\n             This option is most useful when multiple -e options are used to\n             specify multiple patterns, or when a pattern begins with a dash\n             (`-').\n"},{"name":"--exclude","option":{"type":"long_flag_option","flag_name":"exclude","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n     --exclude\n             If specified, it excludes files matching the given filename pat-\n             tern from the search.  Note that --exclude patterns take priority\n             over --include patterns, and if no --include pattern is speci-\n             fied, all files are searched that are not excluded.  Patterns are\n             matched to the full path specified, not only to the filename com-\n             ponent.\n"},{"name":"--exclude-dir","option":{"type":"long_flag_option","flag_name":"exclude-dir","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n     --exclude-dir\n             If -R is specified, it excludes directories matching the given\n             filename pattern from the search.  Note that --exclude-dir pat-\n             terns take priority over --include-dir patterns, and if no\n             --include-dir pattern is specified, all directories are searched\n             that are not excluded.\n"},{"name":"-F","option":{"type":"flag_option","flag_name":"F"},"description":"\n     -F, --fixed-strings\n             Interpret pattern as a set of fixed strings (i.e. force grep to\n             behave as fgrep).\n"},{"name":"-f file","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"f"},{"type":"argument_option","arg_name":"file","arg_type":"Unknown","isList":false}]},"description":"\n     -f file, --file=file\n             Read one or more newline separated patterns from file.  Empty\n             pattern lines match every input line.  Newlines are not consid-\n             ered part of a pattern.  If file is empty, nothing is matched.\n"},{"name":"-G","option":{"type":"flag_option","flag_name":"G"},"description":"\n     -G, --basic-regexp\n             Interpret pattern as a basic regular expression (i.e. force grep\n             to behave as traditional grep).\n"},{"name":"-H","option":{"type":"flag_option","flag_name":"H"},"description":"\n     -H      Always print filename headers with output lines.\n"},{"name":"-h","option":{"type":"flag_option","flag_name":"h"},"description":"\n     -h, --no-filename\n             Never print filename headers (i.e. filenames) with output lines.\n"},{"name":"--help","option":{"type":"long_flag_option","flag_name":"help","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n     --help  Print a brief help message.\n"},{"name":"-I","option":{"type":"flag_option","flag_name":"I"},"description":"\n     -I      Ignore binary files.  This option is equivalent to\n             --binary-file=without-match option.\n"},{"name":"-i","option":{"type":"flag_option","flag_name":"i"},"description":"\n     -i, --ignore-case\n             Perform case insensitive matching.  By default, grep is case sen-\n             sitive.\n"},{"name":"--include","option":{"type":"long_flag_option","flag_name":"include","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n     --include\n             If specified, only files matching the given filename pattern are\n             searched.  Note that --exclude patterns take priority over\n             --include patterns.  Patterns are matched to the full path speci-\n             fied, not only to the filename component.\n"},{"name":"--include-dir","option":{"type":"long_flag_option","flag_name":"include-dir","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n     --include-dir\n             If -R is specified, only directories matching the given filename\n             pattern are searched.  Note that --exclude-dir patterns take pri-\n             ority over --include-dir patterns.\n"},{"name":"-J","option":{"type":"flag_option","flag_name":"J"},"description":"\n     -J, --bz2decompress\n             Decompress the bzip2(1) compressed file before looking for the\n             text.\n"},{"name":"-L","option":{"type":"flag_option","flag_name":"L"},"description":"\n     -L, --files-without-match\n             Only the names of files not containing selected lines are written\n             to standard output.  Pathnames are listed once per file searched.\n             If the standard input is searched, the string ``(standard\n             input)'' is written.\n"},{"name":"-l","option":{"type":"flag_option","flag_name":"l"},"description":"\n     -l, --files-with-matches\n             Only the names of files containing selected lines are written to\n             standard output.  grep will only search a file until a match has\n             been found, making searches potentially less expensive.  Path-\n             names are listed once per file searched.  If the standard input\n             is searched, the string ``(standard input)'' is written.\n"},{"name":"--mmap","option":{"type":"long_flag_option","flag_name":"mmap","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n     --mmap  Use mmap(2) instead of read(2) to read input, which can result in\n             better performance under some circumstances but can cause unde-\n             fined behaviour.\n"},{"name":"-m num","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"m"},{"type":"argument_option","arg_name":"num","arg_type":"Unknown","isList":false}]},"description":"\n     -m num, --max-count=num\n             Stop reading the file after num matches.\n"},{"name":"-n","option":{"type":"flag_option","flag_name":"n"},"description":"\n     -n, --line-number\n             Each output line is preceded by its relative line number in the\n             file, starting at line 1.  The line number counter is reset for\n             each file processed.  This option is ignored if -c, -L, -l, or -q\n             is specified.\n"},{"name":"--null","option":{"type":"long_flag_option","flag_name":"null","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n     --null  Prints a zero-byte after the file name.\n"},{"name":"-O","option":{"type":"flag_option","flag_name":"O"},"description":"\n     -O      If -R is specified, follow symbolic links only if they were\n             explicitly listed on the command line.  The default is not to\n             follow symbolic links.\n"},{"name":"-o","option":{"type":"flag_option","flag_name":"o"},"description":"\n     -o, --only-matching\n             Prints only the matching part of the lines.\n"},{"name":"-p","option":{"type":"flag_option","flag_name":"p"},"description":"\n     -p      If -R is specified, no symbolic links are followed.  This is the\n             default.\n"},{"name":"-q","option":{"type":"flag_option","flag_name":"q"},"description":"\n     -q, --quiet, --silent\n             Quiet mode: suppress normal output.  grep will only search a file\n             until a match has been found, making searches potentially less\n             expensive.\n"},{"name":"-q","option":{"type":"flag_option","flag_name":"q"},"description":"\n     -q, --quiet, --silent\n             Quiet mode: suppress normal output.  grep will only search a file\n             until a match has been found, making searches potentially less\n             expensive.\n"},{"name":"-R","option":{"type":"flag_option","flag_name":"R"},"description":"\n     -R, -r, --recursive\n             Recursively search subdirectories listed.\n"},{"name":"-R","option":{"type":"flag_option","flag_name":"R"},"description":"\n     -R, -r, --recursive\n             Recursively search subdirectories listed.\n"},{"name":"-S","option":{"type":"flag_option","flag_name":"S"},"description":"\n     -S      If -R is specified, all symbolic links are followed.  The default\n             is not to follow symbolic links.\n"},{"name":"-s","option":{"type":"flag_option","flag_name":"s"},"description":"\n     -s, --no-messages\n             Silent mode.  Nonexistent and unreadable files are ignored (i.e.\n             their error messages are suppressed).\n"},{"name":"-U","option":{"type":"flag_option","flag_name":"U"},"description":"\n     -U, --binary\n             Search binary files, but do not attempt to print them.\n"},{"name":"-V","option":{"type":"flag_option","flag_name":"V"},"description":"\n     -V, --version\n             Display version information and exit.\n"},{"name":"-v","option":{"type":"flag_option","flag_name":"v"},"description":"\n     -v, --invert-match\n             Selected lines are those not matching any of the specified pat-\n             terns.\n"},{"name":"-w","option":{"type":"flag_option","flag_name":"w"},"description":"\n     -w, --word-regexp\n             The expression is searched for as a word (as if surrounded by\n             `[[:<:]]' and `[[:>:]]'; see re_format(7)).\n"},{"name":"-x","option":{"type":"flag_option","flag_name":"x"},"description":"\n     -x, --line-regexp\n             Only input lines selected against an entire fixed string or regu-\n             lar expression are considered to be matching lines.\n"},{"name":"-y","option":{"type":"flag_option","flag_name":"y"},"description":"\n     -y      Equivalent to -i.  Obsoleted.\n"},{"name":"-Z","option":{"type":"flag_option","flag_name":"Z"},"description":"\n     -Z, -z, --decompress\n             Force grep to behave as zgrep.\n"},{"name":"-Z","option":{"type":"flag_option","flag_name":"Z"},"description":"\n     -Z, -z, --decompress\n             Force grep to behave as zgrep.\n"},{"name":"--binary-files[=value]","option":{"type":"long_flag_option","flag_name":"binary-files","arg_exists":true,"arg_optional":false,"argument":{"type":"argument_option","arg_name":"value","arg_type":"Unknown","isList":false}},"description":"\n     --binary-files=value\n             Controls searching and printing of binary files.  Options are\n             binary, the default: search binary files but do not print them;\n             without-match: do not search binary files; and text: treat all\n             files as text.\n"},{"name":"--context[=num]","option":{"type":"long_flag_option","flag_name":"context","arg_exists":true,"arg_optional":true,"argument":{"type":"argument_option","arg_name":"num","arg_type":"Unknown","isList":false}},"description":"\n     --context[=num]\n             Print num lines of leading and trailing context.  The default is\n             2.\n"},{"name":"--line-buffered","option":{"type":"long_flag_option","flag_name":"line-buffered","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n     --line-buffered\n             Force output to be line buffered.  By default, output is line\n             buffered when standard output is a terminal and block buffered\n             otherwise.\n"}],"name":"grep"},{"aliases":["grep","egrep","fgrep","zgrep","zegrep","zfgrep"],"description":"grep: file pattern searcher\n\n     The grep utility searches any given input files, selecting lines that\n     match one or more patterns.  By default, a pattern matches an input line\n     if the regular expression (RE) in the pattern matches the input line\n     without its trailing newline.  An empty expression matches every line.\n     Each input line that matches at least one of the patterns is written to\n     the standard output.\n\n     grep is used for simple patterns and basic regular expressions (BREs);\n     egrep can handle extended regular expressions (EREs).  See re_format(7)\n     for more information on regular expressions.  fgrep is quicker than both\n     grep and egrep, but can only handle fixed patterns (i.e. it does not\n     interpret regular expressions).  Patterns may consist of one or more\n     lines, allowing any of the pattern lines to match a portion of the input.\n\n     zgrep, zegrep, and zfgrep act like grep, egrep, and fgrep, respectively,\n     but accept input files compressed with the compress(1) or gzip(1) com-\n     pression utilities.\n","rawSynopsis":"grep [-abcdDEFGHhIiJLlmnOopqRSsUVvwxZ] [-A num] [-B num] [-C[num]]\n[-e pattern] [-f file] [--binary-files=value] [--color[=when]]\n[--colour[=when]] [--context[=num]] [--label] [--line-buffered]\n[--null] [pattern] [file ...]","optionLists":[{"type":"compound_options","commands":[{"type":"compound_options","commands":[{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"a"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"b"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"c"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"d"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"D"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"E"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"F"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"G"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"H"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"h"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"I"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"i"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"J"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"L"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"l"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"m"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"n"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"O"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"o"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"p"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"q"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"R"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"S"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"s"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"U"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"V"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"v"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"w"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"x"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"Z"}}]},{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"A"},{"type":"argument_option","arg_name":"num","arg_type":"Unknown","isList":false}]}},{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"B"},{"type":"argument_option","arg_name":"num","arg_type":"Unknown","isList":false}]}},{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"C"},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"num","arg_type":"Unknown","isList":false}}]}},{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"e"},{"type":"argument_option","arg_name":"pattern","arg_type":"Unknown","isList":false}]}},{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"f"},{"type":"argument_option","arg_name":"file","arg_type":"Unknown","isList":false}]}},{"type":"optional_option","cmd":{"type":"long_flag_option","flag_name":"binary-files","arg_exists":true,"arg_optional":false,"argument":{"type":"argument_option","arg_name":"value","arg_type":"Unknown","isList":false}}},{"type":"optional_option","cmd":{"type":"long_flag_option","flag_name":"color","arg_exists":true,"arg_optional":true,"argument":{"type":"argument_option","arg_name":"when","arg_type":"Unknown","isList":false}}},{"type":"optional_option","cmd":{"type":"long_flag_option","flag_name":"colour","arg_exists":true,"arg_optional":true,"argument":{"type":"argument_option","arg_name":"when","arg_type":"Unknown","isList":false}}},{"type":"optional_option","cmd":{"type":"long_flag_option","flag_name":"context","arg_exists":true,"arg_optional":true,"argument":{"type":"argument_option","arg_name":"num","arg_type":"Unknown","isList":false}}},{"type":"optional_option","cmd":{"type":"long_flag_option","flag_name":"label","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}}},{"type":"optional_option","cmd":{"type":"long_flag_option","flag_name":"line-buffered","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}}},{"type":"optional_option","cmd":{"type":"long_flag_option","flag_name":"null","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}}},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"pattern","arg_type":"Unknown","isList":false}},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"file","arg_type":"Unknown","isList":true}}]}],"optionDesc":[{"name":"-A num","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"A"},{"type":"argument_option","arg_name":"num","arg_type":"Unknown","isList":false}]},"description":"\n     -A num, --after-context=num\n             Print num lines of trailing context after each match.  See also\n             the -B and -C options.\n"},{"name":"-a","option":{"type":"flag_option","flag_name":"a"},"description":"\n     -a, --text\n             Treat all files as ASCII text.  Normally grep will simply print\n             ``Binary file ... matches'' if files contain binary characters.\n             Use of this option forces grep to output lines matching the spec-\n             ified pattern.\n"},{"name":"-B num","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"B"},{"type":"argument_option","arg_name":"num","arg_type":"Unknown","isList":false}]},"description":"\n     -B num, --before-context=num\n             Print num lines of leading context before each match.  See also\n             the -A and -C options.\n"},{"name":"-b","option":{"type":"flag_option","flag_name":"b"},"description":"\n     -b, --byte-offset\n             The offset in bytes of a matched pattern is displayed in front of\n             the respective matched line.\n"},{"name":"-c","option":{"type":"flag_option","flag_name":"c"},"description":"\n     -c, --count\n             Only a count of selected lines is written to standard output.\n"},{"name":"--colour","option":{"type":"long_flag_option","flag_name":"colour","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n     --colour=[when, --color=[when]]\n             Mark up the matching text with the expression stored in\n             GREP_COLOR environment variable.  The possible values of when can\n             be `never', `always' or `auto'.\n"},{"name":"-D action","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"D"},{"type":"argument_option","arg_name":"action","arg_type":"Unknown","isList":false}]},"description":"\n     -D action, --devices=action\n             Specify the demanded action for devices, FIFOs and sockets.  The\n             default action is `read', which means, that they are read as if\n             they were normal files.  If the action is set to `skip', devices\n             will be silently skipped.\n"},{"name":"-d action","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"d"},{"type":"argument_option","arg_name":"action","arg_type":"Unknown","isList":false}]},"description":"\n     -d action, --directories=action\n             Specify the demanded action for directories.  It is `read' by\n             default, which means that the directories are read in the same\n             manner as normal files.  Other possible values are `skip' to\n             silently ignore the directories, and `recurse' to read them\n             recursively, which has the same effect as the -R and -r option.\n"},{"name":"-E","option":{"type":"flag_option","flag_name":"E"},"description":"\n     -E, --extended-regexp\n             Interpret pattern as an extended regular expression (i.e. force\n             grep to behave as egrep).\n"},{"name":"-e pattern","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"e"},{"type":"argument_option","arg_name":"pattern","arg_type":"Unknown","isList":false}]},"description":"\n     -e pattern, --regexp=pattern\n             Specify a pattern used during the search of the input: an input\n             line is selected if it matches any of the specified patterns.\n             This option is most useful when multiple -e options are used to\n             specify multiple patterns, or when a pattern begins with a dash\n             (`-').\n"},{"name":"--exclude","option":{"type":"long_flag_option","flag_name":"exclude","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n     --exclude\n             If specified, it excludes files matching the given filename pat-\n             tern from the search.  Note that --exclude patterns take priority\n             over --include patterns, and if no --include pattern is speci-\n             fied, all files are searched that are not excluded.  Patterns are\n             matched to the full path specified, not only to the filename com-\n             ponent.\n"},{"name":"--exclude-dir","option":{"type":"long_flag_option","flag_name":"exclude-dir","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n     --exclude-dir\n             If -R is specified, it excludes directories matching the given\n             filename pattern from the search.  Note that --exclude-dir pat-\n             terns take priority over --include-dir patterns, and if no\n             --include-dir pattern is specified, all directories are searched\n             that are not excluded.\n"},{"name":"-F","option":{"type":"flag_option","flag_name":"F"},"description":"\n     -F, --fixed-strings\n             Interpret pattern as a set of fixed strings (i.e. force grep to\n             behave as fgrep).\n"},{"name":"-f file","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"f"},{"type":"argument_option","arg_name":"file","arg_type":"Unknown","isList":false}]},"description":"\n     -f file, --file=file\n             Read one or more newline separated patterns from file.  Empty\n             pattern lines match every input line.  Newlines are not consid-\n             ered part of a pattern.  If file is empty, nothing is matched.\n"},{"name":"-G","option":{"type":"flag_option","flag_name":"G"},"description":"\n     -G, --basic-regexp\n             Interpret pattern as a basic regular expression (i.e. force grep\n             to behave as traditional grep).\n"},{"name":"-H","option":{"type":"flag_option","flag_name":"H"},"description":"\n     -H      Always print filename headers with output lines.\n"},{"name":"-h","option":{"type":"flag_option","flag_name":"h"},"description":"\n     -h, --no-filename\n             Never print filename headers (i.e. filenames) with output lines.\n"},{"name":"--help","option":{"type":"long_flag_option","flag_name":"help","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n     --help  Print a brief help message.\n"},{"name":"-I","option":{"type":"flag_option","flag_name":"I"},"description":"\n     -I      Ignore binary files.  This option is equivalent to\n             --binary-file=without-match option.\n"},{"name":"-i","option":{"type":"flag_option","flag_name":"i"},"description":"\n     -i, --ignore-case\n             Perform case insensitive matching.  By default, grep is case sen-\n             sitive.\n"},{"name":"--include","option":{"type":"long_flag_option","flag_name":"include","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n     --include\n             If specified, only files matching the given filename pattern are\n             searched.  Note that --exclude patterns take priority over\n             --include patterns.  Patterns are matched to the full path speci-\n             fied, not only to the filename component.\n"},{"name":"--include-dir","option":{"type":"long_flag_option","flag_name":"include-dir","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n     --include-dir\n             If -R is specified, only directories matching the given filename\n             pattern are searched.  Note that --exclude-dir patterns take pri-\n             ority over --include-dir patterns.\n"},{"name":"-J","option":{"type":"flag_option","flag_name":"J"},"description":"\n     -J, --bz2decompress\n             Decompress the bzip2(1) compressed file before looking for the\n             text.\n"},{"name":"-L","option":{"type":"flag_option","flag_name":"L"},"description":"\n     -L, --files-without-match\n             Only the names of files not containing selected lines are written\n             to standard output.  Pathnames are listed once per file searched.\n             If the standard input is searched, the string ``(standard\n             input)'' is written.\n"},{"name":"-l","option":{"type":"flag_option","flag_name":"l"},"description":"\n     -l, --files-with-matches\n             Only the names of files containing selected lines are written to\n             standard output.  grep will only search a file until a match has\n             been found, making searches potentially less expensive.  Path-\n             names are listed once per file searched.  If the standard input\n             is searched, the string ``(standard input)'' is written.\n"},{"name":"--mmap","option":{"type":"long_flag_option","flag_name":"mmap","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n     --mmap  Use mmap(2) instead of read(2) to read input, which can result in\n             better performance under some circumstances but can cause unde-\n             fined behaviour.\n"},{"name":"-m num","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"m"},{"type":"argument_option","arg_name":"num","arg_type":"Unknown","isList":false}]},"description":"\n     -m num, --max-count=num\n             Stop reading the file after num matches.\n"},{"name":"-n","option":{"type":"flag_option","flag_name":"n"},"description":"\n     -n, --line-number\n             Each output line is preceded by its relative line number in the\n             file, starting at line 1.  The line number counter is reset for\n             each file processed.  This option is ignored if -c, -L, -l, or -q\n             is specified.\n"},{"name":"--null","option":{"type":"long_flag_option","flag_name":"null","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n     --null  Prints a zero-byte after the file name.\n"},{"name":"-O","option":{"type":"flag_option","flag_name":"O"},"description":"\n     -O      If -R is specified, follow symbolic links only if they were\n             explicitly listed on the command line.  The default is not to\n             follow symbolic links.\n"},{"name":"-o","option":{"type":"flag_option","flag_name":"o"},"description":"\n     -o, --only-matching\n             Prints only the matching part of the lines.\n"},{"name":"-p","option":{"type":"flag_option","flag_name":"p"},"description":"\n     -p      If -R is specified, no symbolic links are followed.  This is the\n             default.\n"},{"name":"-q","option":{"type":"flag_option","flag_name":"q"},"description":"\n     -q, --quiet, --silent\n             Quiet mode: suppress normal output.  grep will only search a file\n             until a match has been found, making searches potentially less\n             expensive.\n"},{"name":"-q","option":{"type":"flag_option","flag_name":"q"},"description":"\n     -q, --quiet, --silent\n             Quiet mode: suppress normal output.  grep will only search a file\n             until a match has been found, making searches potentially less\n             expensive.\n"},{"name":"-R","option":{"type":"flag_option","flag_name":"R"},"description":"\n     -R, -r, --recursive\n             Recursively search subdirectories listed.\n"},{"name":"-R","option":{"type":"flag_option","flag_name":"R"},"description":"\n     -R, -r, --recursive\n             Recursively search subdirectories listed.\n"},{"name":"-S","option":{"type":"flag_option","flag_name":"S"},"description":"\n     -S      If -R is specified, all symbolic links are followed.  The default\n             is not to follow symbolic links.\n"},{"name":"-s","option":{"type":"flag_option","flag_name":"s"},"description":"\n     -s, --no-messages\n             Silent mode.  Nonexistent and unreadable files are ignored (i.e.\n             their error messages are suppressed).\n"},{"name":"-U","option":{"type":"flag_option","flag_name":"U"},"description":"\n     -U, --binary\n             Search binary files, but do not attempt to print them.\n"},{"name":"-V","option":{"type":"flag_option","flag_name":"V"},"description":"\n     -V, --version\n             Display version information and exit.\n"},{"name":"-v","option":{"type":"flag_option","flag_name":"v"},"description":"\n     -v, --invert-match\n             Selected lines are those not matching any of the specified pat-\n             terns.\n"},{"name":"-w","option":{"type":"flag_option","flag_name":"w"},"description":"\n     -w, --word-regexp\n             The expression is searched for as a word (as if surrounded by\n             `[[:<:]]' and `[[:>:]]'; see re_format(7)).\n"},{"name":"-x","option":{"type":"flag_option","flag_name":"x"},"description":"\n     -x, --line-regexp\n             Only input lines selected against an entire fixed string or regu-\n             lar expression are considered to be matching lines.\n"},{"name":"-y","option":{"type":"flag_option","flag_name":"y"},"description":"\n     -y      Equivalent to -i.  Obsoleted.\n"},{"name":"-Z","option":{"type":"flag_option","flag_name":"Z"},"description":"\n     -Z, -z, --decompress\n             Force grep to behave as zgrep.\n"},{"name":"-Z","option":{"type":"flag_option","flag_name":"Z"},"description":"\n     -Z, -z, --decompress\n             Force grep to behave as zgrep.\n"},{"name":"--binary-files[=value]","option":{"type":"long_flag_option","flag_name":"binary-files","arg_exists":true,"arg_optional":false,"argument":{"type":"argument_option","arg_name":"value","arg_type":"Unknown","isList":false}},"description":"\n     --binary-files=value\n             Controls searching and printing of binary files.  Options are\n             binary, the default: search binary files but do not print them;\n             without-match: do not search binary files; and text: treat all\n             files as text.\n"},{"name":"--context[=num]","option":{"type":"long_flag_option","flag_name":"context","arg_exists":true,"arg_optional":true,"argument":{"type":"argument_option","arg_name":"num","arg_type":"Unknown","isList":false}},"description":"\n     --context[=num]\n             Print num lines of leading and trailing context.  The default is\n             2.\n"},{"name":"--line-buffered","option":{"type":"long_flag_option","flag_name":"line-buffered","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n     --line-buffered\n             Force output to be line buffered.  By default, output is line\n             buffered when standard output is a terminal and block buffered\n             otherwise.\n"}],"name":"grep"},{"aliases":["cp"],"description":"cp: copy files\n\n     In the first synopsis form, the cp utility copies the contents of the\n     source_file to the target_file.  In the second synopsis form, the con-\n     tents of each named source_file is copied to the destination\n     target_directory.  The names of the files themselves are not changed.  If\n     cp detects an attempt to copy a file to itself, the copy will fail.\n","rawSynopsis":"cp [-R [-H | -L | -P]] [-fi | -n] [-apvX] source_file target_file\ncp [-R [-H | -L | -P]] [-fi | -n] [-apvX] source_file ...\ntarget_directory","optionLists":[{"type":"compound_options","commands":[{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"R"},{"type":"optional_option","cmd":{"type":"exclusive_options","commands":[{"type":"flag_option","flag_name":"H"},{"type":"flag_option","flag_name":"L"},{"type":"flag_option","flag_name":"P"}]}}]}},{"type":"optional_option","cmd":{"type":"exclusive_options","commands":[{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"f"},{"type":"flag_option","flag_name":"i"}]},{"type":"flag_option","flag_name":"n"}]}},{"type":"compound_options","commands":[{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"a"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"p"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"v"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"X"}}]},{"type":"argument_option","arg_name":"source_file","arg_type":"Unknown","isList":false},{"type":"argument_option","arg_name":"target_file","arg_type":"Unknown","isList":false}]},{"type":"compound_options","commands":[{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"R"},{"type":"optional_option","cmd":{"type":"exclusive_options","commands":[{"type":"flag_option","flag_name":"H"},{"type":"flag_option","flag_name":"L"},{"type":"flag_option","flag_name":"P"}]}}]}},{"type":"optional_option","cmd":{"type":"exclusive_options","commands":[{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"f"},{"type":"flag_option","flag_name":"i"}]},{"type":"flag_option","flag_name":"n"}]}},{"type":"compound_options","commands":[{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"a"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"p"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"v"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"X"}}]},{"type":"argument_option","arg_name":"source_file","arg_type":"Unknown","isList":true},{"type":"argument_option","arg_name":"target_directory","arg_type":"Unknown","isList":false}]}],"optionDesc":[{"name":"-a","option":{"type":"flag_option","flag_name":"a"},"description":"\n     -a    Same as -pPR options. Preserves structure and attributes of files\n           but not directory structure.\n"},{"name":"-f","option":{"type":"flag_option","flag_name":"f"},"description":"\n     -f    If the destination file cannot be opened, remove it and create a\n           new file, without prompting for confirmation regardless of its per-\n           missions.  (The -f option overrides any previous -n option.)\n\n           The target file is not unlinked before the copy.  Thus, any exist-\n           ing access rights will be retained.\n"},{"name":"-H","option":{"type":"flag_option","flag_name":"H"},"description":"\n     -H    If the -R option is specified, symbolic links on the command line\n           are followed.  (Symbolic links encountered in the tree traversal\n           are not followed.)\n"},{"name":"-i","option":{"type":"flag_option","flag_name":"i"},"description":"\n     -i    Cause cp to write a prompt to the standard error output before\n           copying a file that would overwrite an existing file.  If the\n           response from the standard input begins with the character `y' or\n           `Y', the file copy is attempted.  (The -i option overrides any pre-\n           vious -n option.)\n"},{"name":"-L","option":{"type":"flag_option","flag_name":"L"},"description":"\n     -L    If the -R option is specified, all symbolic links are followed.\n"},{"name":"-n","option":{"type":"flag_option","flag_name":"n"},"description":"\n     -n    Do not overwrite an existing file.  (The -n option overrides any\n           previous -f or -i options.)\n"},{"name":"-P","option":{"type":"flag_option","flag_name":"P"},"description":"\n     -P    If the -R option is specified, no symbolic links are followed.\n           This is the default.\n"},{"name":"-p","option":{"type":"flag_option","flag_name":"p"},"description":"\n     -p    Cause cp to preserve the following attributes of each source file\n           in the copy: modification time, access time, file flags, file mode,\n           user ID, and group ID, as allowed by permissions.  Access Control\n           Lists (ACLs) and Extended Attributes (EAs), including resource\n           forks, will also be preserved.\n\n           If the user ID and group ID cannot be preserved, no error message\n           is displayed and the exit value is not altered.\n\n           If the source file has its set-user-ID bit on and the user ID can-\n           not be preserved, the set-user-ID bit is not preserved in the\n           copy's permissions.  If the source file has its set-group-ID bit on\n           and the group ID cannot be preserved, the set-group-ID bit is not\n           preserved in the copy's permissions.  If the source file has both\n           its set-user-ID and set-group-ID bits on, and either the user ID or\n           group ID cannot be preserved, neither the set-user-ID nor set-\n           group-ID bits are preserved in the copy's permissions.\n"},{"name":"-R","option":{"type":"flag_option","flag_name":"R"},"description":"\n     -R    If source_file designates a directory, cp copies the directory and\n           the entire subtree connected at that point.  If the source_file\n           ends in a /, the contents of the directory are copied rather than\n           the directory itself.  This option also causes symbolic links to be\n           copied, rather than indirected through, and for cp to create spe-\n           cial files rather than copying them as normal files.  Created\n           directories have the same mode as the corresponding source direc-\n           tory, unmodified by the process' umask.\n\n           In -R mode, cp will continue copying even if errors are detected.\n\n           Note that cp copies hard-linked files as separate files.  If you\n           need to preserve hard links, consider using tar(1), cpio(1), or\n           pax(1) instead.\n"},{"name":"-v","option":{"type":"flag_option","flag_name":"v"},"description":"\n     -v    Cause cp to be verbose, showing files as they are copied.\n"},{"name":"-X","option":{"type":"flag_option","flag_name":"X"},"description":"\n     -X    Do not copy Extended Attributes (EAs) or resource forks.\n"}],"name":"cp"},{"aliases":["ls"],"description":"ls: list directory contents\n\n     For each operand that names a file of a type other than directory, ls\n     displays its name as well as any requested, associated information.  For\n     each operand that names a file of type directory, ls displays the names\n     of files contained within that directory, as well as any requested, asso-\n     ciated information.\n\n     If no operands are given, the contents of the current directory are dis-\n     played.  If more than one operand is given, non-directory operands are\n     displayed first; directory and non-directory operands are sorted sepa-\n     rately and in lexicographical order.\n","rawSynopsis":"ls [-ABCFGHLOPRSTUW@abcdefghiklmnopqrstuwx1] [file ...]","optionLists":[{"type":"compound_options","commands":[{"type":"compound_options","commands":[{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"A"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"B"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"C"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"F"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"G"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"H"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"L"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"O"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"P"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"R"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"S"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"T"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"U"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"W"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"@"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"a"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"b"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"c"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"d"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"e"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"f"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"g"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"h"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"i"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"k"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"l"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"m"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"n"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"o"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"p"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"q"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"r"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"s"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"t"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"u"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"w"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"x"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"1"}}]},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"file","arg_type":"Unknown","isList":true}}]}],"optionDesc":[{"name":"-@","option":{"type":"flag_option","flag_name":"@"},"description":"\n     -@      Display extended attribute keys and sizes in long (-l) output.\n"},{"name":"-A","option":{"type":"flag_option","flag_name":"A"},"description":"\n     -A      List all entries except for . and ...  Always set for the super-\n             user.\n"},{"name":"-a","option":{"type":"flag_option","flag_name":"a"},"description":"\n     -a      Include directory entries whose names begin with a dot (.).\n"},{"name":"-B","option":{"type":"flag_option","flag_name":"B"},"description":"\n     -B      Force printing of non-printable characters (as defined by\n             ctype(3) and current locale settings) in file names as \\xxx,\n             where xxx is the numeric value of the character in octal.\n"},{"name":"-b","option":{"type":"flag_option","flag_name":"b"},"description":"\n     -b      As -B, but use C escape codes whenever possible.\n"},{"name":"-C","option":{"type":"flag_option","flag_name":"C"},"description":"\n     -C      Force multi-column output; this is the default when output is to\n             a terminal.\n"},{"name":"-c","option":{"type":"flag_option","flag_name":"c"},"description":"\n     -c      Use time when file status was last changed for sorting (-t) or\n             long printing (-l).\n"},{"name":"-d","option":{"type":"flag_option","flag_name":"d"},"description":"\n     -d      Directories are listed as plain files (not searched recursively).\n"},{"name":"-e","option":{"type":"flag_option","flag_name":"e"},"description":"\n     -e      Print the Access Control List (ACL) associated with the file, if\n             present, in long (-l) output.\n"},{"name":"-F","option":{"type":"flag_option","flag_name":"F"},"description":"\n     -F      Display a slash (`/') immediately after each pathname that is a\n             directory, an asterisk (`*') after each that is executable, an at\n             sign (`@') after each symbolic link, an equals sign (`=') after\n             each socket, a percent sign (`%') after each whiteout, and a ver-\n             tical bar (`|') after each that is a FIFO.\n"},{"name":"-f","option":{"type":"flag_option","flag_name":"f"},"description":"\n     -f      Output is not sorted.  This option turns on the -a option.\n"},{"name":"-G","option":{"type":"flag_option","flag_name":"G"},"description":"\n     -G      Enable colorized output.  This option is equivalent to defining\n             CLICOLOR in the environment.  (See below.)\n"},{"name":"-g","option":{"type":"flag_option","flag_name":"g"},"description":"\n     -g      This option is only available for compatibility with POSIX; it is\n             used to display the group name in the long (-l) format output\n             (the owner name is suppressed).\n"},{"name":"-H","option":{"type":"flag_option","flag_name":"H"},"description":"\n     -H      Symbolic links on the command line are followed.  This option is\n             assumed if none of the -F, -d, or -l options are specified.\n"},{"name":"-h","option":{"type":"flag_option","flag_name":"h"},"description":"\n     -h      When used with the -l option, use unit suffixes: Byte, Kilobyte,\n             Megabyte, Gigabyte, Terabyte and Petabyte in order to reduce the\n             number of digits to three or less using base 2 for sizes.\n"},{"name":"-i","option":{"type":"flag_option","flag_name":"i"},"description":"\n     -i      For each file, print the file's file serial number (inode num-\n             ber).\n"},{"name":"-k","option":{"type":"flag_option","flag_name":"k"},"description":"\n     -k      If the -s option is specified, print the file size allocation in\n             kilobytes, not blocks.  This option overrides the environment\n             variable BLOCKSIZE.\n"},{"name":"-L","option":{"type":"flag_option","flag_name":"L"},"description":"\n     -L      Follow all symbolic links to final target and list the file or\n             directory the link references rather than the link itself.  This\n             option cancels the -P option.\n"},{"name":"-l","option":{"type":"flag_option","flag_name":"l"},"description":"\n     -l      (The lowercase letter ``ell''.)  List in long format.  (See\n             below.)  If the output is to a terminal, a total sum for all the\n             file sizes is output on a line before the long listing.\n"},{"name":"-m","option":{"type":"flag_option","flag_name":"m"},"description":"\n     -m      Stream output format; list files across the page, separated by\n             commas.\n"},{"name":"-n","option":{"type":"flag_option","flag_name":"n"},"description":"\n     -n      Display user and group IDs numerically, rather than converting to\n             a user or group name in a long (-l) output.  This option turns on\n             the -l option.\n"},{"name":"-O","option":{"type":"flag_option","flag_name":"O"},"description":"\n     -O      Include the file flags in a long (-l) output.\n"},{"name":"-o","option":{"type":"flag_option","flag_name":"o"},"description":"\n     -o      List in long format, but omit the group id.\n"},{"name":"-P","option":{"type":"flag_option","flag_name":"P"},"description":"\n     -P      If argument is a symbolic link, list the link itself rather than\n             the object the link references.  This option cancels the -H and\n             -L options.\n"},{"name":"-p","option":{"type":"flag_option","flag_name":"p"},"description":"\n     -p      Write a slash (`/') after each filename if that file is a direc-\n             tory.\n"},{"name":"-q","option":{"type":"flag_option","flag_name":"q"},"description":"\n     -q      Force printing of non-graphic characters in file names as the\n             character `?'; this is the default when output is to a terminal.\n"},{"name":"-R","option":{"type":"flag_option","flag_name":"R"},"description":"\n     -R      Recursively list subdirectories encountered.\n"},{"name":"-r","option":{"type":"flag_option","flag_name":"r"},"description":"\n     -r      Reverse the order of the sort to get reverse lexicographical\n             order or the oldest entries first (or largest files last, if com-\n             bined with sort by size\n"},{"name":"-S","option":{"type":"flag_option","flag_name":"S"},"description":"\n     -S      Sort files by size\n"},{"name":"-s","option":{"type":"flag_option","flag_name":"s"},"description":"\n     -s      Display the number of file system blocks actually used by each\n             file, in units of 512 bytes, where partial units are rounded up\n             to the next integer value.  If the output is to a terminal, a\n             total sum for all the file sizes is output on a line before the\n             listing.  The environment variable BLOCKSIZE overrides the unit\n             size of 512 bytes.\n"},{"name":"-T","option":{"type":"flag_option","flag_name":"T"},"description":"\n     -T      When used with the -l (lowercase letter ``ell'') option, display\n             complete time information for the file, including month, day,\n             hour, minute, second, and year.\n"},{"name":"-t","option":{"type":"flag_option","flag_name":"t"},"description":"\n     -t      Sort by time modified (most recently modified first) before sort-\n             ing the operands by lexicographical order.\n"},{"name":"-u","option":{"type":"flag_option","flag_name":"u"},"description":"\n     -u      Use time of last access, instead of last modification of the file\n             for sorting (-t) or long printing (-l).\n"},{"name":"-U","option":{"type":"flag_option","flag_name":"U"},"description":"\n     -U      Use time of file creation, instead of last modification for sort-\n             ing (-t) or long output (-l).\n"},{"name":"-v","option":{"type":"flag_option","flag_name":"v"},"description":"\n     -v      Force unedited printing of non-graphic characters; this is the\n             default when output is not to a terminal.\n"},{"name":"-W","option":{"type":"flag_option","flag_name":"W"},"description":"\n     -W      Display whiteouts when scanning directories.  (-S) flag).\n"},{"name":"-w","option":{"type":"flag_option","flag_name":"w"},"description":"\n     -w      Force raw printing of non-printable characters.  This is the\n             default when output is not to a terminal.\n"},{"name":"-x","option":{"type":"flag_option","flag_name":"x"},"description":"\n     -x      The same as -C, except that the multi-column output is produced\n             with entries sorted across, rather than down, the columns.\n"}],"name":"ls"},{"aliases":["tar"],"description":"tar: manipulate tape archives\n\n     tar creates and manipulates streaming archive files.  This implementation\n     can extract from tar, pax, cpio, zip, jar, ar, and ISO 9660 cdrom images\n     and can create tar, pax, cpio, ar, and shar archives.\n\n     The first synopsis form shows a ``bundled'' option word.  This usage is\n     provided for compatibility with historical implementations.  See COMPATI-\n     BILITY below for details.\n","rawSynopsis":"tar [bundled-flags <args>] [<file> | <pattern> ...]\ntar {-c} [options] [files | directories]\ntar {-r} -f archive-file [options] [files | directories]\ntar {-u} -f archive-file [options] [files | directories]\ntar {-t} [options] [patterns]\ntar {-x} [options] [patterns]","optionLists":[{"type":"compound_options","commands":[{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"argument_option","arg_name":"bundled-flags","arg_type":"Unknown","isList":false},{"type":"argument_option","arg_name":"args","arg_type":"Unknown","isList":false}]}},{"type":"optional_option","cmd":{"type":"exclusive_options","commands":[{"type":"argument_option","arg_name":"file","arg_type":"Unknown","isList":false},{"type":"argument_option","arg_name":"pattern","arg_type":"Unknown","isList":true}]}}]},{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"c"},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"options","arg_type":"Unknown","isList":false}},{"type":"optional_option","cmd":{"type":"exclusive_options","commands":[{"type":"argument_option","arg_name":"files","arg_type":"Unknown","isList":false},{"type":"argument_option","arg_name":"directories","arg_type":"Unknown","isList":false}]}}]},{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"r"},{"type":"flag_option","flag_name":"f"},{"type":"argument_option","arg_name":"archive-file","arg_type":"Unknown","isList":false},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"options","arg_type":"Unknown","isList":false}},{"type":"optional_option","cmd":{"type":"exclusive_options","commands":[{"type":"argument_option","arg_name":"files","arg_type":"Unknown","isList":false},{"type":"argument_option","arg_name":"directories","arg_type":"Unknown","isList":false}]}}]},{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"u"},{"type":"flag_option","flag_name":"f"},{"type":"argument_option","arg_name":"archive-file","arg_type":"Unknown","isList":false},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"options","arg_type":"Unknown","isList":false}},{"type":"optional_option","cmd":{"type":"exclusive_options","commands":[{"type":"argument_option","arg_name":"files","arg_type":"Unknown","isList":false},{"type":"argument_option","arg_name":"directories","arg_type":"Unknown","isList":false}]}}]},{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"t"},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"options","arg_type":"Unknown","isList":false}},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"patterns","arg_type":"Unknown","isList":false}}]},{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"x"},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"options","arg_type":"Unknown","isList":false}},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"patterns","arg_type":"Unknown","isList":false}}]}],"optionDesc":[{"name":"-c","option":{"type":"flag_option","flag_name":"c"},"description":"\n     -c\n            Create a new archive containing the specified items."},{"name":"-r","option":{"type":"flag_option","flag_name":"r"},"description":"\n     -r\n            Like -c, but new entries are appended to the archive.  Note that\n             this only works on uncompressed archives stored in regular files.\n             The -f option is required."},{"name":"-t","option":{"type":"flag_option","flag_name":"t"},"description":"\n     -t\n            List archive contents to stdout."},{"name":"-u","option":{"type":"flag_option","flag_name":"u"},"description":"\n     -u\n             Like -r, but new entries are added only if they have a modifica-\n             tion date newer than the corresponding entry in the archive.\n             Note that this only works on uncompressed archives stored in reg-\n             ular files.  The -f option is required."},{"name":"-x","option":{"type":"flag_option","flag_name":"x"},"description":"\n     -x\n            Extract to disk from the archive.  If a file with the same name\n             appears more than once in the archive, each copy will be\n             extracted, with later copies overwriting (replacing) earlier\n             copies.\n"},{"name":"-b blocksize","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"b"},{"type":"argument_option","arg_name":"blocksize","arg_type":"Unknown","isList":false}]},"description":"\n     -b blocksize\n             Specify the block size, in 512-byte records, for tape drive I/O.\n             As a rule, this argument is only needed when reading from or\n             writing to tape drives, and usually not even then as the default\n             block size of 20 records (10240 bytes) is very common.\n"},{"name":"-C directory","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"C"},{"type":"argument_option","arg_name":"directory","arg_type":"Unknown","isList":false}]},"description":"\n     -C directory\n             In c and r mode, this changes the directory before adding the\n             following files.  In x mode, change directories after opening the\n             archive but before extracting entries from the archive.\n"},{"name":"--check-links","option":{"type":"long_flag_option","flag_name":"check-links","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n     --check-links\n             (c and r modes only) Issue a warning message unless all links to\n             each file are archived.\n"},{"name":"--chroot","option":{"type":"long_flag_option","flag_name":"chroot","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n     --chroot\n             (x mode only) chroot() to the current directory after processing\n             any -C options and before extracting any files.\n"},{"name":"--exclude pattern","option":{"type":"compound_options","commands":[{"type":"long_flag_option","flag_name":"exclude","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},{"type":"argument_option","arg_name":"pattern","arg_type":"Unknown","isList":false}]},"description":"\n     --exclude pattern\n             Do not process files or directories that match the specified pat-\n             tern.  Note that exclusions take precedence over patterns or\n             filenames specified on the command line.\n"},{"name":"--format format","option":{"type":"compound_options","commands":[{"type":"long_flag_option","flag_name":"format","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},{"type":"argument_option","arg_name":"format","arg_type":"Unknown","isList":false}]},"description":"\n     --format format\n             (c, r, u mode only) Use the specified format for the created ar-\n             chive.  Supported formats include ``cpio'', ``pax'', ``shar'',\n             and ``ustar''.  Other formats may also be supported; see\n             libarchive-formats(5) for more information about currently-sup-\n             ported formats.  In r and u modes, when extending an existing ar-\n             chive, the format specified here must be compatible with the for-\n             mat of the existing archive on disk.\n"},{"name":"-f file","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"f"},{"type":"argument_option","arg_name":"file","arg_type":"Unknown","isList":false}]},"description":"\n     -f file\n             Read the archive from or write the archive to the specified file.\n             The filename can be - for standard input or standard output.\n"},{"name":"-H","option":{"type":"flag_option","flag_name":"H"},"description":"\n     -H\n             (c and r mode only) Symbolic links named on the command line will\n             be followed; the target of the link will be archived, not the\n             link itself.\n"},{"name":"-h","option":{"type":"flag_option","flag_name":"h"},"description":"\n     -h\n             (c and r mode only) Synonym for -L.\n"},{"name":"-I","option":{"type":"flag_option","flag_name":"I"},"description":"\n     -I\n             Synonym for -T.\n"},{"name":"--include pattern","option":{"type":"compound_options","commands":[{"type":"long_flag_option","flag_name":"include","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},{"type":"argument_option","arg_name":"pattern","arg_type":"Unknown","isList":false}]},"description":"\n     --include pattern\n             Process only files or directories that match the specified pat-\n             tern.  Note that exclusions specified with --exclude take prece-\n             dence over inclusions.  If no inclusions are explicitly speci-\n             fied, all entries are processed by default.  The --include option\n             is especially useful when filtering archives.  For example, the\n             command\n                   tar -c -f new.tar --include='*foo*' @old.tgz\n             creates a new archive new.tar containing only the entries from\n             old.tgz containing the string `foo'.\n"},{"name":"-j","option":{"type":"flag_option","flag_name":"j"},"description":"\n     -j\n            (c mode only) Compress the resulting archive with bzip2(1).  In\n             extract or list modes, this option is ignored.  Note that, unlike\n             other tar implementations, this implementation recognizes bzip2\n             compression automatically when reading archives.\n"},{"name":"-k","option":{"type":"flag_option","flag_name":"k"},"description":"\n     -k\n            (x mode only) Do not overwrite existing files.  In particular, if\n             a file appears more than once in an archive, later copies will\n             not overwrite earlier copies.\n"},{"name":"--keep-newer-files","option":{"type":"long_flag_option","flag_name":"keep-newer-files","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n     --keep-newer-files\n             (x mode only) Do not overwrite existing files that are newer than\n             the versions appearing in the archive being extracted.\n"},{"name":"-L","option":{"type":"flag_option","flag_name":"L"},"description":"\n     -L\n            (c and r mode only) All symbolic links will be followed.  Nor-\n             mally, symbolic links are archived as such.  With this option,\n             the target of the link will be archived instead.\n"},{"name":"-l","option":{"type":"flag_option","flag_name":"l"},"description":"\n     -l\n            This is a synonym for the --check-links option.\n"},{"name":"-m","option":{"type":"flag_option","flag_name":"m"},"description":"\n     -m\n            (x mode only) Do not extract modification time.  By default, the\n             modification time is set to the time stored in the archive.\n"},{"name":"-n","option":{"type":"flag_option","flag_name":"n"},"description":"\n     -n\n            (c, r, u modes only) Do not recursively archive the contents of\n             directories.\n"},{"name":"--newer date","option":{"type":"compound_options","commands":[{"type":"long_flag_option","flag_name":"newer","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},{"type":"argument_option","arg_name":"date","arg_type":"Unknown","isList":false}]},"description":"\n     --newer date\n             (c, r, u modes only) Only include files and directories newer\n             than the specified date.  This compares ctime entries.\n"},{"name":"--newer-mtime date","option":{"type":"compound_options","commands":[{"type":"long_flag_option","flag_name":"newer-mtime","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},{"type":"argument_option","arg_name":"date","arg_type":"Unknown","isList":false}]},"description":"\n     --newer-mtime date\n             (c, r, u modes only) Like --newer, except it compares mtime\n             entries instead of ctime entries.\n"},{"name":"--newer-than file","option":{"type":"compound_options","commands":[{"type":"long_flag_option","flag_name":"newer-than","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},{"type":"argument_option","arg_name":"file","arg_type":"Unknown","isList":false}]},"description":"\n     --newer-than file\n             (c, r, u modes only) Only include files and directories newer\n             than the specified file.  This compares ctime entries.\n"},{"name":"--newer-mtime-than file","option":{"type":"compound_options","commands":[{"type":"long_flag_option","flag_name":"newer-mtime-than","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},{"type":"argument_option","arg_name":"file","arg_type":"Unknown","isList":false}]},"description":"\n     --newer-mtime-than file\n             (c, r, u modes only) Like --newer-than, except it compares mtime\n             entries instead of ctime entries.\n"},{"name":"--nodump","option":{"type":"long_flag_option","flag_name":"nodump","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n     --nodump\n             (c and r modes only) Honor the nodump file flag by skipping this\n             file.\n"},{"name":"--null","option":{"type":"long_flag_option","flag_name":"null","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n     --null\n             (use with -I, -T, or -X) Filenames or patterns are separated by\n             null characters, not by newlines.  This is often used to read\n             filenames output by the -print0 option to find(1).\n"},{"name":"--numeric-owner","option":{"type":"long_flag_option","flag_name":"numeric-owner","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n     --numeric-owner\n             (x mode only) Ignore symbolic user and group names when restoring\n             archives to disk, only numeric uid and gid values will be obeyed.\n"},{"name":"-O","option":{"type":"flag_option","flag_name":"O"},"description":"\n     -O\n             (x, t modes only) In extract (-x) mode, files will be written to\n             standard out rather than being extracted to disk.  In list (-t)\n             mode, the file listing will be written to stderr rather than the\n             usual stdout.\n"},{"name":"-o","option":{"type":"flag_option","flag_name":"o"},"description":"\n     -o\n             (x mode) Use the user and group of the user running the program\n             rather than those specified in the archive.  Note that this has\n             no significance unless -p is specified, and the program is being\n             run by the root user.  In this case, the file modes and flags\n             from the archive will be restored, but ACLs or owner information\n             in the archive will be discarded.\n"},{"name":"-o","option":{"type":"flag_option","flag_name":"o"},"description":"\n     -o\n                (c, r, u mode) A synonym for --format ustar\n"},{"name":"--one-file-system","option":{"type":"long_flag_option","flag_name":"one-file-system","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n     --one-file-system\n\n             (c, r, and u modes) Do not cross mount points.\n"},{"name":"--options options","option":{"type":"compound_options","commands":[{"type":"long_flag_option","flag_name":"options","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},{"type":"argument_option","arg_name":"options","arg_type":"Unknown","isList":false}]},"description":"\n     --options options\n             Select optional behaviors for particular modules.  The argument\n             is a text string containing comma-separated keywords and values.\n             These are passed to the modules that handle particular formats to\n             control how those formats will behave.  Each option has one of\n             the following forms:\n             key=value\n                     The key will be set to the specified value in every mod-\n                     ule that supports it.  Modules that do not support this\n                     key will ignore it.\n             key     The key will be enabled in every module that supports it.\n                     This is equivalent to key=1.\n             !key    The key will be disabled in every module that supports\n                     it.\n             module:key=value, module:key, module:!key\n                     As above, but the corresponding key and value will be\n                     provided only to modules whose name matches module.\n             The currently supported modules and keys are:\n             iso9660:joliet\n                     Support Joliet extensions.  This is enabled by default,\n                     use !joliet or iso9660:!joliet to disable.\n             iso9660:rockridge\n                     Support Rock Ridge extensions.  This is enabled by\n                     default, use !rockridge or iso9660:!rockridge to disable.\n             gzip:compression-level\n                     A decimal integer from 0 to 9 specifying the gzip com-\n                     pression level.\n             xz:compression-level\n                     A decimal integer from 0 to 9 specifying the xz compres-\n                     sion level.\n             mtree:keyword\n                     The mtree writer module allows you to specify which mtree\n                     keywords will be included in the output.  Supported key-\n                     words include: cksum, device, flags, gid, gname, indent,\n                     link, md5, mode, nlink, rmd160, sha1, sha256, sha384,\n                     sha512, size, time, uid, uname.  The default is equiva-\n                     lent to: ``device, flags, gid, gname, link, mode, nlink,\n                     size, time, type, uid, uname''.\n             mtree:all\n                     Enables all of the above keywords.  You can also use\n                     mtree:!all to disable all keywords.\n             mtree:use-set\n                     Enable generation of /set lines in the output.\n             mtree:indent\n                     Produce human-readable output by indenting options and\n                     splitting lines to fit into 80 columns.\n             zip:compression=type\n                     Use type as compression method.  Supported values are\n                     store (uncompressed) and deflate (gzip algorithm).\n             If a provided option is not supported by any module, that is a\n             fatal error.\n"},{"name":"-P","option":{"type":"flag_option","flag_name":"P"},"description":"\n     -P\n            Preserve pathnames.  By default, absolute pathnames (those that\n             begin with a / character) have the leading slash removed both\n             when creating archives and extracting from them.  Also, tar will\n             refuse to extract archive entries whose pathnames contain .. or\n             whose target directory would be altered by a symlink.  This\n             option suppresses these behaviors.\n"},{"name":"-p","option":{"type":"flag_option","flag_name":"p"},"description":"\n     -p\n            (x mode only) Preserve file permissions.  Attempt to restore the\n             full permissions, including owner, file modes, file flags and\n             ACLs, if available, for each item extracted from the archive.  By\n             default, newly-created files are owned by the user running tar,\n             the file mode is restored for newly-created regular files, and\n             all other types of entries receive default permissions.  If tar\n             is being run by root, the default is to restore the owner unless\n             the -o option is also specified.\n"},{"name":"-q","option":{"type":"flag_option","flag_name":"q"},"description":"\n     -q\n             (x and t mode only) Extract or list only the first archive entry\n             that matches each pattern or filename operand.  Exit as soon as\n             each specified pattern or filename has been matched.  By default,\n             the archive is always read to the very end, since there can be\n             multiple entries with the same name and, by convention, later\n             entries overwrite earlier entries.  This option is provided as a\n             performance optimization.\n"},{"name":"-S","option":{"type":"flag_option","flag_name":"S"},"description":"\n     -S\n            (x mode only) Extract files as sparse files.  For every block on\n             disk, check first if it contains only NULL bytes and seek over it\n             otherwise.  This works similiar to the conv=sparse option of dd.\n"},{"name":"--strip-components count","option":{"type":"compound_options","commands":[{"type":"long_flag_option","flag_name":"strip-components","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},{"type":"argument_option","arg_name":"count","arg_type":"Unknown","isList":false}]},"description":"\n     --strip-components count\n             (x mode only) Remove the specified number of leading path ele-\n             ments.  Pathnames with fewer elements will be silently skipped.\n             Note that the pathname is edited after checking inclusion/exclu-\n             sion patterns but before security checks.\n"},{"name":"-s pattern","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"s"},{"type":"argument_option","arg_name":"pattern","arg_type":"Unknown","isList":false}]},"description":"\n     -s pattern\n             Modify file or archive member names according to pattern.  The\n             pattern has the format /old/new/[gps] where old is a basic regu-\n             lar expression, new is the replacement string of the matched\n             part, and the optional trailing letters modify how the replace-\n             ment is handled.  If old is not matched, the pattern is skipped.\n             Within new, ~ is substituted with the match, 1 to 9 with the con-\n             tent of the corresponding captured group.  The optional trailing\n             g specifies that matching should continue after the matched part\n             and stopped on the first unmatched pattern.  The optional trail-\n             ing s specifies that the pattern applies to the value of symbolic\n             links.  The optional trailing p specifies that after a successful\n             substitution the original path name and the new path name should\n             be printed to standard error.\n"},{"name":"-T filename","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"T"},{"type":"argument_option","arg_name":"filename","arg_type":"Unknown","isList":false}]},"description":"\n     -T filename\n\n             In x or t mode, tar will read the list of names to be extracted\n             from filename.  In c mode, tar will read names to be archived\n             from filename.  The special name ``-C'' on a line by itself will\n             cause the current directory to be changed to the directory speci-\n             fied on the following line.  Names are terminated by newlines\n             unless --null is specified.  Note that --null also disables the\n             special handling of lines containing ``-C''.\n"},{"name":"-U","option":{"type":"flag_option","flag_name":"U"},"description":"\n     -U\n             (x mode only) Unlink files before creating them.  Without this\n             option, tar overwrites existing files, which preserves existing\n             hardlinks.  With this option, existing hardlinks will be broken,\n             as will any symlink that would affect the location of an\n             extracted file.\n"},{"name":"--use-compress-program program","option":{"type":"compound_options","commands":[{"type":"long_flag_option","flag_name":"use-compress-program","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},{"type":"argument_option","arg_name":"program","arg_type":"Unknown","isList":false}]},"description":"\n     --use-compress-program program\n             Pipe the input (in x or t mode) or the output (in c mode) through\n             program instead of using the builtin compression support.\n"},{"name":"-v","option":{"type":"flag_option","flag_name":"v"},"description":"\n     -v\n            Produce verbose output.  In create and extract modes, tar will\n             list each file name as it is read from or written to the archive.\n             In list mode, tar will produce output similar to that of ls(1).\n             Additional -v options will provide additional detail.\n"},{"name":"--version","option":{"type":"long_flag_option","flag_name":"version","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n     --version\n             Print version of tar and libarchive, and exit.\n"},{"name":"-w","option":{"type":"flag_option","flag_name":"w"},"description":"\n     -w\n            Ask for confirmation for every action.\n"},{"name":"-X filename","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"X"},{"type":"argument_option","arg_name":"filename","arg_type":"Unknown","isList":false}]},"description":"\n     -X filename\n             Read a list of exclusion patterns from the specified file.  See\n             exclude for more information about the handling of exclusions.\n"},{"name":"-y","option":{"type":"flag_option","flag_name":"y"},"description":"\n     -y\n            (c mode only) Compress the resulting archive with bzip2(1).  In\n             extract or list modes, this option is ignored.  Note that, unlike\n             other tar implementations, this implementation recognizes bzip2\n             compression automatically when reading archives.\n"},{"name":"-z","option":{"type":"flag_option","flag_name":"z"},"description":"\n     -z\n            (c mode only) Compress the resulting archive with gzip(1).  In\n             extract or list modes, this option is ignored.  Note that, unlike\n             other tar implementations, this implementation recognizes gzip\n             compression automatically when reading archives.\n"},{"name":"-Z","option":{"type":"flag_option","flag_name":"Z"},"description":"\n     -Z\n            (c mode only) Compress the resulting archive with compress(1).\n             In extract or list modes, this option is ignored.  Note that,\n             unlike other tar implementations, this implementation recognizes\n             compress compression automatically when reading archives.\n"}],"name":"tar"},{"aliases":["xargs"],"description":"xargs: construct argument list(s) and execute utility\n\n     The xargs utility reads space, tab, newline and end-of-file delimited\n     strings from the standard input and executes utility with the strings as\n     arguments.\n\n     Any arguments specified on the command line are given to utility upon\n     each invocation, followed by some number of the arguments read from the\n     standard input of xargs.  The utility is repeatedly executed until stan-\n     dard input is exhausted.\n\n     Spaces, tabs and newlines may be embedded in arguments using single\n     (`` ' '') or double (``\"'') quotes or backslashes (``\\'').  Single quotes\n     escape all non-single quote characters, excluding newlines, up to the\n     matching single quote.  Double quotes escape all non-double quote charac-\n     ters, excluding newlines, up to the matching double quote.  Any single\n     character, including newlines, may be escaped by a backslash.\n","rawSynopsis":"xargs [-0opt] [-E eofstr] [-I replstr [-R replacements]] [-J replstr]\n[-L number] [-n number [-x]] [-P maxprocs] [-s size]\n[utility [argument ...]]","optionLists":[{"type":"compound_options","commands":[{"type":"compound_options","commands":[{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"0"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"o"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"p"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"t"}}]},{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"E"},{"type":"argument_option","arg_name":"eofstr","arg_type":"Unknown","isList":false}]}},{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"I"},{"type":"argument_option","arg_name":"replstr","arg_type":"Unknown","isList":false},{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"R"},{"type":"argument_option","arg_name":"replacements","arg_type":"Unknown","isList":false}]}}]}},{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"J"},{"type":"argument_option","arg_name":"replstr","arg_type":"Unknown","isList":false}]}},{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"L"},{"type":"argument_option","arg_name":"number","arg_type":"Unknown","isList":false}]}},{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"n"},{"type":"argument_option","arg_name":"number","arg_type":"Unknown","isList":false},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"x"}}]}},{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"P"},{"type":"argument_option","arg_name":"maxprocs","arg_type":"Unknown","isList":false}]}},{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"s"},{"type":"argument_option","arg_name":"size","arg_type":"Unknown","isList":false}]}},{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"argument_option","arg_name":"utility","arg_type":"Unknown","isList":false},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"argument","arg_type":"Unknown","isList":true}}]}}]}],"optionDesc":[{"name":"-0","option":{"type":"flag_option","flag_name":"0"},"description":"\n     -0      Change xargs to expect NUL (``\\0'') characters as separators,\n             instead of spaces and newlines.  This is expected to be used in\n             concert with the -print0 function in find(1).\n"},{"name":"-E eofstr","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"E"},{"type":"argument_option","arg_name":"eofstr","arg_type":"Unknown","isList":false}]},"description":"\n     -E eofstr\n             Use eofstr as a logical EOF marker.\n"},{"name":"-I replstr","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"I"},{"type":"argument_option","arg_name":"replstr","arg_type":"Unknown","isList":false}]},"description":"\n     -I replstr\n             Execute utility for each input line, replacing one or more occur-\n             rences of replstr in up to replacements (or 5 if no -R flag is\n             specified) arguments to utility with the entire line of input.\n             The resulting arguments, after replacement is done, will not be\n             allowed to grow beyond 255 bytes; this is implemented by concate-\n             nating as much of the argument containing replstr as possible, to\n             the constructed arguments to utility, up to 255 bytes.  The 255\n             byte limit does not apply to arguments to utility which do not\n             contain replstr, and furthermore, no replacement will be done on\n             utility itself.  Implies -x.\n"},{"name":"-J replstr","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"J"},{"type":"argument_option","arg_name":"replstr","arg_type":"Unknown","isList":false}]},"description":"\n     -J replstr\n             If this option is specified, xargs will use the data read from\n             standard input to replace the first occurrence of replstr instead\n             of appending that data after all other arguments.  This option\n             will not affect how many arguments will be read from input (-n),\n             or the size of the command(s) xargs will generate (-s).  The\n             option just moves where those arguments will be placed in the\n             command(s) that are executed.  The replstr must show up as a dis-\n             tinct argument to xargs.  It will not be recognized if, for\n             instance, it is in the middle of a quoted string.  Furthermore,\n             only the first occurrence of the replstr will be replaced.  For\n             example, the following command will copy the list of files and\n             directories which start with an uppercase letter in the current\n             directory to destdir:\n\n                   /bin/ls -1d [A-Z]* | xargs -J % cp -rp % destdir\n"},{"name":"-L number","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"L"},{"type":"argument_option","arg_name":"number","arg_type":"Unknown","isList":false}]},"description":"\n     -L number\n             Call utility for every number non-empty lines read.  A line end-\n             ing with a space continues to the next non-empty line.  If EOF is\n             reached and fewer lines have been read than number then utility\n             will be called with the available lines.  The -L and -n options\n             are mutually-exclusive; the last one given will be used.\n"},{"name":"-n number","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"n"},{"type":"argument_option","arg_name":"number","arg_type":"Unknown","isList":false}]},"description":"\n     -n number\n             Set the maximum number of arguments taken from standard input for\n             each invocation of utility.  An invocation of utility will use\n             less than number standard input arguments if the number of bytes\n             accumulated (see the -s option) exceeds the specified size or\n             there are fewer than number arguments remaining for the last\n             invocation of utility.  The current default value for number is\n             5000.\n"},{"name":"-o","option":{"type":"flag_option","flag_name":"o"},"description":"\n     -o      Reopen stdin as /dev/tty in the child process before executing\n             the command.  This is useful if you want xargs to run an interac-\n             tive application.\n"},{"name":"-P maxprocs","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"P"},{"type":"argument_option","arg_name":"maxprocs","arg_type":"Unknown","isList":false}]},"description":"\n     -P maxprocs\n             Parallel mode: run at most maxprocs invocations of utility at\n             once.\n"},{"name":"-p","option":{"type":"flag_option","flag_name":"p"},"description":"\n     -p      Echo each command to be executed and ask the user whether it\n             should be executed.  An affirmative response, `y' in the POSIX\n             locale, causes the command to be executed, any other response\n             causes it to be skipped.  No commands are executed if the process\n             is not attached to a terminal.\n"},{"name":"-R replacements","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"R"},{"type":"argument_option","arg_name":"replacements","arg_type":"Unknown","isList":false}]},"description":"\n     -R replacements\n             Specify the maximum number of arguments that -I will do replace-\n             ment in.  If replacements is negative, the number of arguments in\n             which to replace is unbounded.\n"},{"name":"-s size","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"s"},{"type":"argument_option","arg_name":"size","arg_type":"Unknown","isList":false}]},"description":"\n     -s size\n             Set the maximum number of bytes for the command line length pro-\n             vided to utility.  The sum of the length of the utility name, the\n             arguments passed to utility (including NULL terminators) and the\n             current environment will be less than or equal to this number.\n             The current default value for size is ARG_MAX - 4096.\n"},{"name":"-t","option":{"type":"flag_option","flag_name":"t"},"description":"\n     -t      Echo the command to be executed to standard error immediately\n             before it is executed.\n"},{"name":"-x","option":{"type":"flag_option","flag_name":"x"},"description":"\n     -x      Force xargs to terminate immediately if a command line containing\n             number arguments will not fit in the specified (or default) com-\n             mand line length.\n"}],"name":"xargs"},{"aliases":["sed"],"description":"sed: stream editor\n\n     The sed utility reads the specified files, or the standard input if no\n     files are specified, modifying the input as specified by a list of com-\n     mands.  The input is then written to the standard output.\n\n     A single command may be specified as the first argument to sed.  Multiple\n     commands may be specified by using the -e or -f options.  All commands\n     are applied to the input in the order they are specified regardless of\n     their origin.\n","rawSynopsis":"sed [-Ealn] command [file ...]\nsed [-Ealn] [-e command] [-f command_file] [-i extension] [file ...]","optionLists":[{"type":"compound_options","commands":[{"type":"compound_options","commands":[{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"E"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"a"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"l"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"n"}}]},{"type":"argument_option","arg_name":"command","arg_type":"Unknown","isList":false},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"file","arg_type":"Unknown","isList":true}}]},{"type":"compound_options","commands":[{"type":"compound_options","commands":[{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"E"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"a"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"l"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"n"}}]},{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"e"},{"type":"argument_option","arg_name":"command","arg_type":"Unknown","isList":false}]}},{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"f"},{"type":"argument_option","arg_name":"command_file","arg_type":"Unknown","isList":false}]}},{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"i"},{"type":"argument_option","arg_name":"extension","arg_type":"Unknown","isList":false}]}},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"file","arg_type":"Unknown","isList":true}}]}],"optionDesc":[{"name":"-E","option":{"type":"flag_option","flag_name":"E"},"description":"\n     -E      Interpret regular expressions as extended (modern) regular\n             expressions rather than basic regular expressions (BRE's).  The\n             re_format(7) manual page fully describes both formats.\n"},{"name":"-a","option":{"type":"flag_option","flag_name":"a"},"description":"\n     -a      The files listed as parameters for the ``w'' functions are cre-\n             ated (or truncated) before any processing begins, by default.\n             The -a option causes sed to delay opening each file until a com-\n             mand containing the related ``w'' function is applied to a line\n             of input.\n"},{"name":"-e command","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"e"},{"type":"argument_option","arg_name":"command","arg_type":"Unknown","isList":false}]},"description":"\n     -e command\n             Append the editing commands specified by the command argument to\n             the list of commands.\n"},{"name":"-f command_file","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"f"},{"type":"argument_option","arg_name":"command_file","arg_type":"Unknown","isList":false}]},"description":"\n     -f command_file\n             Append the editing commands found in the file command_file to the\n             list of commands.  The editing commands should each be listed on\n             a separate line.\n"},{"name":"-i extension","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"i"},{"type":"argument_option","arg_name":"extension","arg_type":"Unknown","isList":false}]},"description":"\n     -i extension\n             Edit files in-place, saving backups with the specified extension.\n             If a zero-length extension is given, no backup will be saved.  It\n             is not recommended to give a zero-length extension when in-place\n             editing files, as you risk corruption or partial content in situ-\n             ations where disk space is exhausted, etc.\n"},{"name":"-l","option":{"type":"flag_option","flag_name":"l"},"description":"\n     -l      Make output line buffered.\n"},{"name":"-n","option":{"type":"flag_option","flag_name":"n"},"description":"\n     -n      By default, each line of input is echoed to the standard output\n             after all of the commands have been applied to it.  The -n option\n             suppresses this behavior.\n"}],"name":"sed"},{"aliases":["awk"],"description":"awk: pattern-directed scanning and processing language\n\n       Awk scans each input file for lines that match any of a set of patterns\n       specified literally in prog or in one or more  files  specified  as  -f\n       progfile.   With  each  pattern  there can be an associated action that\n       will be performed when a line of a file matches the pattern.  Each line\n       is  matched  against the pattern portion of every pattern-action state-\n       ment; the associated action is performed for each matched pattern.  The\n       file  name  - means the standard input.  Any file of the form var=value\n       is treated as an assignment, not a filename, and  is  executed  at  the\n       time  it  would  have been opened if it were a filename.  The option -v\n       followed by var=value is an assignment to be done before prog  is  exe-\n       cuted;  any  number  of  -v  options  may be present.  The -F fs option\n       defines the input field separator to be the regular expression fs.\n\n       An input line is normally made up of fields separated by  white  space,\n       or by regular expression FS.  The fields are denoted $1, $2, ..., while\n       $0 refers to the entire line.  If FS is null, the input line  is  split\n       into one field per character.\n\n       A pattern-action statement has the form\n\n              pattern { action }\n\n       A  missing  {  action  } means print the line; a missing pattern always\n       matches.  Pattern-action statements are separated by newlines or  semi-\n       colons.\n\n       An  action  is a sequence of statements.  A statement can be one of the\n       following:\n\n              if( expression ) statement [ else statement ]\n              while( expression ) statement\n              for( expression ; expression ; expression ) statement\n              for( var in array ) statement\n              do statement while( expression )\n              break\n              continue\n              { [ statement ... ] }\n              expression              # commonly var = expression\n              print [ expression-list ] [ > expression ]\n              printf format [ , expression-list ] [ > expression ]\n              return [ expression ]\n              next                    # skip remaining patterns on this input line\n              nextfile                # skip rest of this file, open next, start at top\n              delete array[ expression ]# delete an array element\n              delete array            # delete all elements of array\n              exit [ expression ]     # exit immediately; status is expression\n\n       Statements are terminated by semicolons, newlines or right braces.   An\n       empty  expression-list stands for $0.  String constants are quoted \" \",\n       with the usual C escapes recognized within.  Expressions take on string\n       or numeric values as appropriate, and are built using the operators + -\n       * / % ^ (exponentiation), and concatenation (indicated by white space).\n       The  operators  !  ++  -- += -= *= /= %= ^= > >= < <= == != ?: are also\n       available in expressions.  Variables may  be  scalars,  array  elements\n       (denoted  x[i])  or  fields.   Variables  are  initialized  to the null\n       string.  Array subscripts may be any string, not  necessarily  numeric;\n       this allows for a form of associative memory.  Multiple subscripts such\n       as [i,j,k] are permitted; the constituents are concatenated,  separated\n       by the value of SUBSEP.\n\n       The  print statement prints its arguments on the standard output (or on\n       a file if >file or >>file is present or on a pipe if |cmd is  present),\n       separated  by the current output field separator, and terminated by the\n       output record separator.  file and cmd may be literal names  or  paren-\n       thesized  expressions;  identical string values in different statements\n       denote the same open file.  The printf statement formats its expression\n       list  according  to  the format (see printf(3)).  The built-in function\n       close(expr) closes the  file  or  pipe  expr.   The  built-in  function\n       fflush(expr) flushes any buffered output for the file or pipe expr.\n\n       The  mathematical  functions  exp,  log,  sqrt, sin, cos, and atan2 are\n       built in.  Other built-in functions:\n\n       length the length of its argument taken as a string, or  of  $0  if  no\n              argument.\n\n       rand   random number on (0,1)\n\n       srand  sets seed for rand and returns the previous seed.\n\n       int    truncates to an integer value\n\n       substr(s, m, n)\n              the n-character substring of s that begins at position m counted\n              from 1.\n\n       index(s, t)\n              the position in s where the string t occurs, or  0  if  it  does\n              not.\n\n       match(s, r)\n              the position in s where the regular expression r occurs, or 0 if\n              it does not.  The variables RSTART and RLENGTH are  set  to  the\n              position and length of the matched string.\n\n       split(s, a, fs)\n              splits  the  string s into array elements a[1], a[2], ..., a[n],\n              and returns n.  The separation is done with the regular  expres-\n              sion  fs  or with the field separator FS if fs is not given.  An\n              empty string as field separator splits the string into one array\n              element per character.\n\n       sub(r, t, s)\n              substitutes t for the first occurrence of the regular expression\n              r in the string s.  If s is not given, $0 is used.\n\n       gsub   same as sub except that all occurrences of the  regular  expres-\n              sion  are  replaced;  sub and gsub return the number of replace-\n              ments.\n\n       sprintf(fmt, expr, ... )\n              the string resulting from formatting expr ...  according to  the\n              printf(3) format fmt\n\n       system(cmd)\n              executes cmd and returns its exit status\n\n       tolower(str)\n              returns  a copy of str with all upper-case characters translated\n              to their corresponding lower-case equivalents.\n\n       toupper(str)\n              returns a copy of str with all lower-case characters  translated\n              to their corresponding upper-case equivalents.\n\n       The ``function'' getline sets $0 to the next input record from the cur-\n       rent input file; getline <file sets $0 to the next  record  from  file.\n       getline  x  sets  variable x instead.  Finally, cmd | getline pipes the\n       output of cmd into getline; each call of getline returns the next  line\n       of  output  from cmd.  In all cases, getline returns 1 for a successful\n       input, 0 for end of file, and -1 for an error.\n\n       Patterns are arbitrary Boolean combinations (with ! || &&)  of  regular\n       expressions  and  relational  expressions.   Regular expressions are as\n       defined in re_format(7).  Isolated regular  expressions  in  a  pattern\n       apply  to the entire line.  Regular expressions may also occur in rela-\n       tional expressions, using the operators ~ and !~.  /re/ is  a  constant\n       regular  expression; any string (constant or variable) may be used as a\n       regular expression, except in  the  position  of  an  isolated  regular\n       expression in a pattern.\n\n       A  pattern  may  consist  of two patterns separated by a comma; in this\n       case, the action is performed for all lines from an occurrence  of  the\n       first pattern though an occurrence of the second.\n\n       A relational expression is one of the following:\n\n              expression matchop regular-expression\n              expression relop expression\n              expression in array-name\n              (expr,expr,...) in array-name\n\n       where  a  relop  is  any  of  the  six relational operators in C, and a\n       matchop is either ~ (matches) or !~ (does not match).  A conditional is\n       an  arithmetic expression, a relational expression, or a Boolean combi-\n       nation of these.\n\n       The special patterns BEGIN and END  may  be  used  to  capture  control\n       before  the first input line is read and after the last.  BEGIN and END\n       do not combine with other patterns.\n\n       Variable names with special meanings:\n\n       CONVFMT\n              conversion format used when converting numbers (default %.6g)\n\n       FS     regular expression used to separate  fields;  also  settable  by\n              option -Ffs.\n\n       NF     number of fields in the current record\n\n       NR     ordinal number of the current record\n\n       FNR    ordinal number of the current record in the current file\n\n       FILENAME\n              the name of the current input file\n\n       RS     input record separator (default newline)\n\n       OFS    output field separator (default blank)\n\n       ORS    output record separator (default newline)\n\n       OFMT   output format for numbers (default %.6g)\n\n       SUBSEP separates multiple subscripts (default 034)\n\n       ARGC   argument count, assignable\n\n       ARGV   argument  array, assignable; non-null members are taken as file-\n              names\n\n       ENVIRON\n              array of environment variables; subscripts are names.\n\n       Functions may be defined (at the position of  a  pattern-action  state-\n       ment) thus:\n\n              function foo(a, b, c) { ...; return x }\n\n       Parameters  are  passed  by  value  if scalar and by reference if array\n       name; functions may be called recursively.  Parameters are local to the\n       function;  all other variables are global.  Thus local variables may be\n","rawSynopsis":"awk [ -F fs ] [ -v var=value ] [ 'prog' | -f progfile ] [ file ...  ]","optionLists":[],"optionDesc":[],"name":"awk"},{"aliases":["rm","unlink"],"description":"rm: remove directory entries\n\n     The rm utility attempts to remove the non-directory type files specified\n     on the command line.  If the permissions of the file do not permit writ-\n     ing, and the standard input device is a terminal, the user is prompted\n     (on the standard error output) for confirmation.\n","rawSynopsis":"rm [-dfiPRrvW] file ...\nunlink file","optionLists":[{"type":"compound_options","commands":[{"type":"compound_options","commands":[{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"d"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"f"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"i"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"P"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"R"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"r"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"v"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"W"}}]},{"type":"argument_option","arg_name":"file","arg_type":"Unknown","isList":true},{"type":"argument_option","arg_name":"unlink","arg_type":"Unknown","isList":false},{"type":"argument_option","arg_name":"file","arg_type":"Unknown","isList":false}]}],"optionDesc":[{"name":"-d","option":{"type":"flag_option","flag_name":"d"},"description":"\n     -d          Attempt to remove directories as well as other types of\n                 files.\n"},{"name":"-f","option":{"type":"flag_option","flag_name":"f"},"description":"\n     -f          Attempt to remove the files without prompting for confirma-\n                 tion, regardless of the file's permissions.  If the file does\n                 not exist, do not display a diagnostic message or modify the\n                 exit status to reflect an error.  The -f option overrides any\n                 previous -i options.\n"},{"name":"-i","option":{"type":"flag_option","flag_name":"i"},"description":"\n     -i          Request confirmation before attempting to remove each file,\n                 regardless of the file's permissions, or whether or not the\n                 standard input device is a terminal.  The -i option overrides\n                 any previous -f options.\n"},{"name":"-P","option":{"type":"flag_option","flag_name":"P"},"description":"\n     -P          Overwrite regular files before deleting them.  Files are\n                 overwritten three times, first with the byte pattern 0xff,\n                 then 0x00, and then 0xff again, before they are deleted.\n"},{"name":"-R","option":{"type":"flag_option","flag_name":"R"},"description":"\n     -R          Attempt to remove the file hierarchy rooted in each file\n                 argument.  The -R option implies the -d option.  If the -i\n                 option is specified, the user is prompted for confirmation\n                 before each directory's contents are processed (as well as\n                 before the attempt is made to remove the directory).  If the\n                 user does not respond affirmatively, the file hierarchy\n                 rooted in that directory is skipped.\n"},{"name":"-r","option":{"type":"flag_option","flag_name":"r"},"description":"\n     -r          Equivalent to -R.\n"},{"name":"-v","option":{"type":"flag_option","flag_name":"v"},"description":"\n     -v          Be verbose when deleting files, showing them as they are\n                 removed.\n"},{"name":"-W","option":{"type":"flag_option","flag_name":"W"},"description":"\n     -W          Attempt to undelete the named files.  Currently, this option\n                 can only be used to recover files covered by whiteouts.\n"}],"name":"rm"},{"aliases":["cd"],"description":"cd: Change the shell working directory.\n\n    Change the shell working directory.\n\n    Change the current directory to DIR.  The default DIR is the value of the\n    HOME shell variable.\n\n    The variable CDPATH defines the search path for the directory containing\n    DIR.  Alternative directory names in CDPATH are separated by a colon (:).\n    A null directory name is the same as the current directory.  If DIR begins\n    with a slash (/), then CDPATH is not used.\n\n    If the directory is not found, and the shell option `cdable_vars' is set,\n    the word is assumed to be  a variable name.  If that variable has a value,\n    its value is used for DIR.\n","rawSynopsis":"cd [-L|-P] [dir]","optionLists":[{"type":"compound_options","commands":[{"type":"optional_option","cmd":{"type":"exclusive_options","commands":[{"type":"flag_option","flag_name":"L"},{"type":"flag_option","flag_name":"P"}]}},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"dir","arg_type":"Unknown","isList":false}}]}],"optionDesc":[{"name":"-L","option":{"type":"flag_option","flag_name":"L"},"description":"\n    -L  force symbolic links to be followed\n"},{"name":"-P","option":{"type":"flag_option","flag_name":"P"},"description":"\n    -P  use the physical directory structure without following symbolic links\n"}],"name":"cd"},{"aliases":["wc"],"description":"wc: word, line, character, and byte count\n\n     The wc utility displays the number of lines, words, and bytes contained\n     in each input file, or standard input (if no file is specified) to the\n     standard output.  A line is defined as a string of characters delimited\n     by a <newline> character.  Characters beyond the final <newline> charac-\n     ter will not be included in the line count.\n\n     A word is defined as a string of characters delimited by white space\n     characters.  White space characters are the set of characters for which\n     the iswspace(3) function returns true.  If more than one input file is\n     specified, a line of cumulative counts for all the files is displayed on\n     a separate line after the output for the last file.\n","rawSynopsis":"wc [-clmw] [file ...]","optionLists":[{"type":"compound_options","commands":[{"type":"compound_options","commands":[{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"c"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"l"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"m"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"w"}}]},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"file","arg_type":"Unknown","isList":true}}]}],"optionDesc":[{"name":"-c","option":{"type":"flag_option","flag_name":"c"},"description":"\n     -c      The number of bytes in each input file is written to the standard\n             output.  This will cancel out any prior usage of the -m option.\n"},{"name":"-l","option":{"type":"flag_option","flag_name":"l"},"description":"\n     -l      The number of lines in each input file is written to the standard\n             output.\n"},{"name":"-m","option":{"type":"flag_option","flag_name":"m"},"description":"\n     -m      The number of characters in each input file is written to the\n             standard output.  If the current locale does not support multi-\n             byte characters, this is equivalent to the -c option.  This will\n             cancel out any prior usage of the -c option.\n"},{"name":"-w","option":{"type":"flag_option","flag_name":"w"},"description":"\n     -w      The number of words in each input file is written to the standard\n             output.\n"}],"name":"wc"},{"aliases":["chmod"],"description":"chmod: change file modes or Access Control Lists\n\n     The chmod utility modifies the file mode bits of the listed files as\n     specified by the mode operand. It may also be used to modify the Access\n     Control Lists (ACLs) associated with the listed files.\n","rawSynopsis":"chmod [-fv] [-R [-H | -L | -P]] mode file ...\nchmod [-fv] [-R [-H | -L | -P]] [-a | +a | =a] ACE file ...\nchmod [-fhv] [-R [-H | -L | -P]] [-E] file ...\nchmod [-fhv] [-R [-H | -L | -P]] [-C] file ...\nchmod [-fhv] [-R [-H | -L | -P]] [-N] file ...","optionLists":[{"type":"compound_options","commands":[{"type":"compound_options","commands":[{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"f"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"v"}}]},{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"R"},{"type":"optional_option","cmd":{"type":"exclusive_options","commands":[{"type":"flag_option","flag_name":"H"},{"type":"flag_option","flag_name":"L"},{"type":"flag_option","flag_name":"P"}]}}]}},{"type":"argument_option","arg_name":"mode","arg_type":"Unknown","isList":false},{"type":"argument_option","arg_name":"file","arg_type":"Unknown","isList":true}]},{"type":"compound_options","commands":[{"type":"compound_options","commands":[{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"f"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"h"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"v"}}]},{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"R"},{"type":"optional_option","cmd":{"type":"exclusive_options","commands":[{"type":"flag_option","flag_name":"H"},{"type":"flag_option","flag_name":"L"},{"type":"flag_option","flag_name":"P"}]}}]}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"E"}},{"type":"argument_option","arg_name":"file","arg_type":"Unknown","isList":true}]},{"type":"compound_options","commands":[{"type":"compound_options","commands":[{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"f"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"h"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"v"}}]},{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"R"},{"type":"optional_option","cmd":{"type":"exclusive_options","commands":[{"type":"flag_option","flag_name":"H"},{"type":"flag_option","flag_name":"L"},{"type":"flag_option","flag_name":"P"}]}}]}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"C"}},{"type":"argument_option","arg_name":"file","arg_type":"Unknown","isList":true}]},{"type":"compound_options","commands":[{"type":"compound_options","commands":[{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"f"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"h"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"v"}}]},{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"R"},{"type":"optional_option","cmd":{"type":"exclusive_options","commands":[{"type":"flag_option","flag_name":"H"},{"type":"flag_option","flag_name":"L"},{"type":"flag_option","flag_name":"P"}]}}]}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"N"}},{"type":"argument_option","arg_name":"file","arg_type":"Unknown","isList":true}]}],"optionDesc":[{"name":"-f","option":{"type":"flag_option","flag_name":"f"},"description":"\n     -f      Do not display a diagnostic message if chmod could not modify the\n             mode for file.\n"},{"name":"-H","option":{"type":"flag_option","flag_name":"H"},"description":"\n     -H      If the -R option is specified, symbolic links on the command line\n             are followed.  (Symbolic links encountered in the tree traversal\n             are not followed by default.)\n"},{"name":"-h","option":{"type":"flag_option","flag_name":"h"},"description":"\n     -h      If the file is a symbolic link, change the mode of the link\n             itself rather than the file that the link points to.\n"},{"name":"-L","option":{"type":"flag_option","flag_name":"L"},"description":"\n     -L      If the -R option is specified, all symbolic links are followed.\n"},{"name":"-P","option":{"type":"flag_option","flag_name":"P"},"description":"\n     -P      If the -R option is specified, no symbolic links are followed.\n             This is the default.\n"},{"name":"-R","option":{"type":"flag_option","flag_name":"R"},"description":"\n     -R      Change the modes of the file hierarchies rooted in the files\n             instead of just the files themselves.\n"},{"name":"-v","option":{"type":"flag_option","flag_name":"v"},"description":"\n     -v      Cause chmod to be verbose, showing filenames as the mode is modi-\n             fied.  If the -v flag is specified more than once, the old and\n             new modes of the file will also be printed, in both octal and\n             symbolic notation.\n"}],"name":"chmod"},{"aliases":["chgrp"],"description":"chgrp: change group\n\n     The chgrp utility sets the group ID of the file named by each file oper-\n     and to the group ID specified by the group operand.\n","rawSynopsis":"chgrp [-fhv] [-R [-H | -L | -P]] group file ...","optionLists":[{"type":"compound_options","commands":[{"type":"compound_options","commands":[{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"f"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"h"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"v"}}]},{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"R"},{"type":"optional_option","cmd":{"type":"exclusive_options","commands":[{"type":"flag_option","flag_name":"H"},{"type":"flag_option","flag_name":"L"},{"type":"flag_option","flag_name":"P"}]}}]}},{"type":"argument_option","arg_name":"group","arg_type":"Unknown","isList":false},{"type":"argument_option","arg_name":"file","arg_type":"Unknown","isList":true}]}],"optionDesc":[{"name":"-f","option":{"type":"flag_option","flag_name":"f"},"description":"\n     -f      The force option ignores errors, except for usage errors and\n             doesn't query about strange modes (unless the user does not have\n             proper permissions).\n"},{"name":"-H","option":{"type":"flag_option","flag_name":"H"},"description":"\n     -H      If the -R option is specified, symbolic links on the command line\n             are followed.  (Symbolic links encountered in the tree traversal\n             are not followed).\n"},{"name":"-h","option":{"type":"flag_option","flag_name":"h"},"description":"\n     -h      If the file is a symbolic link, the group ID of the link itself\n             is changed rather than the file that is pointed to.\n"},{"name":"-L","option":{"type":"flag_option","flag_name":"L"},"description":"\n     -L      If the -R option is specified, all symbolic links are followed.\n"},{"name":"-P","option":{"type":"flag_option","flag_name":"P"},"description":"\n     -P      If the -R option is specified, no symbolic links are followed.\n             This is the default. Use -h to change the group ID of a symbolic\n             link.\n"},{"name":"-R","option":{"type":"flag_option","flag_name":"R"},"description":"\n     -R      Change the group ID for the file hierarchies rooted in the files\n             instead of just the files themselves.\n"},{"name":"-v","option":{"type":"flag_option","flag_name":"v"},"description":"\n     -v      Cause chgrp to be verbose, showing files as the group is modi-\n             fied.\n"}],"name":"chgrp"},{"aliases":["head"],"description":"head: display first lines of a file\n\n     This filter displays the first count lines or bytes of each of the speci-\n     fied files, or of the standard input if no files are specified.  If count\n     is omitted it defaults to 10.\n\n     If more than a single file is specified, each file is preceded by a\n     header consisting of the string ``==> XXX <=='' where ``XXX'' is the name\n","rawSynopsis":"head [-n count | -c bytes] [file ...]","optionLists":[],"optionDesc":[],"name":"head"},{"aliases":["tail"],"description":"tail: display the last part of a file\n\n     The tail utility displays the contents of file or, by default, its stan-\n     dard input, to the standard output.\n\n     The display begins at a byte, line or 512-byte block location in the\n     input.  Numbers having a leading plus (`+') sign are relative to the\n     beginning of the input, for example, ``-c +2'' starts the display at the\n     second byte of the input.  Numbers having a leading minus (`-') sign or\n     no explicit sign are relative to the end of the input, for example, ``-n\n     2'' displays the last two lines of the input.  The default starting loca-\n     tion is ``-n 10'', or the last 10 lines of the input.\n","rawSynopsis":"tail [-F | -f | -r] [-q] [-b number | -c number | -n number] [file ...]","optionLists":[],"optionDesc":[{"name":"-b number","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"b"},{"type":"argument_option","arg_name":"number","arg_type":"Unknown","isList":false}]},"description":"\n     -b number\n             The location is number 512-byte blocks.\n"},{"name":"-c number","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"c"},{"type":"argument_option","arg_name":"number","arg_type":"Unknown","isList":false}]},"description":"\n     -c number\n             The location is number bytes.\n"},{"name":"-f","option":{"type":"flag_option","flag_name":"f"},"description":"\n     -f      The -f option causes tail to not stop when end of file is\n             reached, but rather to wait for additional data to be appended to\n             the input.  The -f option is ignored if the standard input is a\n             pipe, but not if it is a FIFO.\n"},{"name":"-F","option":{"type":"flag_option","flag_name":"F"},"description":"\n     -F      The -F option implies the -f option, but tail will also check to\n             see if the file being followed has been renamed or rotated.  The\n             file is closed and reopened when tail detects that the filename\n             being read from has a new inode number.  The -F option is ignored\n             if reading from standard input rather than a file.\n"},{"name":"-n number","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"n"},{"type":"argument_option","arg_name":"number","arg_type":"Unknown","isList":false}]},"description":"\n     -n number\n             The location is number lines.\n"},{"name":"-q","option":{"type":"flag_option","flag_name":"q"},"description":"\n     -q      Suppresses printing of headers when multiple files are being\n             examined.\n"},{"name":"-r","option":{"type":"flag_option","flag_name":"r"},"description":"\n     -r      The -r option causes the input to be displayed in reverse order,\n             by line.  Additionally, this option changes the meaning of the\n             -b, -c and -n options.  When the -r option is specified, these\n             options specify the number of bytes, lines or 512-byte blocks to\n             display, instead of the bytes, lines or blocks from the beginning\n             or end of the input from which to begin the display.  The default\n             for the -r option is to display all of the input.\n"}],"name":"tail"},{"aliases":["seq"],"description":"seq: print sequences of numbers\n\n     The seq utility prints a sequence of numbers, one per line (default),\n     from first (default 1), to near last as possible, in increments of incr\n     (default 1).  When first is larger than last the default incr is -1.\n\n     All numbers are interpreted as floating point.\n\n     Normally integer values are printed as decimal integers.\n","rawSynopsis":"seq [-w] [-f format] [-s string] [-t string] [first [incr]] last","optionLists":[{"type":"compound_options","commands":[{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"w"}},{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"f"},{"type":"argument_option","arg_name":"format","arg_type":"Unknown","isList":false}]}},{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"s"},{"type":"argument_option","arg_name":"string","arg_type":"Unknown","isList":false}]}},{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"t"},{"type":"argument_option","arg_name":"string","arg_type":"Unknown","isList":false}]}},{"type":"optional_option","cmd":{"type":"compound_options","commands":[{"type":"argument_option","arg_name":"first","arg_type":"Unknown","isList":false},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"incr","arg_type":"Unknown","isList":false}}]}},{"type":"argument_option","arg_name":"last","arg_type":"Unknown","isList":false}]}],"optionDesc":[{"name":"-f format","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"f"},{"type":"argument_option","arg_name":"format","arg_type":"Unknown","isList":false}]},"description":"\n     -f format     Use a printf(3) style format to print each number.  Only\n                   the E, e, f, G, g, and % conversion characters are valid,\n                   along with any optional flags and an optional numeric mini-\n                   mum field width or precision.  The format can contain char-\n                   acter escape sequences in backslash notation as defined in\n                   ANSI X3.159-1989 (``ANSI C89'').  The default is %g.\n"},{"name":"-s string","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"s"},{"type":"argument_option","arg_name":"string","arg_type":"Unknown","isList":false}]},"description":"\n     -s string     Use string to separate numbers.  The string can contain\n                   character escape sequences in backslash notation as defined\n                   in ANSI X3.159-1989 (``ANSI C89'').  The default is \\n.\n"},{"name":"-t string","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"t"},{"type":"argument_option","arg_name":"string","arg_type":"Unknown","isList":false}]},"description":"\n     -t string     Use string to terminate sequence of numbers.  The string\n                   can contain character escape sequences in backslash nota-\n                   tion as defined in ANSI X3.159-1989 (``ANSI C89'').  This\n                   option is useful when the default separator does not con-\n                   tain a \\n.\n"},{"name":"-w","option":{"type":"flag_option","flag_name":"w"},"description":"\n     -w            Equalize the widths of all numbers by padding with zeros as\n                   necessary.  This option has no effect with the -f option.\n                   If any sequence numbers will be printed in exponential\n                   notation, the default conversion is changed to %e.\n"}],"name":"seq"},{"aliases":["unlink"],"description":"unlink: call the unlink function to remove the specified file\n\n\n       Call the unlink function to remove the specified FILE.\n\n       --help display this help and exit\n\n       --version\n","rawSynopsis":"","optionLists":[],"optionDesc":[],"name":"unlink"},{"aliases":["cat"],"description":"cat: concatenate and print files\n\n     The cat utility reads files sequentially, writing them to the standard\n     output.  The file operands are processed in command-line order.  If file\n     is a single dash (`-') or absent, cat reads from the standard input.  If\n     file is a UNIX domain socket, cat connects to it and then reads it until\n     EOF.  This complements the UNIX domain binding capability available in\n     inetd(8).\n","rawSynopsis":"cat [-benstuv] [file ...]","optionLists":[{"type":"compound_options","commands":[{"type":"compound_options","commands":[{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"b"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"e"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"n"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"s"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"t"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"u"}},{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"v"}}]},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"file","arg_type":"Unknown","isList":true}}]}],"optionDesc":[{"name":"-b","option":{"type":"flag_option","flag_name":"b"},"description":"\n     -b      Number the non-blank output lines, starting at 1.\n"},{"name":"-e","option":{"type":"flag_option","flag_name":"e"},"description":"\n     -e      Display non-printing characters (see the -v option), and display\n             a dollar sign (`$') at the end of each line.\n"},{"name":"-n","option":{"type":"flag_option","flag_name":"n"},"description":"\n     -n      Number the output lines, starting at 1.\n"},{"name":"-s","option":{"type":"flag_option","flag_name":"s"},"description":"\n     -s      Squeeze multiple adjacent empty lines, causing the output to be\n             single spaced.\n"},{"name":"-t","option":{"type":"flag_option","flag_name":"t"},"description":"\n     -t      Display non-printing characters (see the -v option), and display\n             tab characters as `^I'.\n"},{"name":"-u","option":{"type":"flag_option","flag_name":"u"},"description":"\n     -u      Disable output buffering.\n"},{"name":"-v","option":{"type":"flag_option","flag_name":"v"},"description":"\n     -v      Display non-printing characters so they are visible.  Control\n             characters print as `^X' for control-X; the delete character\n             (octal 0177) prints as `^?'.  Non-ASCII characters (with the high\n             bit set) are printed as `M-' (for meta) followed by the character\n             for the low 7 bits.\n"}],"name":"cat"},{"aliases":["zip"],"description":"zip: package and compress (archive) files\n\n       zip  is  a compression and file packaging utility for Unix, VMS, MSDOS,\n       OS/2, Windows 9x/NT/XP, Minix, Atari, Macintosh, Amiga, and Acorn  RISC\n       OS.   It  is analogous to a combination of the Unix commands tar(1) and\n       compress(1) and is compatible with PKZIP (Phil  Katz's  ZIP  for  MSDOS\n       systems).\n\n       A  companion  program  (unzip(1L))  unpacks  zip archives.  The zip and\n       unzip(1L) programs can work with archives produced by PKZIP (supporting\n       most PKZIP features up to PKZIP version 4.6), and PKZIP and PKUNZIP can\n       work with archives produced  by  zip  (with  some  exceptions,  notably\n       streamed  archives,  but  recent  changes  in the zip file standard may\n       facilitate better compatibility).  zip version 3.0 is  compatible  with\n       PKZIP  2.04  and  also supports the Zip64 extensions of PKZIP 4.5 which\n       allow archives as well as files to exceed the previous 2 GB limit (4 GB\n       in  some  cases).  zip also now supports bzip2 compression if the bzip2\n       library is included when zip is compiled.  Note that PKUNZIP 1.10  can-\n       not extract files produced by PKZIP 2.04 or zip 3.0. You must use PKUN-\n       ZIP 2.04g or unzip 5.0p1 (or later versions) to extract them.\n\n       See the EXAMPLES section at the bottom of this  page  for  examples  of\n       some typical uses of zip.\n\n       Large Archives and Zip64.   zip automatically uses the Zip64 extensions\n       when files larger than 4 GB are added to an archive,  an  archive  con-\n       taining  Zip64 entries is updated (if the resulting archive still needs\n       Zip64), the size of the archive will exceed 4 GB, or when the number of\n       entries  in  the archive will exceed about 64K.  Zip64 is also used for\n       archives streamed from standard input as the size of such archives  are\n       not  known  in advance, but the option -fz- can be used to force zip to\n       create PKZIP 2 compatible archives (as long as Zip64 extensions are not\n       needed).   You must use a PKZIP 4.5 compatible unzip, such as unzip 6.0\n       or later, to extract files using the Zip64 extensions.\n\n       In addition, streamed archives, entries encrypted with standard encryp-\n       tion,  or  split archives created with the pause option may not be com-\n       patible with PKZIP as data descriptors are used and PKZIP at  the  time\n       of  this  writing does not support data descriptors (but recent changes\n       in the PKWare published zip standard now include some support  for  the\n       data descriptor format zip uses).\n\n\n       Mac  OS  X.   Though  previous Mac versions had their own zip port, zip\n       supports Mac OS X as part of the  Unix  port  and  most  Unix  features\n       apply.   References  to \"MacOS\" below generally refer to MacOS versions\n       older than OS X.  Support for some Mac OS features in the Unix Mac OS X\n       port, such as resource forks, is expected in the next zip release.\n\n\n       For  a  brief  help  on  zip and unzip, run each without specifying any\n       parameters on the command line.\n","rawSynopsis":"zip  [-aABcdDeEfFghjklLmoqrRSTuvVwXyz@$] [--longoption ...]  [-b path]\n[-n suffixes] [-t date] [-tt date] [zipfile [file ...]]  [-xi list]","optionLists":[],"optionDesc":[{"name":"-@ file lists","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"@"},{"type":"argument_option","arg_name":"file","arg_type":"Unknown","isList":false},{"type":"argument_option","arg_name":"lists","arg_type":"Unknown","isList":false}]},"description":"\n       -@ file lists.   If  a file list is specified as -@ [Not on MacOS], zip"},{"name":"-a","option":{"type":"flag_option","flag_name":"a"},"description":"\n       -a"},{"name":"--ascii","option":{"type":"long_flag_option","flag_name":"ascii","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n       --ascii\n              [Systems using EBCDIC] Translate file to ASCII format.\n\n"},{"name":"-A","option":{"type":"flag_option","flag_name":"A"},"description":"\n       -A"},{"name":"--adjust-sfx","option":{"type":"long_flag_option","flag_name":"adjust-sfx","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n       --adjust-sfx\n              Adjust self-extracting executable  archive.   A  self-extracting\n              executable  archive  is created by prepending the SFX stub to an\n              existing archive. The -A option tells zip to  adjust  the  entry\n              offsets  stored in the archive to take into account this \"pream-\n              ble\" data.\n"}],"name":"zip"},{"aliases":["unzip"],"description":"unzip: list, test and extract compressed files in a ZIP archive\n\n       unzip will list, test, or extract files from a  ZIP  archive,  commonly\n       found  on MS-DOS systems.  The default behavior (with no options) is to\n       extract into the current directory (and subdirectories  below  it)  all\n       files  from  the  specified ZIP archive.  A companion program, zip(1L),\n       creates ZIP archives; both programs are compatible with  archives  cre-\n       ated  by  PKWARE's  PKZIP and PKUNZIP for MS-DOS, but in many cases the\n","rawSynopsis":"unzip  [-Z]  [-cflptTuvz[abjnoqsCKLMVWX$/:]]  file[.zip]  [file(s) ...]\n[-x xfile(s) ...] [-d exdir]","optionLists":[],"optionDesc":[{"name":"-Z","option":{"type":"flag_option","flag_name":"Z"},"description":"\n       -Z     zipinfo(1L) mode.  If the first option on the  command  line  is\n              -Z,  the  remaining options are taken to be zipinfo(1L) options.\n              See the appropriate manual  page  for  a  description  of  these\n              options.\n"},{"name":"-A","option":{"type":"flag_option","flag_name":"A"},"description":"\n       -A     [OS/2,  Unix  DLL] print extended help for the DLL's programming\n              interface (API).\n"},{"name":"-c","option":{"type":"flag_option","flag_name":"c"},"description":"\n       -c     extract files to stdout/screen (``CRT'').  This option is  simi-\n              lar  to  the  -p  option  except  that  the name of each file is\n              printed as it is extracted, the -a option is allowed, and ASCII-\n              EBCDIC  conversion  is  automatically  performed if appropriate.\n              This option is not listed in the unzip usage screen.\n"},{"name":"-f","option":{"type":"flag_option","flag_name":"f"},"description":"\n       -f     freshen existing files, i.e.,  extract  only  those  files  that\n              already  exist  on disk and that are newer than the disk copies.\n              By default unzip queries before overwriting, but the  -o  option\n              may be used to suppress the queries.  Note that under many oper-\n              ating systems, the TZ (timezone) environment  variable  must  be\n              set  correctly  in  order  for -f and -u to work properly (under\n              Unix the variable is usually set  automatically).   The  reasons\n              for this are somewhat subtle but have to do with the differences\n              between DOS-format file times (always local time) and  Unix-for-\n              mat  times  (always in GMT/UTC) and the necessity to compare the\n              two.  A typical TZ value is ``PST8PDT'' (US  Pacific  time  with\n              automatic  adjustment  for  Daylight  Savings  Time  or ``summer\n              time'').\n"},{"name":"-l","option":{"type":"flag_option","flag_name":"l"},"description":"\n       -l     list archive files (short format).  The names, uncompressed file\n              sizes  and  modification  dates and times of the specified files\n              are printed, along with totals  for  all  files  specified.   If\n              UnZip  was  compiled  with  OS2_EAS  defined, the -l option also\n              lists columns for the sizes of stored OS/2  extended  attributes\n              (EAs)  and  OS/2  access control lists (ACLs).  In addition, the\n              zipfile comment and individual file comments (if any)  are  dis-\n              played.   If  a file was archived from a single-case file system\n              (for example, the old MS-DOS FAT file system) and the -L  option\n              was  given,  the  filename is converted to lowercase and is pre-\n              fixed with a caret (^).\n"},{"name":"-p","option":{"type":"flag_option","flag_name":"p"},"description":"\n       -p     extract files to pipe (stdout).  Nothing but the  file  data  is\n              sent  to  stdout,  and  the files are always extracted in binary\n              format, just as they are stored (no conversions).\n"},{"name":"-t","option":{"type":"flag_option","flag_name":"t"},"description":"\n       -t     test archive files.  This option extracts each specified file in\n              memory  and  compares  the  CRC  (cyclic  redundancy  check,  an\n              enhanced checksum) of the expanded file with the original file's\n              stored CRC value.\n"},{"name":"-T","option":{"type":"flag_option","flag_name":"T"},"description":"\n       -T     [most  OSes]  set the timestamp on the archive(s) to that of the\n              newest file in each one.  This corresponds to zip's  -go  option\n              except  that  it can be used on wildcard zipfiles (e.g., ``unzip\n              -T \\*.zip'') and is much faster.\n"},{"name":"-u","option":{"type":"flag_option","flag_name":"u"},"description":"\n       -u     update existing files and  create  new  ones  if  needed.   This\n              option  performs  the same function as the -f option, extracting\n              (with query) files that are newer than those with the same  name\n              on  disk,  and  in  addition it extracts those files that do not\n              already exist on disk.  See -f above for information on  setting\n              the timezone properly.\n"},{"name":"-v","option":{"type":"flag_option","flag_name":"v"},"description":"\n       -v     be  verbose  or  print diagnostic version info.  This option has\n              evolved and now behaves as both an option and a modifier.  As an\n              option it has two purposes:  when a zipfile is specified with no\n              other options, -v lists archive files verbosely, adding  to  the\n              basic  -l info the compression method, compressed size, compres-\n              sion ratio and 32-bit CRC.  In contrast to most of the competing\n              utilities,  unzip  removes  the  12  additional  header bytes of\n              encrypted entries from the compressed size numbers.   Therefore,\n              compressed size and compression ratio figures are independent of\n              the entry's encryption status and show the  correct  compression\n              performance.  (The complete size of the encryped compressed data\n              stream for zipfile entries is reported by the more verbose  zip-\n              info(1L)  reports, see the separate manual.)  When no zipfile is\n              specified (that is,  the  complete  command  is  simply  ``unzip\n              -v''),  a diagnostic screen is printed.  In addition to the nor-\n              mal header with release date and version, unzip lists  the  home\n              Info-ZIP ftp site and where to find a list of other ftp and non-\n              ftp sites; the target operating system for  which  it  was  com-\n              piled,  as  well as (possibly) the hardware on which it was com-\n              piled, the compiler and version used, and the compilation  date;\n              any  special compilation options that might affect the program's\n              operation (see also DECRYPTION below); and any options stored in\n              environment  variables  that  might do the same (see ENVIRONMENT\n              OPTIONS below).  As a modifier  it  works  in  conjunction  with\n              other  options  (e.g.,  -t) to produce more verbose or debugging\n              output; this is not yet fully implemented but will be in  future\n              releases.\n"},{"name":"-z","option":{"type":"flag_option","flag_name":"z"},"description":"\n       -z     display only the archive comment.\n"}],"name":"unzip"},{"aliases":["du"],"description":"du: display disk usage statistics\n\n     The du utility displays the file system block usage for each file argu-\n     ment and for each directory in the file hierarchy rooted in each direc-\n     tory argument.  If no file is specified, the block usage of the hierarchy\n     rooted in the current directory is displayed.\n","rawSynopsis":"du [-H | -L | -P] [-a | -s | -d depth] [-c] [-h | -k | -m | -g] [-x]\n[-I mask] [file ...]","optionLists":[],"optionDesc":[{"name":"-a","option":{"type":"flag_option","flag_name":"a"},"description":"\n     -a      Display an entry for each file in a file hierarchy.\n"},{"name":"-c","option":{"type":"flag_option","flag_name":"c"},"description":"\n     -c      Display a grand total.\n"},{"name":"-d depth","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"d"},{"type":"argument_option","arg_name":"depth","arg_type":"Unknown","isList":false}]},"description":"\n     -d depth\n             Display an entry for all files and directories depth directories\n             deep.\n"},{"name":"-H","option":{"type":"flag_option","flag_name":"H"},"description":"\n     -H      Symbolic links on the command line are followed, symbolic links\n             in file hierarchies are not followed.\n"},{"name":"-h","option":{"type":"flag_option","flag_name":"h"},"description":"\n     -h      \"Human-readable\" output.  Use unit suffixes: Byte, Kilobyte,\n             Megabyte, Gigabyte, Terabyte and Petabyte.\n"},{"name":"-I mask","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"I"},{"type":"argument_option","arg_name":"mask","arg_type":"Unknown","isList":false}]},"description":"\n     -I mask\n             Ignore files and directories matching the specified mask.\n"},{"name":"-g","option":{"type":"flag_option","flag_name":"g"},"description":"\n     -g      Display block counts in 1073741824-byte (1-Gbyte) blocks.\n"},{"name":"-k","option":{"type":"flag_option","flag_name":"k"},"description":"\n     -k      Display block counts in 1024-byte (1-Kbyte) blocks.\n"},{"name":"-L","option":{"type":"flag_option","flag_name":"L"},"description":"\n     -L      Symbolic links on the command line and in file hierarchies are\n             followed.\n"},{"name":"-m","option":{"type":"flag_option","flag_name":"m"},"description":"\n     -m      Display block counts in 1048576-byte (1-Mbyte) blocks.\n"},{"name":"-P","option":{"type":"flag_option","flag_name":"P"},"description":"\n     -P      No symbolic links are followed.  This is the default.\n"},{"name":"-r","option":{"type":"flag_option","flag_name":"r"},"description":"\n     -r      Generate messages about directories that cannot be read, files\n             that cannot be opened, and so on.  This is the default case.\n             This option exists solely for conformance with X/Open Portability\n             Guide Issue 4 (``XPG4'').\n"},{"name":"-s","option":{"type":"flag_option","flag_name":"s"},"description":"\n     -s      Display an entry for each specified file.  (Equivalent to -d 0)\n"},{"name":"-x","option":{"type":"flag_option","flag_name":"x"},"description":"\n     -x      File system mount points are not traversed.\n"}],"name":"du"},{"aliases":["echo"],"description":"echo: write arguments to the standard output\n\n     The echo utility writes any specified operands, separated by single blank\n     (` ') characters and followed by a newline (`\\n') character, to the stan-\n     dard output.\n","rawSynopsis":"echo [-n] [string ...]","optionLists":[{"type":"compound_options","commands":[{"type":"optional_option","cmd":{"type":"flag_option","flag_name":"n"}},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"string","arg_type":"Unknown","isList":true}}]}],"optionDesc":[{"name":"-n","option":{"type":"flag_option","flag_name":"n"},"description":"\n     -n    Do not print the trailing newline character.  This may also be\n           achieved by appending `\\c' to the end of the string, as is done by\n           iBCS2 compatible systems.  Note that this option as well as the\n           effect of `\\c' are implementation-defined in IEEE Std 1003.1-2001\n           (``POSIX.1'') as amended by Cor. 1-2002.  Applications aiming for\n           maximum portability are strongly encouraged to use printf(1) to\n           suppress the newline character.\n"}],"name":"echo"},{"aliases":["diff"],"description":"diff: compare files line by line\n\n","rawSynopsis":"diff [OPTION]... FILES","optionLists":[{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"OPTION","arg_type":"Unknown","isList":false}}],"optionDesc":[{"name":"-i","option":{"type":"flag_option","flag_name":"i"},"description":"\n       -i  --ignore-case\n              Ignore case differences in file contents.\n"},{"name":"--ignore-file-name-case","option":{"type":"long_flag_option","flag_name":"ignore-file-name-case","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n       --ignore-file-name-case\n              Ignore case when comparing file names.\n"},{"name":"--no-ignore-file-name-case","option":{"type":"long_flag_option","flag_name":"no-ignore-file-name-case","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n       --no-ignore-file-name-case\n              Consider case when comparing file names.\n"},{"name":"-E","option":{"type":"flag_option","flag_name":"E"},"description":"\n       -E  --ignore-tab-expansion\n              Ignore changes due to tab expansion.\n"},{"name":"-b","option":{"type":"flag_option","flag_name":"b"},"description":"\n       -b  --ignore-space-change\n              Ignore changes in the amount of white space.\n"},{"name":"-w","option":{"type":"flag_option","flag_name":"w"},"description":"\n       -w  --ignore-all-space\n              Ignore all white space.\n"},{"name":"-B","option":{"type":"flag_option","flag_name":"B"},"description":"\n       -B  --ignore-blank-lines\n              Ignore changes whose lines are all blank.\n"},{"name":"-I RE","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"I"},{"type":"argument_option","arg_name":"RE","arg_type":"Unknown","isList":false}]},"description":"\n       -I RE  --ignore-matching-lines=RE\n              Ignore changes whose lines all match RE.\n"},{"name":"--strip-trailing-cr","option":{"type":"long_flag_option","flag_name":"strip-trailing-cr","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n       --strip-trailing-cr\n              Strip trailing carriage return on input.\n"},{"name":"-a","option":{"type":"flag_option","flag_name":"a"},"description":"\n       -a  --text\n              Treat all files as text.\n"},{"name":"-c","option":{"type":"flag_option","flag_name":"c"},"description":"\n       -c  -C NUM  --context[=NUM]\n              Output NUM (default 3) lines of copied context.\n"},{"name":"-u","option":{"type":"flag_option","flag_name":"u"},"description":"\n       -u  -U NUM  --unified[=NUM]\n              Output NUM (default 3) lines of unified context.\n"},{"name":"--label LABEL","option":{"type":"compound_options","commands":[{"type":"long_flag_option","flag_name":"label","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},{"type":"argument_option","arg_name":"LABEL","arg_type":"Unknown","isList":false}]},"description":"\n       --label LABEL\n              Use LABEL instead of file name.\n"},{"name":"-p","option":{"type":"flag_option","flag_name":"p"},"description":"\n       -p  --show-c-function\n              Show which C function each change is in.\n"},{"name":"-F RE","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"F"},{"type":"argument_option","arg_name":"RE","arg_type":"Unknown","isList":false}]},"description":"\n       -F RE  --show-function-line=RE\n              Show the most recent line matching RE.\n"},{"name":"-q","option":{"type":"flag_option","flag_name":"q"},"description":"\n       -q  --brief\n              Output only whether files differ.\n"},{"name":"-e","option":{"type":"flag_option","flag_name":"e"},"description":"\n       -e  --ed\n              Output an ed script.\n"},{"name":"--normal","option":{"type":"long_flag_option","flag_name":"normal","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n       --normal\n              Output a normal diff.\n"},{"name":"-n","option":{"type":"flag_option","flag_name":"n"},"description":"\n       -n  --rcs\n              Output an RCS format diff.\n"},{"name":"-y","option":{"type":"flag_option","flag_name":"y"},"description":"\n       -y  --side-by-side\n              Output in two columns.\n"},{"name":"-W NUM","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"W"},{"type":"argument_option","arg_name":"NUM","arg_type":"Unknown","isList":false}]},"description":"\n       -W NUM  --width=NUM\n              Output at most NUM (default 130) print columns.\n"},{"name":"--left-column","option":{"type":"long_flag_option","flag_name":"left-column","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n       --left-column\n              Output only the left column of common lines.\n"},{"name":"--suppress-common-lines","option":{"type":"long_flag_option","flag_name":"suppress-common-lines","arg_exists":false,"arg_optional":false,"argument":{"type":"argument_option","isList":false}},"description":"\n       --suppress-common-lines\n              Do not output common lines.\n"},{"name":"-D NAME","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"D"},{"type":"argument_option","arg_name":"NAME","arg_type":"Unknown","isList":false}]},"description":"\n       -D NAME  --ifdef=NAME\n              Output merged file to show `#ifdef NAME' diffs.\n"},{"name":"--GTYPE-group-format[=GFMT]","option":{"type":"long_flag_option","flag_name":"GTYPE-group-format","arg_exists":true,"arg_optional":false,"argument":{"type":"argument_option","arg_name":"GFMT","arg_type":"Unknown","isList":false}},"description":"\n       --GTYPE-group-format=GFMT\n              Similar, but format GTYPE input groups with GFMT.\n"},{"name":"--line-format[=LFMT]","option":{"type":"long_flag_option","flag_name":"line-format","arg_exists":true,"arg_optional":false,"argument":{"type":"argument_option","arg_name":"LFMT","arg_type":"Unknown","isList":false}},"description":"\n       --line-format=LFMT\n              Similar, but format all input lines with LFMT.\n"},{"name":"--LTYPE-line-format[=LFMT]","option":{"type":"long_flag_option","flag_name":"LTYPE-line-format","arg_exists":true,"arg_optional":false,"argument":{"type":"argument_option","arg_name":"LFMT","arg_type":"Unknown","isList":false}},"description":"\n       --LTYPE-line-format=LFMT\n              Similar, but format LTYPE input lines with LFMT.\n"}],"name":"diff"},{"aliases":["comm"],"description":"comm: select or reject lines common to two files\n\n     The comm utility reads file1 and file2, which should be sorted lexically,\n     and produces three text columns as output: lines only in file1; lines\n     only in file2; and lines in both files.\n\n     The filename ``-'' means the standard input.\n","rawSynopsis":"comm [-123i] file1 file2","optionLists":[],"optionDesc":[{"name":"-i","option":{"type":"flag_option","flag_name":"i"},"description":"\n     -i      Case insensitive comparison of lines.\n"}],"name":"comm"},{"aliases":["bash"],"description":"bash: GNU Bourne-Again SHell\n\n       Bash  is  an  sh-compatible  command language interpreter that executes\n       commands read from the standard input or from a file.  Bash also incor-\n       porates useful features from the Korn and C shells (ksh and csh).\n\n       Bash  is  intended  to  be a conformant implementation of the Shell and\n       Utilities portion  of  the  IEEE  POSIX  specification  (IEEE  Standard\n","rawSynopsis":"bash [options] [file]","optionLists":[{"type":"compound_options","commands":[{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"options","arg_type":"Unknown","isList":false}},{"type":"optional_option","cmd":{"type":"argument_option","arg_name":"file","arg_type":"Unknown","isList":false}}]}],"optionDesc":[{"name":"-c string If","option":{"type":"compound_options","commands":[{"type":"flag_option","flag_name":"c"},{"type":"argument_option","arg_name":"string","arg_type":"Unknown","isList":false},{"type":"argument_option","arg_name":"If","arg_type":"Unknown","isList":false}]},"description":"\n       -c string If  the  -c  option  is  present, then commands are read from\n                 string.  If there are arguments after the  string,  they  are\n                 assigned to the positional parameters, starting with $0."},{"name":"-i","option":{"type":"flag_option","flag_name":"i"},"description":"\n       -i        If the -i option is present, the shell is interactive."},{"name":"-l","option":{"type":"flag_option","flag_name":"l"},"description":"\n       -l        Make bash act as if it had been invoked as a login shell (see\n                 INVOCATION below)."},{"name":"-r","option":{"type":"flag_option","flag_name":"r"},"description":"\n       -r        If the -r option is present,  the  shell  becomes  restricted\n                 (see RESTRICTED SHELL below)."},{"name":"-s","option":{"type":"flag_option","flag_name":"s"},"description":"\n       -s        If  the -s option is present, or if no arguments remain after\n                 option processing, then commands are read from  the  standard\n                 input.   This  option  allows the positional parameters to be\n                 set when invoking an interactive shell."},{"name":"-D","option":{"type":"flag_option","flag_name":"D"},"description":"\n       -D        A list of all double-quoted strings preceded by $ is  printed\n                 on  the standard output.  These are the strings that are sub-\n                 ject to language translation when the current locale is not C\n                 or  POSIX.   This  implies the -n option; no commands will be\n                 executed."}],"name":"bash"}]