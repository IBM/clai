description,prediction,template,correct template,correct command,correct template A,correct command A,correct template B,correct command B,correct template C,correct command C
"Add ""prefix_"" to every non-blank line in ""a.txt""","nl -s ""prefix_"" ""*.txt"" | cut -c [number]","nl -s Regex File | cut -c Number",y,n,y,n,y,n,n,n
"Add ""prefix_"" to every non-blank line in ""a.txt""","nl -s [regex] ""*.txt"" | cut -f [number] -d ""prefix_""","nl -s Regex File | cut -f Number -d Regex",n,n,n,n,n,n,,
"Add ""prefix_"" to every non-blank line in ""a.txt""","nl -s ""prefix_"" ""*.txt"" | cut -d [regex] -f [number]","nl -s Regex File | cut -d Regex -f Number",n,n,y,n,n,n,n,n
"Add the .abc suffix to the names of all *.txt regular files in the current directory tree","find "".abc"" -name ""*.txt"" -type f -exec rename [regex] {} \;","find Path -name Regex -type f -exec rename Regex {} \;",y,n,y,n,y,n,y,n
"Add the .abc suffix to the names of all *.txt regular files in the current directory tree","find "".abc"" -name ""*.txt"" -type f -print0 | xargs -0 -I {} rename [regex] {}","find Path -name Regex -type f -print0 | xargs -0 -I {} rename Regex {}",y,n,y,n,y,n,y,n
"Add the .abc suffix to the names of all *.txt regular files in the current directory tree","find "".abc"" -type f -name ""*.txt"" -exec rename [regex] [regex] {} \;","find Path -type f -name Regex -exec rename Regex Regex {} \;",n,n,n,n,y,n,n,n
"Add cron lists from ""filename"" to list of cron jobs, giving errors for any lines that cannot be parsed by crontab.","cat ""filename"" [file] | crontab","cat File File | crontab",y,n,n,n,y,n,y,y
"Add cron lists from ""filename"" to list of cron jobs, giving errors for any lines that cannot be parsed by crontab.","cat ""filename"" [file] | xargs -n [quantity] -I {} echo {}","cat File File | xargs -n Quantity -I {} echo {}",n,n,n,n,n,n,,
"Add cron lists from ""filename"" to list of cron jobs, giving errors for any lines that cannot be parsed by crontab.","crontab -l | grep ""filename"" | cut -d [regex] -f [number] | cut -d [regex] -f [number] | tr [regex] [regex]","crontab -l | grep Regex | cut -d Regex -f Number | cut -d Regex -f Number | tr Regex Regex",n,n,n,n,n,n,,
"Archive ""/media/Incoming/music/"" to ""/media/10001/music/"" on host ""server"" and skip files that are newer in the destination, delete any files in the destination not in the source, and compress data during transmission","","",n,n,n,n,n,n,,
"Archive ""/media/Incoming/music/"" to ""/media/10001/music/"" on host ""server"" and skip files that are newer in the destination, delete any files in the destination not in the source, and compress data during transmission","","",n,n,n,n,n,n,,
"Archive ""/media/Incoming/music/"" to ""/media/10001/music/"" on host ""server"" and skip files that are newer in the destination, delete any files in the destination not in the source, and compress data during transmission","","",n,n,n,n,n,n,,
"Archive ""/path/to/copy"" on host ""remote.host"" as user ""user"" to ""/path/to/local/storage"" updating files with different checksums, showing human readable progress and statistics, and compressing data during transmission","rsync -a -v -z -P --include=""/path/to/local/storage"" --exclude=""/path/to/copy"" ""remote.host"" ""user""","rsync -a -v -z -P --include Regex --exclude Regex File File",n,n,n,n,n,n,,
"Archive ""/path/to/copy"" on host ""remote.host"" as user ""user"" to ""/path/to/local/storage"" updating files with different checksums, showing human readable progress and statistics, and compressing data during transmission","rsync -a -v -z -P --stats --include=""/path/to/copy"" --exclude=""/path/to/local/storage"" ""remote.host"" ""user""","rsync -a -v -z -P --stats --include Regex --exclude Regex File File",n,n,n,n,n,n,,
"Archive ""/path/to/copy"" on host ""remote.host"" as user ""user"" to ""/path/to/local/storage"" updating files with different checksums, showing human readable progress and statistics, and compressing data during transmission","","",n,n,n,n,n,n,,
"Archive ""/path/to/files"" on host ""remotemachine"" authentifying as user ""user"" and compressing data during transmission, copy symlinks as symlinks.","rsync -a -v -z -P ""/path/to/files"" ""user"" ""remotemachine""","rsync -a -v -z -P File File File",n,n,n,n,n,n,,
"Archive ""/path/to/files"" on host ""remotemachine"" authentifying as user ""user"" and compressing data during transmission, copy symlinks as symlinks.","rsync -a -v -z -P --size-only ""/path/to/files"" ""user"" ""remotemachine""","rsync -a -v -z -P --size-only File File File",n,n,n,n,n,n,,
"Archive ""/path/to/files"" on host ""remotemachine"" authentifying as user ""user"" and compressing data during transmission, copy symlinks as symlinks.","rsync -a -v -z -P --dry-run ""/path/to/files"" ""remotemachine"" ""user""","rsync -a -v -z -P --dry-run File File File",n,n,n,n,n,n,,
"Archive ""foo/bar/baz.c"" to ""remote:/tmp/"" preserving the relative path of ""foo/bar/baz.c""","","",n,n,n,n,n,n,,
"Archive ""foo/bar/baz.c"" to ""remote:/tmp/"" preserving the relative path of ""foo/bar/baz.c""","","",n,n,n,n,n,n,,
"Archive ""foo/bar/baz.c"" to ""remote:/tmp/"" preserving the relative path of ""foo/bar/baz.c""","","",n,n,n,n,n,n,,
"Archive ""myfile"" to ""/foo/bar/"" and create directory ""/foo/bar/"" if ""/foo/"" exists","","",n,n,n,n,n,n,,
"Archive ""myfile"" to ""/foo/bar/"" and create directory ""/foo/bar/"" if ""/foo/"" exists","","",n,n,n,n,n,n,,
"Archive ""myfile"" to ""/foo/bar/"" and create directory ""/foo/bar/"" if ""/foo/"" exists","","",n,n,n,n,n,n,,
"Archive all files beginning with .env or .bash in current directory to user's home directory on host ""app1"", preserving timestamps and skipping files that are newer on ""app1""","find "".bash"" \( -name "".env"" -or -name ""*"" \) -prune -or -name ""app1"" -print","find Path \( -name Regex -or -name Regex \) -prune -or -name Regex -print",n,n,n,n,n,n,,
"Archive all files beginning with .env or .bash in current directory to user's home directory on host ""app1"", preserving timestamps and skipping files that are newer on ""app1""","find "".bash"" -user ""app1"" \( -name "".env"" -or -name ""*"" \) -print","find Path -user Regex \( -name Regex -or -name Regex \) -print",n,n,n,n,n,n,,
"Archive all files beginning with .env or .bash in current directory to user's home directory on host ""app1"", preserving timestamps and skipping files that are newer on ""app1""","rsync -a -v --exclude="".env"" --exclude=[regex] "".bash"" ""app1""","rsync -a -v --exclude Regex --exclude Regex File File",n,n,n,n,n,n,,
"Archive all files (not directories) in ""folder1"" to ""copy_of_folder1"" specifying to include files info.txt and data.zip","tar -c -z -f ""info.txt"" ""data.zip"" | tee ""copy_of_folder1"" ""folder1""","tar -c -z -f File File | tee File File",n,n,n,n,n,n,,
"Archive all files (not directories) in ""folder1"" to ""copy_of_folder1"" specifying to include files info.txt and data.zip","tar -c -z -v -f ""info.txt"" ""data.zip"" | tee ""copy_of_folder1"" ""folder1""","tar -c -z -v -f File File | tee File File",n,n,n,n,n,n,,
"Archive all files (not directories) in ""folder1"" to ""copy_of_folder1"" specifying to include files info.txt and data.zip","tar -c -z -v ""copy_of_folder1"" ""data.zip"" | tee ""info.txt"" ""folder1""","tar -c -z -v File File | tee File File",n,n,n,n,n,n,,
"Archive all files specified on standard input under ""/path/to/files"" to ""/path"" on host ""targethost"" as user ""user"" with escalated privileges","find ""/path/to/files"" | tee ""/path"" | xargs -d ""user"" -I {} tar -c -v -z -f ""targethost"" {}","find Path | tee File | xargs -d Regex -I {} tar -c -v -z -f File {}",n,n,n,n,n,n,,
"Archive all files specified on standard input under ""/path/to/files"" to ""/path"" on host ""targethost"" as user ""user"" with escalated privileges","find ""/path/to/files"" | tee ""/path"" | xargs -d ""targethost"" -I {} tar -c -v -f ""user"" {}","find Path | tee File | xargs -d Regex -I {} tar -c -v -f File {}",n,n,n,n,n,n,,
"Archive all files specified on standard input under ""/path/to/files"" to ""/path"" on host ""targethost"" as user ""user"" with escalated privileges","","",n,n,n,n,n,n,,
"Archive directory specified by variable ""i"" to ""/iscsi"" preserving relative paths.","rsync -a --relative ""i"" ""/iscsi""","rsync -a --relative File File",y,n,y,n,y,y,y,n
"Archive directory specified by variable ""i"" to ""/iscsi"" preserving relative paths.","rsync -a -v -R ""i"" ""/iscsi""","rsync -a -v -R File File",y,n,y,n,y,y,y,n
"Archive directory specified by variable ""i"" to ""/iscsi"" preserving relative paths.","rsync -a -v --recursive ""i"" ""/iscsi""","rsync -a -v --recursive File File",n,n,n,n,n,n,,
"Archive directory specified by variable ""myFolder"" to current directory.","rsync -a -v [file] ""myFolder""","rsync -a -v File File",y,n,y,n,y,n,,
"Archive directory specified by variable ""myFolder"" to current directory.","rsync -a --relative [file] ""myFolder""","rsync -a --relative File File",y,n,y,n,y,n,y,n
"Archive directory specified by variable ""myFolder"" to current directory.","rsync -a -v --recursive ""myFolder"" [file]","rsync -a -v --recursive File File",y,n,y,n,y,n,y,n
"Archive preserving permissions and ownership files in ""/var/www/"" on host ""user@10.1.1.2"" to local ""/var/www/""","find ""/var/www/"" ""/var/www/"" -type f | xargs -I {} tar -c -v -f ""user@10.1.1.2"" {}","find Path Path -type f | xargs -I {} tar -c -v -f File {}",n,n,n,n,n,n,,
"Archive preserving permissions and ownership files in ""/var/www/"" on host ""user@10.1.1.2"" to local ""/var/www/""","find ""/var/www/"" ""/var/www/"" -type f -exec tar -z -v -f ""user@10.1.1.2"" {} \;","find Path Path -type f -exec tar -z -v -f File {} \;",n,n,n,n,n,n,,
"Archive preserving permissions and ownership files in ""/var/www/"" on host ""user@10.1.1.2"" to local ""/var/www/""","find ""/var/www/"" ""/var/www/"" -type f | xargs -I {} tar -c -v -z -f ""user@10.1.1.2"" {}","find Path Path -type f | xargs -I {} tar -c -v -z -f File {}",n,n,n,n,n,n,,
"Assigns MAC address 00:80:48:BA:d1:30 to interface eth0.","echo ""eth0"" | xargs -I {} echo ""00:80:48:ba:d1:30"" {}","echo Regex | xargs -I {} echo Regex {}",n,n,n,n,n,n,,
"Assigns MAC address 00:80:48:BA:d1:30 to interface eth0.","find . -name ""00:80:48:ba:d1:30"" -print0 | xargs -0 -I {} echo ""eth0"" [regex] {}","find Path -name Regex -print0 | xargs -0 -I {} echo Regex Regex {}",n,n,n,n,n,n,,
"Assigns MAC address 00:80:48:BA:d1:30 to interface eth0.","echo ""eth0"" | xargs -I {} dirname {} | xargs -I {} echo ""00:80:48:ba:d1:30"" [regex] {}","echo Regex | xargs -I {} dirname {} | xargs -I {} echo Regex Regex {}",n,n,n,n,n,n,,
"Attempt to connect as root via ssh to host whose IP address or hostname is specified by environment variable IPADDRESS - this will normally fail because ssh servers normally don't accept root logins.","scp -o __SP__UNK [file]","scp -o __SP__UNK File",n,n,n,n,n,n,,
"Attempt to connect as root via ssh to host whose IP address or hostname is specified by environment variable IPADDRESS - this will normally fail because ssh servers normally don't accept root logins.","ssh -o __SP__UNK [regex]","ssh -o __SP__UNK Regex",n,n,n,n,n,n,,
"Attempt to connect as root via ssh to host whose IP address or hostname is specified by environment variable IPADDRESS - this will normally fail because ssh servers normally don't accept root logins.","ssh -o __SP__UNK -o __SP__UNK -o __SP__UNK -o __SP__UNK -i [file] [regex]","ssh -o __SP__UNK -o __SP__UNK -o __SP__UNK -o __SP__UNK -i File Regex",n,n,n,n,n,n,,
"bind ""\C-i"" to ""complete"" function","echo ""complete"" | xargs -I {} dirname {} | xargs -I {} echo ""\C-i"" [regex] {}","echo Regex | xargs -I {} dirname {} | xargs -I {} echo Regex Regex {}",n,n,n,n,n,n,,
"bind ""\C-i"" to ""complete"" function","echo ""complete"" | xargs -I {} dirname {} | xargs -I {} echo ""\C-i"" [regex] [regex] {}","echo Regex | xargs -I {} dirname {} | xargs -I {} echo Regex Regex Regex {}",n,n,n,n,n,n,,
"bind ""\C-i"" to ""complete"" function","echo ""complete"" | xargs -I {} echo ""\C-i"" [regex] {}","echo Regex | xargs -I {} echo Regex Regex {}",n,n,n,n,n,n,,
"Calculate md5 checksum of $KEY, take the 1st to 10th character, append them with the string '/tmp/command_cache.' and save the rsultant string to variable FILE","","",n,n,n,n,n,n,,
"Calculate md5 checksum of $KEY, take the 1st to 10th character, append them with the string '/tmp/command_cache.' and save the rsultant string to variable FILE","","",n,n,n,n,n,n,,
"Calculate md5 checksum of $KEY, take the 1st to 10th character, append them with the string '/tmp/command_cache.' and save the rsultant string to variable FILE","","",n,n,n,n,n,n,,
"Calculate the md5 sum of the contents of the sorted list of files ""$FILES""","md5sum ""$FILES"" | cut -d ""md5"" -f [number] | md5sum","md5sum File | cut -d Regex -f Number | md5sum",n,n,n,n,n,n,,
"Calculate the md5 sum of the contents of the sorted list of files ""$FILES""","md5sum ""$FILES"" | cut -d [regex] -f [number] | cut -f [number] -d ""md5""","md5sum File | cut -d Regex -f Number | cut -f Number -d Regex",n,n,n,n,n,n,,
"Calculate the md5 sum of the contents of the sorted list of files ""$FILES""","md5sum ""$FILES"" | cut -d [regex] -f [number] | cut -d ""md5"" -f [number] | md5sum","md5sum File | cut -d Regex -f Number | cut -d Regex -f Number | md5sum",n,n,n,n,n,n,,
"Calculate md5 sum of empty string","echo -n ""md5"" | md5sum","echo -n Regex | md5sum",y,n,y,n,y,n,,
"Calculate md5 sum of empty string","echo -n ""md5"" | md5sum | cut -f [number] -d [regex]","echo -n Regex | md5sum | cut -f Number -d Regex",n,n,y,n,n,n,n,n
"Calculate md5 sum of empty string","echo -n ""md5"" | md5sum | cut -f [number]","echo -n Regex | md5sum | cut -f Number",n,n,y,n,n,n,n,n
"Calculate the md5 sum of the list of files in the current directory","md5sum ""md5""","md5sum File",y,n,y,n,y,n,,
"Calculate the md5 sum of the list of files in the current directory","cat ""md5"" | md5sum","cat File | md5sum",n,n,n,n,y,n,n,n
"Calculate the md5 sum of the list of files in the current directory","md5sum ""md5"" | cut -f [number] -d [regex]","md5sum File | cut -f Number -d Regex",n,n,n,n,n,n,,
"Change all files with no user under ""/var/www"" to have owner ""root"" and group ""apache""","find ""/var/www"" -user ""root"" -exec chown ""apache"" {} \;","find Path -user Regex -exec chown Regex {} \;",n,n,n,n,n,n,,
"Change all files with no user under ""/var/www"" to have owner ""root"" and group ""apache""","find ""/var/www"" -user ""root"" -print0 | xargs -0 -I {} chown ""apache"" {}","find Path -user Regex -print0 | xargs -0 -I {} chown Regex {}",n,n,n,n,n,n,,
"Change all files with no user under ""/var/www"" to have owner ""root"" and group ""apache""","find ""/var/www"" ""root"" -ok chown ""apache"" {} \;","find Path Path -ok chown Regex {} \;",n,n,n,n,n,n,,
"change the extension of all the "".abc"" files in the folder ""/the/path"" to "".edefg"" and do not change in the sub directories","find "".edefg"" -name "".abc"" -maxdepth [quantity] -exec chown ""/the/path"" {} \;","find Path -name Regex -maxdepth Quantity -exec chown Regex {} \;",n,n,n,n,n,n,,
"change the extension of all the "".abc"" files in the folder ""/the/path"" to "".edefg"" and do not change in the sub directories","find "".edefg"" -name "".abc"" -execdir rename ""/the/path"" {} \;","find Path -name Regex -execdir rename Regex {} \;",n,n,n,n,y,n,n,n
"change the extension of all the "".abc"" files in the folder ""/the/path"" to "".edefg"" and do not change in the sub directories","find "".edefg"" ""/the/path"" -name "".abc"" -maxdepth [quantity] -exec chown [regex] {} \;","find Path Path -name Regex -maxdepth Quantity -exec chown Regex {} \;",n,n,n,n,n,n,,
"change the group of all the files in the folder /u/netinst/ to staff","find ""/u/netinst/"" -print | xargs -I {} chgrp [regex] {}","find Path -print | xargs -I {} chgrp Regex {}",y,n,y,n,y,n,,
"change the group of all the files in the folder /u/netinst/ to staff","find ""/u/netinst/"" -print0 | xargs -0 -I {} chown [regex] {}","find Path -print0 | xargs -0 -I {} chown Regex {}",y,n,y,n,n,n,y,n
"change the group of all the files in the folder /u/netinst/ to staff","find ""/u/netinst/"" -print | xargs -I {} chown [regex] {}","find Path -print | xargs -I {} chown Regex {}",y,n,y,n,n,n,y,n
"Changes group ownership of 'logdir' to 'loggroup'.","chgrp ""loggroup"" ""logdir""","chgrp Regex File",y,y,y,y,y,n,y,y
"Changes group ownership of 'logdir' to 'loggroup'.","chown ""loggroup"" ""logdir""","chown Regex File",y,n,y,n,n,n,y,n
"Changes group ownership of 'logdir' to 'loggroup'.","chgrp ""loggroup"" ""logdir"" [file] [file] [file]","chgrp Regex File File File File",n,n,n,n,n,n,,
"Changes group ownership of 'public' and 'private' to 'god'.","chgrp ""god"" ""private"" ""public""","chgrp Regex File File",y,y,y,y,y,y,y,y
"Changes group ownership of 'public' and 'private' to 'god'.","chgrp ""god"" ""private"" ""public"" [file] [file] [file]","chgrp Regex File File File File File",n,n,n,n,n,n,,
"Changes group ownership of 'public' and 'private' to 'god'.","chgrp ""god"" ""private"" ""public"" [file] [file]","chgrp Regex File File File File",n,n,n,n,n,n,,
"Changes group ownership of 'shared' to 'Workers'.","chgrp ""Workers"" ""shared""","chgrp Regex File",y,y,y,y,y,y,y,y
"Changes group ownership of 'shared' to 'Workers'.","chown ""Workers"" ""shared""","chown Regex File",y,n,y,n,n,n,y,n
"Changes group ownership of 'shared' to 'Workers'.","chgrp ""Workers"" ""shared"" [file] [file] [file]","chgrp Regex File File File File",n,n,n,n,n,n,,
"change the owner of all the files in the file system which belong to the user with the uid 999","find . -user 999 -type f -perm -uid -exec chown [regex] {} \;","find Path -user Regex -type f -perm -Permission -exec chown Regex {} \;",n,n,n,n,n,n,,
"change the owner of all the files in the file system which belong to the user with the uid 999","find . -user 999 -type f -perm uid -exec chown [regex] {} \;","find Path -user Regex -type f -perm Permission -exec chown Regex {} \;",n,n,n,n,n,n,,
"change the owner of all the files in the file system which belong to the user with the uid 999","find . -user 999 -type f -user [regex] -perm -uid -exec chown [regex] {} \;","find Path -user Regex -type f -user Regex -perm -Permission -exec chown Regex {} \;",n,n,n,n,n,n,,
"Change the ownership of ""/etc/udev/rules.d/51-android.rules"" to ""root""","chown ""root"" ""/etc/udev/rules.d/51-android.rules""","chown Regex File",y,y,y,y,y,y,y,y
"Change the ownership of ""/etc/udev/rules.d/51-android.rules"" to ""root""","echo ""root"" | xargs -I {} chown ""/etc/udev/rules.d/51-android.rules"" {}","echo Regex | xargs -I {} chown Regex {}",y,n,n,n,y,n,y,n
"Change the ownership of ""/etc/udev/rules.d/51-android.rules"" to ""root""","chgrp ""root"" ""/etc/udev/rules.d/51-android.rules""","chgrp Regex File",n,n,y,y,n,n,n,n
"Change the ownership of ""file.sh"" to ""root""","chown ""root"" ""file.sh""","chown Regex File",y,y,y,y,y,y,y,y
"Change the ownership of ""file.sh"" to ""root""","echo ""root"" | xargs -I {} chown ""file.sh"" {}","echo Regex | xargs -I {} chown Regex {}",y,n,n,n,y,n,y,n
"Change the ownership of ""file.sh"" to ""root""","chgrp ""root"" ""file.sh""","chgrp Regex File",n,n,n,n,n,n,,
"Change the ownership of all aluno1's files in the current directory and below to aluno2","find . -name ""aluno1"" -exec chown ""aluno2"" {} \;","find Path -name Regex -exec chown Regex {} \;",n,n,n,n,n,n,,
"Change the ownership of all aluno1's files in the current directory and below to aluno2","find . -name ""aluno1"" -exec chown ""aluno2"" {} +","find Path -name Regex -exec chown Regex {} +",n,n,n,n,n,n,,
"Change the ownership of all aluno1's files in the current directory and below to aluno2","find . -name ""aluno1"" -print0 | xargs -0 -I {} chown ""aluno2"" {}","find Path -name Regex -print0 | xargs -0 -I {} chown Regex {}",n,n,n,n,n,n,,
"change the permissions of all the directories in the folder ""/path/to/someDirectory"" to 755","find ""/path/to/someDirectory"" -type d -exec chmod 755 {} \;","find Path -type d -exec chmod Permission {} \;",y,y,y,y,y,y,y,y
"change the permissions of all the directories in the folder ""/path/to/someDirectory"" to 755","find ""/path/to/someDirectory"" -type d -exec chmod 755 {} +","find Path -type d -exec chmod Permission {} +",y,y,y,y,y,y,y,y
"change the permissions of all the directories in the folder ""/path/to/someDirectory"" to 755","find ""/path/to/someDirectory"" -type d -print0 | xargs -0 -I {} chmod 755 {}","find Path -type d -print0 | xargs -0 -I {} chmod Permission {}",y,y,y,y,y,y,y,y
"change the permission of all the php files in the folder /var/www/ to 700","find ""/var/www/"" -name ""*.php"" -exec chmod 700 {} \;","find Path -name Regex -exec chmod Permission {} \;",y,y,y,y,y,y,n,n
"change the permission of all the php files in the folder /var/www/ to 700","find ""/var/www/"" -type f -name ""*.php"" -exec chmod 700 {} \;","find Path -type f -name Regex -exec chmod Permission {} \;",y,y,y,y,y,y,y,y
"change the permission of all the php files in the folder /var/www/ to 700","find ""/var/www/"" -name ""*.php"" -print0 | xargs -0 -I {} chmod 700 {}","find Path -name Regex -print0 | xargs -0 -I {} chmod Permission {}",y,y,y,y,y,y,n,n
"change the permissions of all regular/normal files in the current directory, print0 is used for handling files with newlines in their file name","find ""print0"" -type f -exec chmod [permission] {} \;","find Path -type f -exec chmod Permission {} \;",n,n,n,n,n,n,,
"change the permissions of all regular/normal files in the current directory, print0 is used for handling files with newlines in their file name","find ""print0"" -type f -print0 | xargs -0 -I {} chmod [permission] {}","find Path -type f -print0 | xargs -0 -I {} chmod Permission {}",y,n,y,n,y,n,,
"change the permissions of all regular/normal files in the current directory, print0 is used for handling files with newlines in their file name","find ""print0"" -type f -exec chmod [permission] {} +","find Path -type f -exec chmod Permission {} +",n,n,n,n,n,n,,
"Change permissions to 644 for all directories under and below /path/to/someDirectory/","find ""/path/to/someDirectory/"" -type d -exec chmod 644 {} \;","find Path -type d -exec chmod Permission {} \;",y,y,y,y,y,y,y,y
"Change permissions to 644 for all directories under and below /path/to/someDirectory/","find ""/path/to/someDirectory/"" -type d -exec chmod 644 {} +","find Path -type d -exec chmod Permission {} +",y,y,y,y,y,y,y,y
"Change permissions to 644 for all directories under and below /path/to/someDirectory/","find ""/path/to/someDirectory/"" -type d -print0 | xargs -0 -I {} chmod 644 {}","find Path -type d -print0 | xargs -0 -I {} chmod Permission {}",y,y,y,y,y,y,y,y
"Change permission to 755 of all files/directories under current directory tree that have 777 permission","find . -perm 777 -exec chmod 755 {} \;","find Path -perm Permission -exec chmod Permission {} \;",y,y,y,y,y,y,y,y
"Change permission to 755 of all files/directories under current directory tree that have 777 permission","find . -perm 777 | xargs -I {} chmod 755 {}","find Path -perm Permission | xargs -I {} chmod Permission {}",y,y,y,y,y,y,y,y
"Change permission to 755 of all files/directories under current directory tree that have 777 permission","find . -perm 777 -exec chmod 755 {} +","find Path -perm Permission -exec chmod Permission {} +",y,y,y,y,y,y,y,y
"change the word ""GHBAG"" to ""stream-agg"" in all the file names in current folder which have the word ""-GHBAG-"" in their name","find . -name ""-GHBAG-"" -exec rename ""stream-agg"" ""GHBAG"" {} \;","find Path -name Regex -exec rename Regex Regex {} \;",n,n,n,n,n,n,,
"change the word ""GHBAG"" to ""stream-agg"" in all the file names in current folder which have the word ""-GHBAG-"" in their name","find ""GHBAG"" -name ""-GHBAG-"" -exec chown ""stream-agg"" {} \;","find Path -name Regex -exec chown Regex {} \;",n,n,n,n,n,n,,
"change the word ""GHBAG"" to ""stream-agg"" in all the file names in current folder which have the word ""-GHBAG-"" in their name","find . -name ""-GHBAG-"" -exec rename ""stream-agg"" ""GHBAG"" \;","find Path -name Regex -exec rename Regex Regex \;",n,n,n,n,n,n,,
"Combine every two lines of standard input","ps | cut -d [regex] -f [number] | tail -n [quantity] | head -n 2","ps | cut -d Regex -f Number | tail -n Quantity | head -n Quantity",n,n,n,n,n,n,,
"Combine every two lines of standard input","tail -n [quantity] | split -d -l 2 [file] [regex]","tail -n Quantity | split -d -l Quantity File Regex",n,n,n,n,n,n,,
"Combine every two lines of standard input","ps | cut -d [regex] -f [number] | tail -n [quantity] | xargs -n 2 -I {} dirname {}","ps | cut -d Regex -f Number | tail -n Quantity | xargs -n Quantity -I {} dirname {}",n,n,n,n,n,n,,
"Compare *.csv files in the current directory tree with their analogs stored in /some/other/path/ prompting before running `diff'","find ""/some/other/path/"" -iname ""*.csv"" -exec diff {} ""diff"" \;","find Path -iname Regex -exec diff {} File \;",n,n,n,n,n,n,,
"Compare *.csv files in the current directory tree with their analogs stored in /some/other/path/ prompting before running `diff'","find ""/some/other/path/"" -name ""*.csv"" -ok diff {} ""diff"" \;","find Path -name Regex -ok diff {} File \;",y,n,y,n,y,n,y,y
"Compare *.csv files in the current directory tree with their analogs stored in /some/other/path/ prompting before running `diff'","find ""/some/other/path/"" -name ""*.csv"" -exec diff {} ""diff"" \;","find Path -name Regex -exec diff {} File \;",n,n,n,n,n,n,,
"Compare files in ""/tmp/dir1"" and ""/tmp/dir2"", treating absent files as empty and all files as text","diff -N -a -u [quantity] ""/tmp/dir1"" ""/tmp/dir2""","diff -N -a -u Quantity File File",y,n,y,n,n,n,y,y
"Compare files in ""/tmp/dir1"" and ""/tmp/dir2"", treating absent files as empty and all files as text","diff -a -u [quantity] ""/tmp/dir1"" ""/tmp/dir2""","diff -a -u Quantity File File",n,n,n,n,n,n,,
"Compare files in ""/tmp/dir1"" and ""/tmp/dir2"", treating absent files as empty and all files as text","find ""/tmp/dir1"" \( -name ""/tmp/dir2"" -or -name ""*"" -or -name ""*"" \) -print0 | xargs -0 -I {} touch {}","find Path \( -name Regex -or -name Regex -or -name Regex \) -print0 | xargs -0 -I {} touch {}",n,n,n,n,n,n,,
"Compresses all files in a current folder (not recursively).","compress [file]","compress File",n,n,n,n,n,n,,
"Compresses all files in a current folder (not recursively).","find . -print0 | xargs -0 -I {} bzip2 {}","find Path -print0 | xargs -0 -I {} bzip2 {}",n,n,n,n,n,n,,
"Compresses all files in a current folder (not recursively).","find . -type f -exec bzip2 {} \;","find Path -type f -exec bzip2 {} \;",n,n,n,n,n,n,,
"Compress all files in directory ""$PATH_TO_LOGS"" that were last modified more than ""$SOME_NUMBER_OF_DAYS"" days ago","find ""$PATH_TO_LOGS"" -mtime [timespan] -exec compress ""$SOME_NUMBER_OF_DAYS"" {} \;","find Path -mtime Timespan -exec compress File {} \;",n,n,n,n,y,n,n,n
"Compress all files in directory ""$PATH_TO_LOGS"" that were last modified more than ""$SOME_NUMBER_OF_DAYS"" days ago","find ""$PATH_TO_LOGS"" -mtime [timespan] -exec compress ""$SOME_NUMBER_OF_DAYS"" {} +","find Path -mtime Timespan -exec compress File {} +",n,n,n,n,y,n,n,n
"Compress all files in directory ""$PATH_TO_LOGS"" that were last modified more than ""$SOME_NUMBER_OF_DAYS"" days ago","find ""$PATH_TO_LOGS"" -mtime [timespan] -exec compress ""$SOME_NUMBER_OF_DAYS"" \;","find Path -mtime Timespan -exec compress File \;",n,n,n,n,n,n,,
"Compresses all files in the directory 'PATH_TO_FOLDER' without recursion and keeps uncompressed files from deletion.","bzip2 -k -v ""PATH_TO_FOLDER""","bzip2 -k -v File",n,n,n,n,y,n,n,n
"Compresses all files in the directory 'PATH_TO_FOLDER' without recursion and keeps uncompressed files from deletion.","bzip2 -d -c [file] | tar -x -v -f ""PATH_TO_FOLDER"" [file]","bzip2 -d -c File | tar -x -v -f File File",n,n,n,n,n,n,,
"Compresses all files in the directory 'PATH_TO_FOLDER' without recursion and keeps uncompressed files from deletion.","find ""PATH_TO_FOLDER"" -type f -print0 | xargs -0 -I {} tar -c -v -z -f [file] {}","find Path -type f -print0 | xargs -0 -I {} tar -c -v -z -f File {}",n,n,n,n,n,n,,
"Compress regular files in the current directory tree that were last modified more than 7 days ago","find . -type f -mtime +7 -exec compress -f {} \;","find Path -type f -mtime +Timespan -exec compress -f {} \;",y,y,n,n,y,y,y,y
"Compress regular files in the current directory tree that were last modified more than 7 days ago","find . -type f -mtime +7 -exec compress {} \;","find Path -type f -mtime +Timespan -exec compress {} \;",y,y,n,n,y,y,y,y
"Compress regular files in the current directory tree that were last modified more than 7 days ago","find . -type f -mtime +7 | xargs -I {} gzip -9 {}","find Path -type f -mtime +Timespan | xargs -I {} gzip -9 {}",y,y,y,y,y,y,y,y
"Compresses with compression level 9 all files under the current folder but already compressed '*.bz2' files, performing in background.","find . -type f \( -name ""*.bz2"" -or -name 9 -or -name ""*"" \) -exec bzip2 {} \;","find Path -type f \( -name Regex -or -name Regex -or -name Regex \) -exec bzip2 {} \;",n,n,n,n,n,n,,
"Compresses with compression level 9 all files under the current folder but already compressed '*.bz2' files, performing in background.","find . -type f -not -name ""*.bz2"" -print0 | xargs -0 -n 9 -P [quantity] -I {} bzip2 {}","find Path -type f -not -name Regex -print0 | xargs -0 -n Quantity -P Quantity -I {} bzip2 {}",n,n,n,n,n,n,,
"Compresses with compression level 9 all files under the current folder but already compressed '*.bz2' files, performing in background.","find ""*.bz2"" -type f -print0 | xargs -0 -n 9 -P [quantity] -I {} bzip2 {}","find Path -type f -print0 | xargs -0 -n Quantity -P Quantity -I {} bzip2 {}",n,n,n,n,n,n,,
"Connect to host ""${HOSTNAME}"" as user ""${USERNAME}"" and execute ""${SCRIPT}"" non-interactively","ssh -S ""${HOSTNAME}"" -O ""${USERNAME}"" ""${SCRIPT}""","ssh -S Path -O Regex Regex",n,n,n,n,n,n,,
"Connect to host ""${HOSTNAME}"" as user ""${USERNAME}"" and execute ""${SCRIPT}"" non-interactively","ssh -M -S ""${USERNAME}"" -O ""${SCRIPT}"" ""${HOSTNAME}""","ssh -M -S Path -O Regex Regex",n,n,n,n,n,n,,
"Connect to host ""${HOSTNAME}"" as user ""${USERNAME}"" and execute ""${SCRIPT}"" non-interactively","ssh -o __SP__UNK -M -S ""${SCRIPT}"" -O ""${USERNAME}"" ""${HOSTNAME}""","ssh -o __SP__UNK -M -S Path -O Regex Regex",n,n,n,n,n,n,,
"Copy ""*.cc"", ""*.h"", and ""SConstruct"" to ""rsync://localhost:40001/bledge_ce"" using blocking IO","rsync -r -v ""*.cc"" ""*.h"" ""SConstruct"" ""rsync://localhost:40001/bledge_ce""","rsync -r -v File File File File",n,n,n,n,n,n,,
"Copy ""*.cc"", ""*.h"", and ""SConstruct"" to ""rsync://localhost:40001/bledge_ce"" using blocking IO","rsync -p ""*.h"" ""*.cc"" ""SConstruct"" ""rsync://localhost:40001/bledge_ce""","rsync -p File File File File",n,n,n,n,n,n,,
"Copy ""*.cc"", ""*.h"", and ""SConstruct"" to ""rsync://localhost:40001/bledge_ce"" using blocking IO","","",n,n,n,n,n,n,,
"Copies ${FILE} to COLLECT folder with unique name formatted like 'job_XXXXXXXXX'.","cp -u ""job_XXXXXXXXX"" ""${FILE}""","cp -u File File",y,n,y,n,n,n,y,y
"Copies ${FILE} to COLLECT folder with unique name formatted like 'job_XXXXXXXXX'.","echo ""job_XXXXXXXXX"" | grep ""${FILE}"" | xargs -n [quantity] -I {} cp [file] {}","echo Regex | grep Regex | xargs -n Quantity -I {} cp File {}",y,n,y,n,n,n,y,y
"Copies ${FILE} to COLLECT folder with unique name formatted like 'job_XXXXXXXXX'.","cp ""${FILE}"" $(date -u -d ""job_XXXXXXXXX"" __SP__UNK)","cp File $( date -u -d Regex __SP__UNK )",n,n,n,n,n,n,,
"Copy a file xyz.c to all the .c files present in the C directory and below","find ""c"" -name ""*.c"" | xargs -I {} cp -a --target-directory=""xyz.c"" --parents {}","find Path -name Regex | xargs -I {} cp -a --target-directory Directory --parents {}",n,n,n,n,n,n,,
"Copy a file xyz.c to all the .c files present in the C directory and below","find ""c"" -name ""*.c"" | xargs -I {} cp -a -v --target-directory=""xyz.c"" --parents {}","find Path -name Regex | xargs -I {} cp -a -v --target-directory Directory --parents {}",n,n,n,n,n,n,,
"Copy a file xyz.c to all the .c files present in the C directory and below","find ""c"" -name ""*.c"" | xargs -I {} cp {} ""xyz.c""","find Path -name Regex | xargs -I {} cp {} File",y,n,y,n,y,n,y,n
"Copy all *.data files under /source_path to /target_path","find ""/source_path"" -type f -name ""*.dat"" -exec cp {} ""/target_path"" \;","find Path -type f -name Regex -exec cp {} File \;",y,n,y,n,y,n,y,y
"Copy all *.data files under /source_path to /target_path","find ""/source_path"" -type f -iname ""*.dat"" -exec cp {} ""/target_path"" \;","find Path -type f -iname Regex -exec cp {} File \;",y,n,y,n,y,n,y,y
"Copy all *.data files under /source_path to /target_path","find ""/source_path"" -type f -name ""*.dat"" -print0 | xargs -0 -I {} cp -t ""/target_path"" {}","find Path -type f -name Regex -print0 | xargs -0 -I {} cp -t Directory {}",y,n,y,n,y,n,y,y
"Copy all files (not directories) in ""/path/to/local/storage"" to ""/path/to/copy"" on host ""remote.host"" authenticating as user ""user""","find ""/path/to/local/storage"" -type f \( -name ""/path/to/copy"" -or -name ""*"" -or -name ""user"" \) -exec cp {} ""remote.host"" \;","find Path -type f \( -name Regex -or -name Regex -or -name Regex \) -exec cp {} File \;",n,n,n,n,n,n,,
"Copy all files (not directories) in ""/path/to/local/storage"" to ""/path/to/copy"" on host ""remote.host"" authenticating as user ""user""","find ""/path/to/local/storage"" | grep ""user"" | tee ""/path/to/copy"" | xargs -I {} cp {} ""remote.host""","find Path | grep Regex | tee File | xargs -I {} cp {} File",n,n,n,n,n,n,,
"Copy all files (not directories) in ""/path/to/local/storage"" to ""/path/to/copy"" on host ""remote.host"" authenticating as user ""user""","find ""/path/to/local/storage"" | grep ""user"" | tee ""remote.host"" | xargs -I {} cp -a -v --target-directory=""/path/to/copy"" --parents {}","find Path | grep Regex | tee File | xargs -I {} cp -a -v --target-directory Directory --parents {}",n,n,n,n,n,n,,
"copy all the files with the extension "".type"" from one folder to a target directory","cp "".type"" [file]","cp File File",y,n,y,n,y,n,n,n
"copy all the files with the extension "".type"" from one folder to a target directory","ls | xargs -I {} cp {} "".type""","ls | xargs -I {} cp {} File",n,n,n,n,n,n,,
"copy all the files with the extension "".type"" from one folder to a target directory","find "".type"" -type f -exec cp {} [file] \;","find Path -type f -exec cp {} File \;",y,n,y,n,n,n,y,n
"Copy directory structure from directory 'olddir' to 'newdir'","find ""olddir"" -type d -exec mkdir -p -- ""newdir"" \;","find Path -type d -exec mkdir -p -- Directory \;",n,n,y,n,n,n,n,n
"Copy directory structure from directory 'olddir' to 'newdir'","find ""olddir"" -type d -print0 | xargs -0 -I {} cp -t ""newdir"" -- {}","find Path -type d -print0 | xargs -0 -I {} cp -t Directory -- {}",n,n,n,n,n,n,,
"Copy directory structure from directory 'olddir' to 'newdir'","find ""olddir"" -mindepth [quantity] -type d -exec mkdir -p -- ""newdir"" \;","find Path -mindepth Quantity -type d -exec mkdir -p -- Directory \;",n,n,n,n,n,n,,
"Copy file in current directory of local host to host ""remote"", connecting as ssh user matching current local username, and copying the file in home directory on remote host - enable compression during transfer.","scp ""remote"" [file]","scp File File",n,n,n,n,n,n,,
"Copy file in current directory of local host to host ""remote"", connecting as ssh user matching current local username, and copying the file in home directory on remote host - enable compression during transfer.","scp -v ""remote"" [file]","scp -v File File",n,n,n,n,n,n,,
"Copy file in current directory of local host to host ""remote"", connecting as ssh user matching current local username, and copying the file in home directory on remote host - enable compression during transfer.","scp -o __SP__UNK ""remote"" [file]","scp -o __SP__UNK File File",n,n,n,n,n,n,,
"Copy the owner and group from ""file.txt"" to ""$tempfile""","chown --reference=""$tempfile"" ""file.txt""","chown --reference File Regex",y,n,y,n,n,n,y,n
"Copy the owner and group from ""file.txt"" to ""$tempfile""","rsync -a -v ""$tempfile"" ""file.txt""","rsync -a -v File File",n,n,n,n,n,n,,
"Copy the owner and group from ""file.txt"" to ""$tempfile""","rsync -a -v -R ""$tempfile"" ""file.txt""","rsync -a -v -R File File",n,n,n,n,n,n,,
"Counts all lines in $i file.","cat ""$i"" | wc -l","cat File | wc -l",y,y,y,y,y,y,y,y
"Counts all lines in $i file.","cat ""$i"" | grep '.*' | wc -l","cat File | grep Regex | wc -l",y,y,y,y,y,y,y,y
"Counts all lines in $i file.","wc -l ""$i""","wc -l File",y,y,y,y,y,y,y,y
"Count all the lines of all php files in current directory recursively","find . -name ""*.php"" | xargs -I {} wc -l {}","find Path -name Regex | xargs -I {} wc -l {}",n,n,y,y,n,n,n,n
"Count all the lines of all php files in current directory recursively","find . -name ""*.php"" | xargs -I {} cat {} | wc -l","find Path -name Regex | xargs -I {} cat {} | wc -l",y,y,y,y,y,y,n,n
"Count all the lines of all php files in current directory recursively","find . -name ""*.php"" -print0 | xargs -0 -I {} wc -l {}","find Path -name Regex -print0 | xargs -0 -I {} wc -l {}",n,n,y,y,n,n,n,n
"Counts lines in each *.php file.","wc -l ""*.php""","wc -l File",y,n,y,n,n,n,y,n
"Counts lines in each *.php file.","cat ""*.php"" | wc -l","cat File | wc -l",n,n,n,n,n,n,,
"Counts lines in each *.php file.","wc -l $(tree -i -f --noreport | grep -e ""*.php"")","wc -l $( tree -i -f --noreport | grep -e Regex )",n,n,y,n,n,n,n,n
"Count the number of directories under directory '/directory/' non-recursively","find ""/directory/"" -maxdepth [quantity] -type d | wc -l","find Path -maxdepth Quantity -type d | wc -l",y,n,y,n,y,n,,
"Count the number of directories under directory '/directory/' non-recursively","find ""/directory/"" -mindepth [quantity] -maxdepth [quantity] -type d | wc -l","find Path -mindepth Quantity -maxdepth Quantity -type d | wc -l",y,n,y,n,y,n,y,n
"Count the number of directories under directory '/directory/' non-recursively","find ""/directory/"" -maxdepth [quantity] -mindepth [quantity] -type d | wc -l","find Path -maxdepth Quantity -mindepth Quantity -type d | wc -l",y,n,y,n,y,n,y,n
"Count the number of files in the /usr/ports directory tree whose names begin with 'pkg-plist' and which contain 'dirrmtry'","find ""/usr/ports"" -name ""pkg-plist"" -exec grep -l ""dirrmtry"" {} \; | wc -l","find Path -name Regex -exec grep -l Regex {} \; | wc -l",y,n,y,n,y,n,y,y
"Count the number of files in the /usr/ports directory tree whose names begin with 'pkg-plist' and which contain 'dirrmtry'","find ""/usr/ports"" -name ""pkg-plist"" -exec grep -l ""dirrmtry"" {} + | wc -l","find Path -name Regex -exec grep -l Regex {} + | wc -l",y,n,y,n,y,n,y,y
"Count the number of files in the /usr/ports directory tree whose names begin with 'pkg-plist' and which contain 'dirrmtry'","find ""/usr/ports"" -name ""pkg-plist"" | grep -v ""dirrmtry"" | wc -l","find Path -name Regex | grep -v Regex | wc -l",n,n,n,n,n,n,,
"Count the number of open files for PID ""$PYTHONPID"" every 2 seconds","find ""$PYTHONPID"" -type f -mtime 2.0s -exec ls -l {} \; | wc -l","find Path -type f -mtime Timespan -exec ls -l {} \; | wc -l",n,n,n,n,n,n,,
"Count the number of open files for PID ""$PYTHONPID"" every 2 seconds","find ""$PYTHONPID"" -type f -mtime 2.0s -exec wc -l {} \; | wc -l","find Path -type f -mtime Timespan -exec wc -l {} \; | wc -l",n,n,n,n,n,n,,
"Count the number of open files for PID ""$PYTHONPID"" every 2 seconds","find ""$PYTHONPID"" -type f -mtime 2.0s | wc -l | wc -l","find Path -type f -mtime Timespan | wc -l | wc -l",n,n,n,n,n,n,,
"Counts number of processors and saves in variable NUMCPU.","who | wc -l","who | wc -l",n,n,n,n,n,n,,
"Counts number of processors and saves in variable NUMCPU.","who | grep '.*' | wc -l","who | grep Regex | wc -l",n,n,n,n,n,n,,
"Counts number of processors and saves in variable NUMCPU.","who | cut -d [regex] -f [number] | wc -l","who | cut -d Regex -f Number | wc -l",n,n,n,n,n,n,,
"Count the number of regular files with case insensitive name pattern $srchfor under 'teste2' directory tree","find ""teste2"" -iname ""$srchfor"" -type f | wc -l","find Path -iname Regex -type f | wc -l",y,y,y,y,y,y,y,y
"Count the number of regular files with case insensitive name pattern $srchfor under 'teste2' directory tree","find ""teste2"" -type f -iname ""$srchfor"" | wc -l","find Path -type f -iname Regex | wc -l",y,y,y,y,y,y,y,y
"Count the number of regular files with case insensitive name pattern $srchfor under 'teste2' directory tree","find ""teste2"" -type f -iname ""$srchfor"" -exec wc -l {} \;","find Path -type f -iname Regex -exec wc -l {} \;",n,n,n,n,n,n,,
"Create 1000 files each file having a number from 1 to 1000 named ""file000"" to ""file999""","seq -f __SP__UNK 1000 | xargs -L 1 -I {} echo ""file999"" ""file000"" 1000 {}","seq -f __SP__UNK Number | xargs -L Quantity -I {} echo Regex Regex Regex {}",n,n,n,n,n,n,,
"Create 1000 files each file having a number from 1 to 1000 named ""file000"" to ""file999""","seq -f __SP__UNK 1000 | split -d -l 1000 -a 1 ""file999"" ""file000""","seq -f __SP__UNK Number | split -d -l Quantity -a Quantity File Regex",n,n,n,n,n,n,,
"Create 1000 files each file having a number from 1 to 1000 named ""file000"" to ""file999""","echo ""file999"" | ssh 1 | xargs -n 1000 -I {} echo ""file000"" 1000 {}","echo Regex | ssh Regex | xargs -n Quantity -I {} echo Regex Regex {}",n,n,n,n,n,n,,
"Creates 5-letter random file name and saves it in 'rand_str' variable.","mktemp -p ""rand_str"" ""5-letter""","mktemp -p Directory Regex",n,n,n,n,n,n,,
"Creates 5-letter random file name and saves it in 'rand_str' variable.","mktemp --tmpdir=""rand_str"" ""5-letter""","mktemp --tmpdir Directory Regex",n,n,n,n,n,n,,
"Creates 5-letter random file name and saves it in 'rand_str' variable.","mktemp $(echo ""rand_str"" | cut -d ""5-letter"" -f [number])","mktemp $( echo Regex | cut -d Regex -f Number )",n,n,n,n,n,n,,
"create a compressed archive ""compressFileName.tar.gz"" with verbose output","tar -c -z -v -f [file] ""compressFileName.tar.gz""","tar -c -z -v -f File File",y,n,y,n,n,n,y,n
"create a compressed archive ""compressFileName.tar.gz"" with verbose output","tar -c -z -f ""compressFileName.tar.gz"" [file] | tar -File [file]","tar -c -z -f File File | tar File File",n,n,n,n,n,n,,
"create a compressed archive ""compressFileName.tar.gz"" with verbose output","tar -c -v -z -f [file] ""compressFileName.tar.gz""","tar -c -v -z -f File File",y,n,y,n,n,n,y,n
"Create a compressed archive named 'my_directory.tar.gz' with files inside directory 'my_directory' without including the directory entry 'my_directory' itself","find ""my_directory"" -name ""my_directory.tar.gz"" -prune -or -name ""*"" -print0 | xargs -0 -I {} tar -c -v -z -f ""my_directory"" {}","find Path -name Regex -prune -or -name Regex -print0 | xargs -0 -I {} tar -c -v -z -f File {}",n,n,n,n,n,n,,
"Create a compressed archive named 'my_directory.tar.gz' with files inside directory 'my_directory' without including the directory entry 'my_directory' itself","find ""my_directory"" -type f -name ""my_directory.tar.gz"" -print0 | xargs -0 -I {} tar -c -v -z -f ""my_directory"" {}","find Path -type f -name Regex -print0 | xargs -0 -I {} tar -c -v -z -f File {}",n,n,n,n,n,n,,
"Create a compressed archive named 'my_directory.tar.gz' with files inside directory 'my_directory' without including the directory entry 'my_directory' itself","find ""my_directory"" -name ""my_directory.tar.gz"" -print0 | xargs -0 -I {} tar -c -v -z -f ""my_directory"" {}","find Path -name Regex -print0 | xargs -0 -I {} tar -c -v -z -f File {}",n,n,n,n,n,n,,
"Create a rsa key with comment specified by variable APP and passphrase specified y SSHKEYPASS.","ssh-keygen -t rsa -N [regex] -f [file]","ssh-keygen -t rsa -N Regex -f File",n,n,n,n,n,n,,
"Create a rsa key with comment specified by variable APP and passphrase specified y SSHKEYPASS.","ssh-keygen -b [quantity] -t rsa -N [regex] -f [file]","ssh-keygen -b Quantity -t rsa -N Regex -f File",n,n,n,n,n,n,,
"Create a rsa key with comment specified by variable APP and passphrase specified y SSHKEYPASS.","ssh-keygen -f [file]","ssh-keygen -f File",n,n,n,n,n,n,,
"Create a ssh key with no passphrase and store it in ""outfile"".","ssh-keygen -f ""outfile""","ssh-keygen -f File",n,n,y,y,n,n,n,n
"Create a ssh key with no passphrase and store it in ""outfile"".","ssh-keygen -b [quantity] -t rsa -f ""outfile"" [file]","ssh-keygen -b Quantity -t rsa -f File File",n,n,n,n,n,n,,
"Create a ssh key with no passphrase and store it in ""outfile"".","ssh-keygen -b [quantity] -t rsa ""outfile""","ssh-keygen -b Quantity -t rsa File",n,n,n,n,n,n,,
"Create a symolic link in ""/usr/local/bin/"" to ""/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl""","","",n,n,n,n,n,n,,
"Create a symolic link in ""/usr/local/bin/"" to ""/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl""","","",n,n,n,n,n,n,,
"Create a symolic link in ""/usr/local/bin/"" to ""/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl""","","",n,n,n,n,n,n,,
"Create a symbolic link in the current directory to ""$file""","ln -s ""$file""","ln -s File",y,y,y,y,y,y,,
"Create a symbolic link in the current directory to ""$file""","find . -type l -print0 | xargs -0 -I {} ln -s {} ""$file""","find Path -type l -print0 | xargs -0 -I {} ln -s {} Regex",n,n,n,n,n,n,,
"Create a symbolic link in the current directory to ""$file""","find ""$file"" -type l -print0 | xargs -0 -n [quantity] -P [quantity] -I {} ln -s {}","find Path -type l -print0 | xargs -0 -n Quantity -P Quantity -I {} ln -s {}",n,n,n,n,n,n,,
"Create a symbolic link in target directory ""~/newlinks"" to ""$source""","ln -s ""$source"" ""~/newlinks""","ln -s File Regex",y,y,y,y,y,y,y,n
"Create a symbolic link in target directory ""~/newlinks"" to ""$source""","ln -s ""~/newlinks"" $(ln -s ""$source"")","ln -s File $( ln -s File )",n,n,n,n,n,n,,
"Create a symbolic link in target directory ""~/newlinks"" to ""$source""","ln -s $(ln ""$source"" ""~/newlinks"")","ln -s $( ln File Regex )",n,n,n,n,n,n,,
"Create a symbolic link named "".profile"" to ""git-stuff/home/profile"" without dereferencing "".profile""","ln -s ""git-stuff/home/profile"" $(ln -s "".profile"" "".profile"")","ln -s File $( ln -s File Regex )",y,y,n,n,y,y,y,y
"Create a symbolic link named "".profile"" to ""git-stuff/home/profile"" without dereferencing "".profile""","","",n,n,n,n,n,n,,
"Create a symbolic link named "".profile"" to ""git-stuff/home/profile"" without dereferencing "".profile""","","",n,n,n,n,n,n,,
"Create a symbolic link named ""/usr/bin/my-editor"" to ""/usr/share/my-editor/my-editor-executable"" and attemp to hard link directories","ln -s ""/usr/share/my-editor/my-editor-executable"" ""/usr/bin/my-editor""","ln -s File Regex",n,n,n,n,n,n,,
"Create a symbolic link named ""/usr/bin/my-editor"" to ""/usr/share/my-editor/my-editor-executable"" and attemp to hard link directories","ln -s $(ln -s ""/usr/share/my-editor/my-editor-executable"" ""/usr/bin/my-editor"")","ln -s $( ln -s File Regex )",n,n,n,n,n,n,,
"Create a symbolic link named ""/usr/bin/my-editor"" to ""/usr/share/my-editor/my-editor-executable"" and attemp to hard link directories","ln -s -f ""/usr/share/my-editor/my-editor-executable"" ""/usr/bin/my-editor""","ln -s -f File Regex",n,n,n,n,n,n,,
"Create a symbolic link named ""/usr/local/bin/subl"" to ""/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl""","ln -s ""/Applications/Sublime"" ""/usr/local/bin/subl""","ln -s File Regex",y,n,y,n,y,n,,
"Create a symbolic link named ""/usr/local/bin/subl"" to ""/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl""","ln -s $(ln ""/usr/local/bin/subl"" ""/Applications/Sublime"")","ln -s $( ln File Regex )",n,n,n,n,n,n,,
"Create a symbolic link named ""/usr/local/bin/subl"" to ""/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl""","ln -s $(ln -f ""/usr/local/bin/subl"" ""/Applications/Sublime"")","ln -s $( ln -f File Regex )",n,n,n,n,n,n,,
"Create a symbolc link named ""public_html"" to ""current/app/webroot"" under the current working directory","ln -s ""current/app/webroot"" ""public_html""","ln -s File Regex",y,y,y,y,y,y,y,y
"Create a symbolc link named ""public_html"" to ""current/app/webroot"" under the current working directory","ln -s ""current/app/webroot"" $(readlink -f ""public_html"")","ln -s File $( readlink -f File )",n,n,n,n,n,n,,
"Create a symbolc link named ""public_html"" to ""current/app/webroot"" under the current working directory","ln -s $(find ""public_html"" -lname ""current/app/webroot"")","ln -s $( find Path -lname Regex )",n,n,n,n,n,n,,
"Create a symbolic link named ""~/bin/subl"" to ""/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl""","ln -s ""/Applications/Sublime"" ""~/bin/subl""","ln -s File Regex",y,n,y,n,y,y,y,n
"Create a symbolic link named ""~/bin/subl"" to ""/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl""","ln -s $(ln ""~/bin/subl"" ""/Applications/Sublime"")","ln -s $( ln File Regex )",n,n,n,n,n,n,,
"Create a symbolic link named ""~/bin/subl"" to ""/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl""","ln -s $(ln -f ""~/bin/subl"" ""/Applications/Sublime"")","ln -s $( ln -f File Regex )",n,n,n,n,n,n,,
"Create a symbolic link named the basename of ""$file"" to ""$file""","ln -s ""$file"" ""$file""","ln -s File Regex",n,n,n,n,y,y,n,n
"Create a symbolic link named the basename of ""$file"" to ""$file""","ln -s -- ""$file"" ""$file""","ln -s -- File Regex",n,n,n,n,n,n,,
"Create a symbolic link named the basename of ""$file"" to ""$file""","ln -s $(echo ""$file"" \) ""$file"")","ln -s $( echo Regex Regex Regex )",n,n,n,n,n,n,,
"create a symbolic link with absolute path ""/cygdrive/c/Program Files"" to file ""/cygdrive/c/ProgramFiles""","ln -s -f ""/cygdrive/c/Program"" ""/cygdrive/c/ProgramFiles""","ln -s -f File Regex",y,n,y,n,y,n,y,y
"create a symbolic link with absolute path ""/cygdrive/c/Program Files"" to file ""/cygdrive/c/ProgramFiles""","ln -s -f ""/cygdrive/c/ProgramFiles"" $(readlink -f ""/cygdrive/c/Program"")","ln -s -f File $( readlink -f File )",n,n,n,n,n,n,,
"create a symbolic link with absolute path ""/cygdrive/c/Program Files"" to file ""/cygdrive/c/ProgramFiles""","ln -s ""/cygdrive/c/Program"" ""/cygdrive/c/ProgramFiles""","ln -s File Regex",y,n,y,n,y,n,,
"Create a tar file containing all the files in ~/Library folder that contain spaces in their names","find ""~/Library"" -name ""*"" | xargs -I {} tar -c -v -f [file] {}","find Path -name Regex | xargs -I {} tar -c -v -f File {}",n,n,n,n,n,n,,
"Create a tar file containing all the files in ~/Library folder that contain spaces in their names","find ""~/Library"" -name ""*"" -exec tar -u -f [file] {} \;","find Path -name Regex -exec tar -u -f File {} \;",y,n,y,n,y,n,y,y
"Create a tar file containing all the files in ~/Library folder that contain spaces in their names","find ""~/Library"" -name ""*"" -print0 | xargs -0 -I {} tar -r -f [file] {}","find Path -name Regex -print0 | xargs -0 -I {} tar -r -f File {}",y,n,y,n,y,n,,
"Create an archive named newArch from the contents of ./test directory","cat [file] | xargs -I {} tar -c -v -f ""./test"" {}","cat File | xargs -I {} tar -c -v -f File {}",n,n,n,n,n,n,,
"Create an archive named newArch from the contents of ./test directory","cat [file] | xargs -I {} tar -c -v -z -f ""./test"" {}","cat File | xargs -I {} tar -c -v -z -f File {}",n,n,n,n,n,n,,
"Create an archive named newArch from the contents of ./test directory","find ""./test"" -name ""*"" -execdir tar -c -v -f [file] [file] \;","find Path -name Regex -execdir tar -c -v -f File File \;",n,n,n,n,n,n,,
"Create the directory '.npm-packages' in the user's home directory($HOME)","mkdir "".npm-packages""","mkdir Directory",y,n,y,n,y,n,,
"Create the directory '.npm-packages' in the user's home directory($HOME)","find . -type d \( -name ""*"" -or -name ""*"" -or -name ""*"" \) -print0 | xargs -0 -I {} mkdir "".npm-packages""","find Path -type d \( -name Regex -or -name Regex -or -name Regex \) -print0 | xargs -0 -I {} mkdir Directory",y,n,y,n,n,n,y,y
"Create the directory '.npm-packages' in the user's home directory($HOME)","find . -type d -print0 | xargs -0 -I {} mkdir "".npm-packages""","find Path -type d -print0 | xargs -0 -I {} mkdir Directory",y,n,y,n,n,n,y,y
"create directory /tmp/foo","mkdir ""/tmp/foo""","mkdir Directory",y,y,y,y,y,y,y,y
"create directory /tmp/foo","find ""/tmp/foo"" -type d \( mkdir [path] -or -name ""*"" -or -name ""*"" \) -print0 | xargs -0 -I {} mkdir [directory]","find Path -type d \( Path Path -or -name Regex -or -name Regex \) -print0 | xargs -0 -I {} mkdir Directory",n,n,n,n,n,n,,
"create directory /tmp/foo","find ""/tmp/foo"" -type d \( mkdir [path] -or -name ""*"" -or -name ""*"" \) -or -name ""*"" -or -name ""*"" -or -name ""*""","find Path -type d \( Path Path -or -name Regex -or -name Regex \) -or -name Regex -or -name Regex -or -name Regex",n,n,n,n,n,n,,
"Create directory dir2","mkdir ""dir2""","mkdir Directory",y,y,y,y,y,y,y,y
"Create directory dir2","find . -type d \( mkdir [path] -or -name ""*"" -or -name ""*"" \) -print0 | xargs -0 -I {} mkdir ""dir2""","find Path -type d \( Path Path -or -name Regex -or -name Regex \) -print0 | xargs -0 -I {} mkdir Directory",n,n,n,n,n,n,,
"Create directory dir2","find ""dir2"" -type d \( mkdir [path] -or -name ""*"" -or -name ""*"" \) -prune -or \( -name ""*"" -or -name ""*"" \)","find Path -type d \( Path Path -or -name Regex -or -name Regex \) -prune -or \( -name Regex -or -name Regex \)",n,n,n,n,n,n,,
"create symbolic links in directory ""/usr/local/symlinks "" to all files located in directiry ""incoming"" and that have been modified earlier then 5 days and owned by user ""nr""","find ""incoming"" \( -name ""/usr/local/symlinks"" -or -name ""*"" \) -mtime -5 -exec ln -s {} ""nr"" \;","find Path \( -name Regex -or -name Regex \) -mtime -Timespan -exec ln -s {} Regex \;",n,n,n,n,n,n,,
"create symbolic links in directory ""/usr/local/symlinks "" to all files located in directiry ""incoming"" and that have been modified earlier then 5 days and owned by user ""nr""","find ""incoming"" . -name ""/usr/local/symlinks"" -mtime -5 -exec ln -s {} ""nr"" \;","find Path Path -name Regex -mtime -Timespan -exec ln -s {} Regex \;",n,n,n,n,n,n,,
"create symbolic links in directory ""/usr/local/symlinks "" to all files located in directiry ""incoming"" and that have been modified earlier then 5 days and owned by user ""nr""","find ""incoming"" . -name ""/usr/local/symlinks"" -mtime 5 -exec ln -s {} ""nr"" \;","find Path Path -name Regex -mtime Timespan -exec ln -s {} Regex \;",n,n,n,n,n,n,,
"Create tar archive ""dirall.tar"" and copy all files from directory tree /tmp/a1 to it","find ""/tmp/a1"" -type f -exec tar -u -v -f ""dirall.tar"" {} \;","find Path -type f -exec tar -u -v -f File {} \;",y,y,y,y,y,y,y,y
"Create tar archive ""dirall.tar"" and copy all files from directory tree /tmp/a1 to it","find ""/tmp/a1"" -type f -print0 | xargs -0 -I {} tar -c -v -z -f ""dirall.tar"" {}","find Path -type f -print0 | xargs -0 -I {} tar -c -v -z -f File {}",n,n,n,n,n,n,,
"Create tar archive ""dirall.tar"" and copy all files from directory tree /tmp/a1 to it","find ""/tmp/a1"" -type f -exec tar -z -v -f ""dirall.tar"" {} \;","find Path -type f -exec tar -z -v -f File {} \;",n,n,n,n,n,n,,
"Create tar archive ""foo.tar"" and copy all files from directory tree /tmp/a1 to it","find ""/tmp/a1"" -type f -exec tar -u -v -f ""foo.tar"" {} \;","find Path -type f -exec tar -u -v -f File {} \;",y,y,y,y,y,y,y,y
"Create tar archive ""foo.tar"" and copy all files from directory tree /tmp/a1 to it","find ""/tmp/a1"" -type f -print0 | xargs -0 -I {} tar -c -v -z -f ""foo.tar"" {}","find Path -type f -print0 | xargs -0 -I {} tar -c -v -z -f File {}",n,n,n,n,n,n,,
"Create tar archive ""foo.tar"" and copy all files from directory tree /tmp/a1 to it","find ""/tmp/a1"" -type f -exec tar -z -v -f ""foo.tar"" {} \;","find Path -type f -exec tar -z -v -f File {} \;",n,n,n,n,n,n,,
"Creates temporary file in a TMPDIR folder with name like tmp.XXXXXXXXXX.","mktemp -p ""----XXXXXXXXXX"" [regex]","mktemp -p Directory Regex",y,n,y,n,y,n,n,n
"Creates temporary file in a TMPDIR folder with name like tmp.XXXXXXXXXX.","mktemp -t ""----XXXXXXXXXX""","mktemp -t Regex",y,n,y,n,y,n,,
"Creates temporary file in a TMPDIR folder with name like tmp.XXXXXXXXXX.","mktemp $(mktemp ""----XXXXXXXXXX"")","mktemp $( mktemp Regex )",n,n,n,n,n,n,,
"Delete all __temp__* files/directories under current directory tree","find . -name ""__temp__*"" -delete","find Path -name Regex -delete",n,n,y,y,n,n,n,n
"Delete all __temp__* files/directories under current directory tree","find . -name ""__temp__*"" -exec rm -r -f {} \;","find Path -name Regex -exec rm -r -f {} \;",y,y,y,y,y,y,y,n
"Delete all __temp__* files/directories under current directory tree","find . -name ""__temp__*"" -exec rm {} \;","find Path -name Regex -exec rm {} \;",n,n,n,n,n,n,,
"delete all the broken symbolic links from the folder /usr/ports/packages","find -L ""/usr/ports/packages"" -type l -delete","find -L Path -type l -delete",y,y,y,y,n,n,y,y
"delete all the broken symbolic links from the folder /usr/ports/packages","find ""/usr/ports/packages"" -L -type l -delete","find Path -L -type l -delete",n,n,n,n,n,n,,
"delete all the broken symbolic links from the folder /usr/ports/packages","find -L ""/usr/ports/packages"" -type l -print0 | xargs -0 -I {} rm {}","find -L Path -type l -print0 | xargs -0 -I {} rm {}",y,y,y,y,n,n,y,y
"Delete all directories in the TBD directory that were modified more than 1 day ago","find . -type d -mtime +1 -exec rm -r -f {} \;","find Path -type d -mtime +Timespan -exec rm -r -f {} \;",y,n,y,n,y,n,y,y
"Delete all directories in the TBD directory that were modified more than 1 day ago","find . -type d -mtime +1 -exec rm -f {} \;","find Path -type d -mtime +Timespan -exec rm -f {} \;",n,n,n,n,n,n,,
"Delete all directories in the TBD directory that were modified more than 1 day ago","find . -mtime +1 -type d -exec rm -r -f {} \;","find Path -mtime +Timespan -type d -exec rm -r -f {} \;",y,n,y,n,y,n,y,y
"Delete all files/directories with node number $inum under current directory tree","find ""$inum"" -inum [quantity] -exec rm {} \;","find Path -inum Quantity -exec rm {} \;",n,n,n,n,y,n,n,n
"Delete all files/directories with node number $inum under current directory tree","find ""$inum"" -inum [quantity] -delete","find Path -inum Quantity -delete",n,n,y,n,n,n,n,n
"Delete all files/directories with node number $inum under current directory tree","find . -name ""$inum"" -exec rm -r -f {} \;","find Path -name Regex -exec rm -r -f {} \;",n,n,n,n,n,n,,
"Delete all files in the TBD directory that were modified more than 1 day ago","find . -mtime +1 -exec rm {} \;","find Path -mtime +Timespan -exec rm {} \;",y,n,y,n,y,n,n,n
"Delete all files in the TBD directory that were modified more than 1 day ago","find . -mtime +1 -exec rm -f {} \;","find Path -mtime +Timespan -exec rm -f {} \;",y,n,y,n,y,n,n,n
"Delete all files in the TBD directory that were modified more than 1 day ago","find . -mtime +1 -delete","find Path -mtime +Timespan -delete",y,n,y,n,y,n,n,n
"Delete all files (files, directories, links, pipes...) named 'core' under current directory","find . -name ""core"" -exec rm {} \;","find Path -name Regex -exec rm {} \;",n,n,n,n,n,n,,
"Delete all files (files, directories, links, pipes...) named 'core' under current directory","find . -name ""core"" | xargs -I {} rm {}","find Path -name Regex | xargs -I {} rm {}",n,n,n,n,n,n,,
"Delete all files (files, directories, links, pipes...) named 'core' under current directory","find . -name ""core"" -delete","find Path -name Regex -delete",n,n,y,y,n,n,n,n
"Delete all files with '.old' extension under current directory tree","find . -name "".old"" | xargs -I {} rm {}","find Path -name Regex | xargs -I {} rm {}",y,n,y,n,y,y,n,n
"Delete all files with '.old' extension under current directory tree","find . -name "".old"" -exec rm {} \;","find Path -name Regex -exec rm {} \;",y,n,y,n,y,y,n,n
"Delete all files with '.old' extension under current directory tree","find . -name "".old"" | xargs -I {} rm -r -f {}","find Path -name Regex | xargs -I {} rm -r -f {}",y,n,y,n,n,n,y,n
"delete all the normal/regular files in the current folder","find . -type f -print0 | xargs -0 -I {} rm {}","find Path -type f -print0 | xargs -0 -I {} rm {}",y,y,y,y,y,y,y,y
"delete all the normal/regular files in the current folder","find . -type f -delete","find Path -type f -delete",y,y,y,y,y,y,,
"delete all the normal/regular files in the current folder","find . -type f -exec rm -f {} \;","find Path -type f -exec rm -f {} \;",y,y,y,y,y,y,y,y
"Delete all regular files under current directory","find . -type f -print0 | xargs -0 -I {} rm {}","find Path -type f -print0 | xargs -0 -I {} rm {}",y,y,y,y,y,y,,
"Delete all regular files under current directory","find . -type f -exec rm {} \;","find Path -type f -exec rm {} \;",y,y,y,y,y,y,y,y
"Delete all regular files under current directory","find . -type f | xargs -I {} rm {}","find Path -type f | xargs -I {} rm {}",y,y,y,y,y,y,y,y
"delete all text files from current folder","find . -name ""*"" -delete","find Path -name Regex -delete",n,n,y,n,n,n,n,n
"delete all text files from current folder","find . -name ""*"" | xargs -I {} rm {}","find Path -name Regex | xargs -I {} rm {}",n,n,y,n,n,n,n,n
"delete all text files from current folder","find . -name ""*"" -print0 | xargs -0 -I {} rm {}","find Path -name Regex -print0 | xargs -0 -I {} rm {}",n,n,y,n,n,n,n,n
"Delete files under $LOCATION that match $REQUIRED_FILES in their names and were modified more than 1 day ago","find ""$LOCATION"" -name ""$REQUIRED_FILES"" -type f -mtime +1 -exec rm -f {} \;","find Path -name Regex -type f -mtime +Timespan -exec rm -f {} \;",y,y,y,y,y,y,y,y
"Delete files under $LOCATION that match $REQUIRED_FILES in their names and were modified more than 1 day ago","find ""$LOCATION"" -name ""$REQUIRED_FILES"" -mtime +1 -exec rm {} \;","find Path -name Regex -mtime +Timespan -exec rm {} \;",y,y,y,y,y,y,n,n
"Delete files under $LOCATION that match $REQUIRED_FILES in their names and were modified more than 1 day ago","find ""$LOCATION"" -name ""$REQUIRED_FILES"" -type f -mtime +1 -exec rm {} \;","find Path -name Regex -type f -mtime +Timespan -exec rm {} \;",y,y,y,y,y,y,y,y
"Delete in the background all files in /var/tmp/stuff1 and below that have not been modified in over 90 days","find ""/var/tmp/stuff1"" -mtime +90 -exec rm {} \;","find Path -mtime +Timespan -exec rm {} \;",n,n,n,n,n,n,,
"Delete in the background all files in /var/tmp/stuff1 and below that have not been modified in over 90 days","find ""/var/tmp/stuff1"" -mtime +90 -exec rm -f {} \;","find Path -mtime +Timespan -exec rm -f {} \;",n,n,n,n,n,n,,
"Delete in the background all files in /var/tmp/stuff1 and below that have not been modified in over 90 days","find ""/var/tmp/stuff1"" -mtime +90 -exec rm {} +","find Path -mtime +Timespan -exec rm {} +",n,n,n,n,n,n,,
"display the three largest files by size in current folder","find . -type f -exec du -S -h {} + | sort -r -h | head -n 3","find Path -type f -exec du -S -h {} + | sort -r -h | head -n Quantity",y,y,y,y,y,y,y,y
"display the three largest files by size in current folder","du -s -h [file] | sort -r -h | head -n 3","du -s -h File | sort -r -h | head -n Quantity",n,n,y,n,n,n,n,n
"display the three largest files by size in current folder","du -h -s [file] | sort -r -h | head -n 3","du -h -s File | sort -r -h | head -n Quantity",n,n,y,n,n,n,n,n
"display the three smallest files by size in a folder.","find . -type f -exec du -S -h {} + | sort -r -h | head -n 3","find Path -type f -exec du -S -h {} + | sort -r -h | head -n Quantity",n,n,n,n,n,n,,
"display the three smallest files by size in a folder.","find . -type f -exec ls -s {} \; | sort -n | head - 3","find Path -type f -exec ls -s {} \; | sort -n | head - Quantity",y,n,n,n,y,n,y,n
"display the three smallest files by size in a folder.","find . -type f -printf __SP__UNK | head -n 3","find Path -type f -printf __SP__UNK | head -n Quantity",n,n,n,n,n,n,,
"Display a binary file as a sequence of hex codes","ls | xargs -n [quantity] -I {} echo {}","ls | xargs -n Quantity -I {} echo {}",n,n,n,n,n,n,,
"Display a binary file as a sequence of hex codes","find . -type f -exec ls -s {} \; | sort -n | head -n [quantity]","find Path -type f -exec ls -s {} \; | sort -n | head -n Quantity",n,n,n,n,n,n,,
"Display a binary file as a sequence of hex codes","ls | xargs -n [quantity] -I {} ls {}","ls | xargs -n Quantity -I {} ls {}",n,n,n,n,n,n,,
"dispaly a long listig of all the files in the current folder which are bigger than 100KB","find . -size +100k -ls","find Path -size +Size -ls",y,y,y,y,y,y,,
"dispaly a long listig of all the files in the current folder which are bigger than 100KB","find . -size +100k -exec ls -l -h {} \;","find Path -size +Size -exec ls -l -h {} \;",y,y,y,y,y,y,,
"dispaly a long listig of all the files in the current folder which are bigger than 100KB","find . -size +100k -exec ls -l -h {} +","find Path -size +Size -exec ls -l -h {} +",y,y,y,y,y,y,,
"display a long listing of all the log files in the current folder which are bigger than 1MB","find . -name ""*.log"" -size +1M -exec ls -l {} \;","find Path -name Regex -size +Size -exec ls -l {} \;",n,n,y,y,n,n,n,n
"display a long listing of all the log files in the current folder which are bigger than 1MB","find . -name ""*.log"" -size +1M -exec ls -l -h {} \;","find Path -name Regex -size +Size -exec ls -l -h {} \;",n,n,y,y,n,n,n,n
"display a long listing of all the log files in the current folder which are bigger than 1MB","find . -name ""*.log"" -size +1M -ls","find Path -name Regex -size +Size -ls",n,n,y,y,n,n,n,n
"display all the .sh scripts in the folder /usr","find ""/usr"" -type f -name ""*.sh""","find Path -type f -name Regex",y,y,y,y,y,y,y,y
"display all the .sh scripts in the folder /usr","find ""/usr"" -name ""*.sh""","find Path -name Regex",y,y,y,y,y,y,,
"display all the .sh scripts in the folder /usr","find ""/usr"" -type l -name ""*.sh""","find Path -type l -name Regex",n,n,n,n,y,n,n,n
"display all the directories in the current folder which are atleast one level deep","find . -mindepth [quantity] -type d","find Path -mindepth Quantity -type d",y,n,y,n,y,n,,
"display all the directories in the current folder which are atleast one level deep","find . -mindepth [quantity] -maxdepth [quantity] -type d","find Path -mindepth Quantity -maxdepth Quantity -type d",n,n,n,n,n,n,,
"display all the directories in the current folder which are atleast one level deep","find . -type d -mindepth [quantity]","find Path -type d -mindepth Quantity",y,n,y,n,y,n,y,n
"display all the directories in the current folder which start with processor followed by digit and ends with .1 or .2","find . -type d \( -name .1 -or -name .2 \)","find Path -type d \( -name Regex -or -name Regex \)",y,n,y,n,y,n,y,n
"display all the directories in the current folder which start with processor followed by digit and ends with .1 or .2","find . -type d \( -name .1 -or -name .2 -or -name ""*"" \)","find Path -type d \( -name Regex -or -name Regex -or -name Regex \)",y,n,y,n,n,n,y,n
"display all the directories in the current folder which start with processor followed by digit and ends with .1 or .2","find . -type d \( -name .1 -or -name .2 -or -name ""*"" \) -print","find Path -type d \( -name Regex -or -name Regex -or -name Regex \) -print",y,n,y,n,n,n,y,n
"display all directories in vim folder do not search in sub directories","find . -maxdepth [quantity] -type d","find Path -maxdepth Quantity -type d",y,n,y,n,y,n,,
"display all directories in vim folder do not search in sub directories","find . -maxdepth [quantity] -mindepth [quantity] -type d","find Path -maxdepth Quantity -mindepth Quantity -type d",y,n,n,n,y,n,y,n
"display all directories in vim folder do not search in sub directories","find . -mindepth [quantity] -maxdepth [quantity] -type d","find Path -mindepth Quantity -maxdepth Quantity -type d",y,n,n,n,y,n,y,n
"display all the files along with their group name in the folder /home which do not belong to the group test","find ""/home"" -group [regex] -iname [regex]","find Path -group Regex -iname Regex",n,n,n,n,n,n,,
"display all the files along with their group name in the folder /home which do not belong to the group test","find ""/home"" ! -group [regex]","find Path ! -group Regex",n,n,n,n,n,n,,
"display all the files along with their group name in the folder /home which do not belong to the group test","find ""/home"" -group [regex] ! -group [regex]","find Path -group Regex ! -group Regex",n,n,n,n,n,n,,
"display all files  expect directories in the current folder","find . -print","find Path -print",n,n,n,n,n,n,,
"display all files  expect directories in the current folder","find .","find Path",n,n,n,n,n,n,,
"display all files  expect directories in the current folder","find . -name ""*""","find Path -name Regex",n,n,n,n,n,n,,
"Display all files in a folder","find .","find Path",y,y,y,n,y,y,y,y
"Display all files in a folder","find . -print","find Path -print",y,y,y,n,y,y,y,y
"Display all files in a folder","find . -exec echo {} \;","find Path -exec echo {} \;",y,y,y,n,y,y,y,y
"display all the files in the current folder excluding the file states_to_csv.pl and those that are present in the directories whose name starts with "".git""","find . -name ""states_to_csv.pl"" -prune -or \( ! -name "".git"" \) -print","find Path -name Regex -prune -or \( ! -name Regex \) -print",y,n,y,n,y,n,y,y
"display all the files in the current folder excluding the file states_to_csv.pl and those that are present in the directories whose name starts with "".git""","find . -name ""states_to_csv.pl"" -prune -or -name "".git"" -print","find Path -name Regex -prune -or -name Regex -print",n,n,n,n,n,n,,
"display all the files in the current folder excluding the file states_to_csv.pl and those that are present in the directories whose name starts with "".git""","find . -name ""states_to_csv.pl"" -prune -or \( ! -name "".git"" -prune \)","find Path -name Regex -prune -or \( ! -name Regex -prune \)",n,n,n,n,n,n,,
"display all the files in the current folder excluding those that are present in the sub directory aa and display those files that start with the word ""file""","find . -name ""file"" -prune -or -print","find Path -name Regex -prune -or -print",n,y,n,n,n,y,y,y
"display all the files in the current folder excluding those that are present in the sub directory aa and display those files that start with the word ""file""","find . ! -name ""file"" -print","find Path ! -name Regex -print",n,y,n,n,n,y,y,y
"display all the files in the current folder excluding those that are present in the sub directory aa and display those files that start with the word ""file""","find . \( -name ""*"" -prune -or -name ""file"" \) -print","find Path \( -name Regex -prune -or -name Regex \) -print",y,y,y,n,y,y,y,y
"display all the files in the current folder which have been modified in one hour ago","find . -mtime [timespan]","find Path -mtime Timespan",y,n,y,n,n,n,y,n
"display all the files in the current folder which have been modified in one hour ago","find . -mmin [quantity]","find Path -mmin Quantity",y,n,y,n,y,n,y,n
"display all the files in the current folder which have been modified in one hour ago","find . -mtime [timespan]","find Path -mtime Timespan",y,n,y,n,n,n,y,n
"display all the files in the current folder which contains form feed (^L) and does not contain NULL","find . -name ""*"" -print0 | xargs -0 -I {} grep -L '.*' {}","find Path -name Regex -print0 | xargs -0 -I {} grep -L Regex {}",n,n,n,n,n,n,,
"display all the files in the current folder which contains form feed (^L) and does not contain NULL","find . -name ""*"" -print0","find Path -name Regex -print0",n,n,n,n,n,n,,
"display all the files in the current folder which contains form feed (^L) and does not contain NULL","find . -name ""*"" -prune -or -print","find Path -name Regex -prune -or -print",n,n,n,n,n,n,,
"display all files in the entire file system excluding the directories /proc,/sys,/dev and those files which are writable and which are not symbolic links and which are not sockets and which do not have the sticky bit set","find ""/dev"" ! \( -path [regex] -prune \) \( -name ""/proc"" -or -name ""/sys"" \) -print","find Path ! \( -path Regex -prune \) \( -name Regex -or -name Regex \) -print",n,n,n,n,n,n,,
"display all files in the entire file system excluding the directories /proc,/sys,/dev and those files which are writable and which are not symbolic links and which are not sockets and which do not have the sticky bit set","find ""/dev"" \( ! -wholename ""/proc"" -prune \) \( -name ""*"" -or -name ""/sys"" \) -print","find Path \( ! -wholename Regex -prune \) \( -name Regex -or -name Regex \) -print",n,n,n,n,n,n,,
"display all files in the entire file system excluding the directories /proc,/sys,/dev and those files which are writable and which are not symbolic links and which are not sockets and which do not have the sticky bit set","find ""/dev""","find Path",n,n,n,n,n,n,,
"display all files in the entire file system excluding those that are in the transfer directory","find . -name ""*"" -prune -or -print","find Path -name Regex -prune -or -print",y,n,y,n,y,n,,
"display all files in the entire file system excluding those that are in the transfer directory","find . ! -name ""*""","find Path ! -name Regex",n,n,n,n,n,n,,
"display all files in the entire file system excluding those that are in the transfer directory","find . \( -name ""*"" -prune -or -name ""*"" \) -print","find Path \( -name Regex -prune -or -name Regex \) -print",y,n,y,n,y,n,y,y
"display all the files in the folder /mp3-collection which are bigger than 10MB or which start with the name ""Metallica""","find ""/mp3-collection"" -size +10M -iname ""Metallica""","find Path -size +Size -iname Regex",n,n,n,n,n,n,,
"display all the files in the folder /mp3-collection which are bigger than 10MB or which start with the name ""Metallica""","find ""/mp3-collection"" -size +10M -name ""Metallica""","find Path -size +Size -name Regex",y,n,y,n,y,n,n,n
"display all the files in the folder /mp3-collection which are bigger than 10MB or which start with the name ""Metallica""","find ""/mp3-collection"" -size +10M \( -iname ""Metallica"" -or -iname [regex] \)","find Path -size +Size \( -iname Regex -or -iname Regex \)",n,n,n,n,n,n,,
"display all files in the folder bar only in the path /foo/bar/myfile (no output is generated)","find ""/foo/bar/myfile"" -path [regex]","find Path -path Regex",y,n,y,n,y,n,,
"display all files in the folder bar only in the path /foo/bar/myfile (no output is generated)","find ""/foo/bar/myfile""","find Path",n,n,n,n,n,n,,
"display all files in the folder bar only in the path /foo/bar/myfile (no output is generated)","find ""/foo/bar/myfile"" -not -path [regex]","find Path -not -path Regex",n,n,n,n,n,n,,
"display all file in the home folder except "".c"" files","find "".c"" ! -name ""*""","find Path ! -name Regex",y,n,y,n,y,n,y,n
"display all file in the home folder except "".c"" files","find "".c"" -not -name ""*""","find Path -not -name Regex",y,n,y,n,y,n,y,n
"display all file in the home folder except "".c"" files","find . ! \( -name ""*.c"" -or -name ""*"" \)","find Path ! \( -name Regex -or -name Regex \)",y,n,y,n,n,n,y,n
"display all the hidden directories in the directory ""/dir/to/search/""","find ""/dir/to/search/"" -type d -name ""*""","find Path -type d -name Regex",y,n,y,n,y,n,y,n
"display all the hidden directories in the directory ""/dir/to/search/""","find ""/dir/to/search/"" -type d -iname [regex]","find Path -type d -iname Regex",y,n,y,n,y,n,y,n
"display all the hidden directories in the directory ""/dir/to/search/""","find ""/dir/to/search/"" -name ""*"" -type d","find Path -name Regex -type d",y,n,y,n,y,n,y,n
"display all the html files in the current folder excluding search in the paths ./foo, ./bar.","find ""./foo"" -path ""./bar"" -prune -or -name ""*.html"" -print","find Path -path Regex -prune -or -name Regex -print",y,n,n,n,y,n,y,y
"display all the html files in the current folder excluding search in the paths ./foo, ./bar.","find ""./foo"" -type f -name ""*.html"" ! -path ""./bar"" ! -path [regex]","find Path -type f -name Regex ! -path Regex ! -path Regex",y,n,y,n,y,n,y,y
"display all the html files in the current folder excluding search in the paths ./foo, ./bar.","find ""./foo"" ! -path ""./bar"" -type f -name ""*.html""","find Path ! -path Regex -type f -name Regex",n,n,n,n,n,n,,
"display all the jars in the current folder","find . -type f -name ""*.jar""","find Path -type f -name Regex",y,y,y,y,y,y,y,y
"display all the jars in the current folder","find . -name ""*.jar""","find Path -name Regex",y,y,y,y,y,y,y,y
"display all the jars in the current folder","find . -type f -iname ""*.jar""","find Path -type f -iname Regex",y,y,y,y,n,n,y,y
"display all mp3 files in the file system which have not been accessed in the last 24 hours","find . -name ""*.mp3"" -atime +24h -print","find Path -name Regex -atime +Timespan -print",y,n,y,n,y,n,y,n
"display all mp3 files in the file system which have not been accessed in the last 24 hours","find . -iname ""*.mp3"" -atime +24h","find Path -iname Regex -atime +Timespan",y,n,y,n,n,n,y,n
"display all mp3 files in the file system which have not been accessed in the last 24 hours","find . -iname ""*.mp3"" -atime +24h -print","find Path -iname Regex -atime +Timespan -print",y,n,y,n,n,n,y,n
"display all the php files in the current folder which do not have the permission 644","find ""php"" ! -perm 644","find Path ! -perm Permission",n,n,y,n,n,n,n,n
"display all the php files in the current folder which do not have the permission 644","find . -name ""*.php"" ! -perm 644","find Path -name Regex ! -perm Permission",y,y,y,y,y,n,y,y
"display all the php files in the current folder which do not have the permission 644","find . -type f ! -perm 644 -iname ""*.php""","find Path -type f ! -perm Permission -iname Regex",y,y,y,y,y,n,y,y
"display all php,xml and phtml files in current folder","find . \( -name ""*.php"" -or -name ""*"" \) -print","find Path \( -name Regex -or -name Regex \) -print",n,n,n,n,n,n,,
"display all php,xml and phtml files in current folder","find . \( -name ""*.php"" -or -name ""*"" -or -name ""*"" \) -print","find Path \( -name Regex -or -name Regex -or -name Regex \) -print",y,n,y,n,y,n,y,n
"display all php,xml and phtml files in current folder","find . \( -name ""*.php"" -or -name ""*"" \)","find Path \( -name Regex -or -name Regex \)",n,n,n,n,n,n,,
"display all the regular/normal files in the /root folder which are bigger than 500MB","find ""/root"" -type f -size +500M","find Path -type f -size +Size",y,y,y,y,y,y,y,y
"display all the regular/normal files in the /root folder which are bigger than 500MB","find ""/root"" -size +500M -type f","find Path -size +Size -type f",y,y,y,y,y,y,y,y
"display all the regular/normal files in the /root folder which are bigger than 500MB","find ""/root"" -type f -size +500M | xargs -r -I {} echo [regex] [regex] {}","find Path -type f -size +Size | xargs -r -I {} echo Regex Regex {}",n,n,y,n,n,n,n,n
"display all the regular files in current folder excluding all the directories and all the sub directories having ""normal"" in their name","find . -type d -name ""normal"" -prune -or -type f -print","find Path -type d -name Regex -prune -or -type f -print",y,y,y,n,y,y,y,y
"display all the regular files in current folder excluding all the directories and all the sub directories having ""normal"" in their name","find . -type d \( -name ""normal"" -or -name ""*"" \) -prune -or -type f -print","find Path -type d \( -name Regex -or -name Regex \) -prune -or -type f -print",y,n,y,n,n,n,y,y
"display all the regular files in current folder excluding all the directories and all the sub directories having ""normal"" in their name","find . -type d -maxdepth [quantity] ! -name ""normal"" -print0 | xargs -0 -I {} echo {}","find Path -type d -maxdepth Quantity ! -name Regex -print0 | xargs -0 -I {} echo {}",n,n,n,n,n,n,,
"display all the regular files in the current folder which have the permission 777","find . -type f -perm 777","find Path -type f -perm Permission",y,y,y,y,y,y,,
"display all the regular files in the current folder which have the permission 777","find . -type f -perm 777 -print","find Path -type f -perm Permission -print",y,y,y,y,y,y,,
"display all the regular files in the current folder which have the permission 777","find . -perm 777 -type f -exec ls -l {} \;","find Path -perm Permission -type f -exec ls -l {} \;",y,y,y,y,n,n,y,y
"display all regular files in current folder which have spaces in their name","find . -type f -name ""*""","find Path -type f -name Regex",y,n,y,n,y,n,,
"display all regular files in current folder which have spaces in their name","find . -name ""*"" -type f","find Path -name Regex -type f",y,n,y,n,y,n,y,n
"display all regular files in current folder which have spaces in their name","find . -type f -iname [regex]","find Path -type f -iname Regex",y,n,y,n,y,n,y,n
"display all regular files in the folder image-folder","find . -type f","find Path -type f",y,n,y,n,y,n,,
"display all regular files in the folder image-folder","find . -name ""*"" -type f","find Path -name Regex -type f",y,n,y,n,y,n,y,n
"display all regular files in the folder image-folder","find . .","find Path Path",n,n,n,n,n,n,,
"display all regular/normal files in temp folder and display the filename along with file size","find . -type f -printf __SP__UNK","find Path -type f -printf __SP__UNK",y,n,y,n,y,n,y,n
"display all regular/normal files in temp folder and display the filename along with file size","find . -type f -exec echo {} \;","find Path -type f -exec echo {} \;",n,n,n,n,n,n,,
"display all regular/normal files in temp folder and display the filename along with file size","find . -type f -printf __SP__UNK | sort","find Path -type f -printf __SP__UNK | sort",y,n,y,n,n,n,y,n
"display all shell scripts in current folder","find . -type f -name ""*""","find Path -type f -name Regex",y,n,n,n,y,n,y,n
"display all shell scripts in current folder","find . -type d -name ""*""","find Path -type d -name Regex",n,n,n,n,n,n,,
"display all shell scripts in current folder","find . -name ""*"" -type f","find Path -name Regex -type f",y,n,n,n,y,n,y,n
"display all the text files and hidden files in the home folder","find . -name ""*""","find Path -name Regex",n,n,n,n,n,n,,
"display all the text files and hidden files in the home folder","find . \( -name ""*"" -or -name ""*"" \)","find Path \( -name Regex -or -name Regex \)",y,n,y,n,y,n,y,n
"display all the text files and hidden files in the home folder","find . \( -name ""*"" -or -name ""*"" \) -print","find Path \( -name Regex -or -name Regex \) -print",y,n,y,n,y,n,y,n
"display all text files in the folder /tmp/1","find ""/tmp/1"" -name ""*""","find Path -name Regex",y,n,y,n,y,n,y,n
"display all text files in the folder /tmp/1","find ""/tmp/1"" -type f -name ""*""","find Path -type f -name Regex",y,n,y,n,y,n,y,n
"display all text files in the folder /tmp/1","find ""/tmp/1"" -name ""*"" -print","find Path -name Regex -print",y,n,y,n,y,n,y,n
"display the count of all the normal/ regular files in the current directory","find ""normal/"" -type f | wc -l","find Path -type f | wc -l",y,n,y,n,y,n,,
"display the count of all the normal/ regular files in the current directory","find ""normal/"" -type f -print0 | xargs -0 -I {} wc -l {}","find Path -type f -print0 | xargs -0 -I {} wc -l {}",n,n,n,n,n,n,,
"display the count of all the normal/ regular files in the current directory","find ""normal/"" -maxdepth [quantity] -type f | wc -l","find Path -maxdepth Quantity -type f | wc -l",n,n,n,n,n,n,,
"Display differences between file1 and file2 side-by-side.","diff -y ""file1"" ""file2""","diff -y File File",y,y,y,y,y,y,y,y
"Display differences between file1 and file2 side-by-side.","diff -y -y ""file1"" ""file2""","diff -y -y File File",y,y,y,y,n,n,y,y
"Display differences between file1 and file2 side-by-side.","diff <(diff -y ""file1"" ""file2"")","diff <( diff -y File File )",n,n,n,n,n,n,,
"Display each line in file.txt backwards","cat ""file.txt"" | rev","cat File | rev",y,y,y,y,y,y,y,y
"Display each line in file.txt backwards","cat ""file.txt"" | xargs","cat File | xargs",n,n,n,n,n,n,,
"Display each line in file.txt backwards","cat ""file.txt"" | xargs -I {} echo [regex] [regex] {}","cat File | xargs -I {} echo Regex Regex {}",n,n,n,n,n,n,,
"display files ending with "".ext"" in current folder excluding those that are present in the list list.txt","find . -name "".ext"" -prune -or -name ""list.txt"" -print","find Path -name Regex -prune -or -name Regex -print",n,n,n,n,n,n,,
"display files ending with "".ext"" in current folder excluding those that are present in the list list.txt","find "".ext"" -path [regex] -prune -or -name ""list.txt"" -print","find Path -path Regex -prune -or -name Regex -print",n,n,n,n,n,n,,
"display files ending with "".ext"" in current folder excluding those that are present in the list list.txt","find ""list.txt"" -name "".ext"" -prune -or -print | grep -v '.*'","find Path -name Regex -prune -or -print | grep -v Regex",n,n,n,n,n,n,,
"Displays information about all network interfaces in system, including inactive ones.","ifconfig [regex]","ifconfig Regex",n,n,n,n,n,n,,
"Displays information about all network interfaces in system, including inactive ones.","ifconfig | grep '.*'","ifconfig | grep Regex",y,y,y,y,y,y,y,n
"Displays information about all network interfaces in system, including inactive ones.","echo [regex] | grep -o '.*'","echo Regex | grep -o Regex",n,n,n,n,n,n,,
"(GNU specific) Display information about number of processes in various states.","top -b -n [quantity] -c | grep '.*'","top -b -n Quantity -c | grep Regex",y,n,y,n,n,n,y,n
"(GNU specific) Display information about number of processes in various states.","top -b -n [quantity] | grep '.*'","top -b -n Quantity | grep Regex",y,n,y,n,y,n,,
"(GNU specific) Display information about number of processes in various states.","ps -e -f | grep '.*' | grep -v '.*'","ps -e -f | grep Regex | grep -v Regex",n,n,n,n,n,n,,
"display long listing of all the empty files in the current folder","find . -size [size] -exec ls -l {} \;","find Path -size Size -exec ls -l {} \;",y,n,y,n,y,n,n,n
"display long listing of all the empty files in the current folder","find . -empty -exec ls {} \;","find Path -empty -exec ls {} \;",n,n,n,n,n,n,,
"display long listing of all the empty files in the current folder","find . -type f -empty -exec ls -l {} \;","find Path -type f -empty -exec ls -l {} \;",y,y,y,y,y,y,y,y
"Display machine architecture, ie. x86_64","find ""x86_64"" -type d -exec ls -s {} \; | sort -n | head - [quantity]","find Path -type d -exec ls -s {} \; | sort -n | head - Quantity",n,n,n,n,n,n,,
"Display machine architecture, ie. x86_64","find . -type f -exec file {} \; | grep ""x86_64"" | cut -d [regex] -f [number] | cut -d [regex] -f [number]","find Path -type f -exec file {} \; | grep Regex | cut -d Regex -f Number | cut -d Regex -f Number",n,n,n,n,n,n,,
"Display machine architecture, ie. x86_64","find ""x86_64"" -type f -exec file {} \; | grep -v '.*' | cut -d [regex] -f [number] | cut -d [regex] -f [number]","find Path -type f -exec file {} \; | grep -v Regex | cut -d Regex -f Number | cut -d Regex -f Number",n,n,n,n,n,n,,
"Display only mimetype of myfile.txt, without the filename.","find . -path ""myfile.txt"" -ls","find Path -path Regex -ls",n,n,n,n,n,n,,
"Display only mimetype of myfile.txt, without the filename.","find ""myfile.txt"" --help -name ""*""","find Path --help -name Regex",n,n,n,n,n,n,,
"Display only mimetype of myfile.txt, without the filename.","find . -regex ""myfile.txt""","find Path -regex Regex",n,n,n,n,n,n,,
"Display standard input as a table with ""${tab}"" separators","column -s ""${tab}""","column -s Regex",y,y,n,n,y,y,y,y
"Display standard input as a table with ""${tab}"" separators","paste -s -d ""${tab}""","paste -s -d Regex",n,n,n,n,n,n,,
"Display standard input as a table with ""${tab}"" separators","column -s ""${tab}"" -t","column -s Regex -t",y,y,y,y,y,y,,
"download content from ""http://example.com/textfile.txt"" and output to ""textfile.txt""","curl [regex] ""http://example.com/textfile.txt"" ""textfile.txt""","curl Regex Regex Regex",n,n,n,n,y,y,n,n
"download content from ""http://example.com/textfile.txt"" and output to ""textfile.txt""","curl [regex] ""http://example.com/textfile.txt"" | tee ""textfile.txt""","curl Regex Regex | tee File",n,n,n,n,y,n,n,n
"download content from ""http://example.com/textfile.txt"" and output to ""textfile.txt""","curl [regex] ""http://example.com/textfile.txt"" | tee -a ""textfile.txt""","curl Regex Regex | tee -a File",n,n,n,n,n,n,,
"download contents of a website ""http://example.com/""","","",n,n,n,n,n,n,,
"download contents of a website ""http://example.com/""","","",n,n,n,n,n,n,,
"download contents of a website ""http://example.com/""","","",n,n,n,n,n,n,,
"download file  ""https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh"" and execute it","find ""https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh"" \( -name ""*"" -or -name ""*"" \) -print","find Path \( -name Regex -or -name Regex \) -print",n,n,n,n,n,n,,
"download file  ""https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh"" and execute it","find ""https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh"" \( -name ""*"" -or -name ""*"" \) -exec ls {} \;","find Path \( -name Regex -or -name Regex \) -exec ls {} \;",n,n,n,n,n,n,,
"download file  ""https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh"" and execute it","find ""https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh"" \( -name ""*"" -or -name ""*"" -or -name ""*"" \) -print","find Path \( -name Regex -or -name Regex -or -name Regex \) -print",n,n,n,n,n,n,,
"Enables shell option 'direxpand'.","shopt -s __SP__UNK | xargs -I {} echo [regex] ""direxpand"" {}","shopt -s __SP__UNK | xargs -I {} echo Regex Regex {}",n,n,n,n,n,n,,
"Enables shell option 'direxpand'.","shopt -s __SP__UNK | xargs -I {} echo [regex] ""direxpand"" [regex] {}","shopt -s __SP__UNK | xargs -I {} echo Regex Regex Regex {}",n,n,n,n,n,n,,
"Enables shell option 'direxpand'.","echo -e ""direxpand"" | xargs -I {} echo [regex] [regex] {}","echo -e Regex | xargs -I {} echo Regex Regex {}",n,n,n,n,n,n,,
"Enables shell option 'histappend'.","shopt -s __SP__UNK | xargs -I {} echo [regex] ""histappend"" {}","shopt -s __SP__UNK | xargs -I {} echo Regex Regex {}",n,n,n,n,n,n,,
"Enables shell option 'histappend'.","shopt -s __SP__UNK | xargs -I {} echo [regex] ""histappend"" [regex] {}","shopt -s __SP__UNK | xargs -I {} echo Regex Regex Regex {}",n,n,n,n,n,n,,
"Enables shell option 'histappend'.","echo -e ""histappend"" | xargs -I {} echo [regex] [regex] {}","echo -e Regex | xargs -I {} echo Regex Regex {}",n,n,n,n,n,n,,
"ERROR - need to add -a or -r for recursive copy","rsync -a -v --rsync-path=Program ""-r"" ""-a""","rsync -a -v --rsync-path Program File File",n,n,n,n,n,n,,
"ERROR - need to add -a or -r for recursive copy","rsync -a -v -R ""-a"" ""-r""","rsync -a -v -R File File",n,n,n,n,n,n,,
"ERROR - need to add -a or -r for recursive copy","rsync -a -v -v ""-r"" ""-a""","rsync -a -v -v File File",n,n,n,n,n,n,,
"Execute `somecommand' on each file from the current directory tree with the environment variable f set to the filename","find ""somecommand"" -print0 | xargs -0 -I {} chmod [permission] {}","find Path -print0 | xargs -0 -I {} chmod Permission {}",n,n,n,n,n,n,,
"Execute `somecommand' on each file from the current directory tree with the environment variable f set to the filename","find ""somecommand"" -exec echo {} \;","find Path -exec echo {} \;",n,n,n,n,n,n,,
"Execute `somecommand' on each file from the current directory tree with the environment variable f set to the filename","find . -print0 | xargs -0 -I {} echo ""somecommand"" [regex] {}","find Path -print0 | xargs -0 -I {} echo Regex Regex {}",n,n,n,n,n,n,,
"Execute all arguments to a shell script and write the output to console and ""$FILE""","ls -l -R [file] | tee ""$FILE""","ls -l -R File | tee File",n,n,n,n,n,n,,
"Execute all arguments to a shell script and write the output to console and ""$FILE""","rsync -a -v [file] ""$FILE""","rsync -a -v File File",n,n,n,n,n,n,,
"Execute all arguments to a shell script and write the output to console and ""$FILE""","ls -a -l -R [file] | tee ""$FILE""","ls -a -l -R File | tee File",n,n,n,n,n,n,,
"Execute command ""$cmd_str"" on host ""$SERVER"" as user ""$USER""","echo ""$USER"" | ssh [regex] | xargs -n [quantity] -I {} echo ""$SERVER"" ""$cmd_str"" {}","echo Regex | ssh Regex | xargs -n Quantity -I {} echo Regex Regex {}",n,n,n,n,n,n,,
"Execute command ""$cmd_str"" on host ""$SERVER"" as user ""$USER""","echo ""$USER"" | ssh [regex] | xargs -I {} echo ""$SERVER"" ""$cmd_str"" {}","echo Regex | ssh Regex | xargs -I {} echo Regex Regex {}",n,n,n,n,n,n,,
"Execute command ""$cmd_str"" on host ""$SERVER"" as user ""$USER""","echo ""$USER"" | ssh [regex] | xargs -I {} echo ""$SERVER"" ""$cmd_str"" [regex] {}","echo Regex | ssh Regex | xargs -I {} echo Regex Regex Regex {}",n,n,n,n,n,n,,
"Expand bash array ""myargs"" as arguments to ""mv""","echo ""mv"" | rev | cut -d ""myargs"" -f [number] | rev","echo Regex | rev | cut -d Regex -f Number | rev",n,n,n,n,n,n,,
"Expand bash array ""myargs"" as arguments to ""mv""","echo ""mv"" | tr [regex] ""myargs""","echo Regex | tr Regex Regex",n,n,n,n,n,n,,
"Expand bash array ""myargs"" as arguments to ""mv""","echo ""mv"" | rev | cut -d ""myargs"" -f [number] | tr [regex] [regex]","echo Regex | rev | cut -d Regex -f Number | tr Regex Regex",n,n,n,n,n,n,,
"Extract all gzip-compressed files from tar archives beginning with 'myfiles_split.tgz_*'","find ""myfiles_split.tgz_*"" | grep -v '.*' | xargs -I {} tar -c -v -f [file] {}","find Path | grep -v Regex | xargs -I {} tar -c -v -f File {}",n,n,n,n,n,n,,
"Extract all gzip-compressed files from tar archives beginning with 'myfiles_split.tgz_*'","find ""myfiles_split.tgz_*"" -name ""*"" | xargs -I {} tar -c -v -f [file] {}","find Path -name Regex | xargs -I {} tar -c -v -f File {}",n,n,n,n,n,n,,
"Extract all gzip-compressed files from tar archives beginning with 'myfiles_split.tgz_*'","find ""myfiles_split.tgz_*"" -name ""*"" | xargs -I {} tar -c -z -f [file] {}","find Path -name Regex | xargs -I {} tar -c -z -f File {}",n,n,n,n,n,n,,
"Extract any line in sorted file ""A"" that does not appear in ""B"", ""C"", or ""D""","","",n,n,n,n,n,n,,
"Extract any line in sorted file ""A"" that does not appear in ""B"", ""C"", or ""D""","","",n,n,n,n,n,n,,
"Extract any line in sorted file ""A"" that does not appear in ""B"", ""C"", or ""D""","","",n,n,n,n,n,n,,
"Filter out current date in current time zone from the GMT+30 and GMT+20 representations of current date and show the last one","echo ""GMT+30"" | grep -v '.*' | tail - [quantity] | cut -d ""GMT+20"" -f [number]","echo Regex | grep -v Regex | tail - Quantity | cut -d Regex -f Number",n,n,n,n,n,n,,
"Filter out current date in current time zone from the GMT+30 and GMT+20 representations of current date and show the last one","echo ""GMT+30"" | grep -v ""GMT+20"" | tr [regex] [regex] | tail - [quantity] | cut -d [regex] -f [number]","echo Regex | grep -v Regex | tr Regex Regex | tail - Quantity | cut -d Regex -f Number",n,n,n,n,n,n,,
"Filter out current date in current time zone from the GMT+30 and GMT+20 representations of current date and show the last one","grep -v ""GMT+20"" [file] | cut -d ""GMT+30"" -f [number] | tail - [quantity] | cut -d [regex] -f [number]","grep -v Regex File | cut -d Regex -f Number | tail - Quantity | cut -d Regex -f Number",n,n,n,n,n,n,,
"Finds $a pattern in a $b string, and returns exit code 0 if found, suppressing any visible output.","grep -n ""$a"" [file] | tr -s [regex] | cut -d ""$b"" -f 0","grep -n Regex File | tr -s Regex | cut -d Regex -f Number",n,n,n,n,n,n,,
"Finds $a pattern in a $b string, and returns exit code 0 if found, suppressing any visible output.","grep -n -e ""$a"" '.*' | cut -d ""$b"" -f [number] | tr [regex] 0","grep -n -e Regex Regex | cut -d Regex -f Number | tr Regex Regex",n,n,n,n,n,n,,
"Finds $a pattern in a $b string, and returns exit code 0 if found, suppressing any visible output.","grep -e ""$a"" '.*' | cut -d ""$b"" -f [number] | tr [regex] 0","grep -e Regex Regex | cut -d Regex -f Number | tr Regex Regex",n,n,n,n,n,n,,
"Find *.c and *.h files under the current directory tree skipping hidden directories and files","find . \( -name ""*.h"" -or -name ""*.c"" -or -name ""*"" \) -print","find Path \( -name Regex -or -name Regex -or -name Regex \) -print",n,n,n,n,n,n,,
"Find *.c and *.h files under the current directory tree skipping hidden directories and files","find . -name ""*.c"" -not -path ""*.h""","find Path -name Regex -not -path Regex",n,n,n,n,n,n,,
"Find *.c and *.h files under the current directory tree skipping hidden directories and files","find . -name ""*.c"" -prune -or -name ""*.h"" -print","find Path -name Regex -prune -or -name Regex -print",n,n,n,n,n,n,,
"Find *.jpg screenshots that are bigger than 500k","find ""*.jpg"" -size +500k","find Path -size +Size",y,n,y,n,n,n,y,y
"Find *.jpg screenshots that are bigger than 500k","find ""*.jpg"" -size +500k -iname [regex]","find Path -size +Size -iname Regex",y,n,y,n,y,n,,
"Find *.jpg screenshots that are bigger than 500k","find ""*.jpg"" -size +500k -print","find Path -size +Size -print",y,n,y,n,n,n,y,y
"Find .cpp files that differs in subdirectories PATH1 and PATH2.","find . \( -name "".cpp"" -or -name ""path2"" -or -name ""path1"" \) -print","find Path \( -name Regex -or -name Regex -or -name Regex \) -print",n,n,n,n,n,n,,
"Find .cpp files that differs in subdirectories PATH1 and PATH2.","find . \( -name ""path1"" -or -name ""path2"" \) -name "".cpp"" -print","find Path \( -name Regex -or -name Regex \) -name Regex -print",n,n,n,n,n,n,,
"Find .cpp files that differs in subdirectories PATH1 and PATH2.","find ""path1"" \( -name "".cpp"" -or -name ""path2"" \) -print","find Path \( -name Regex -or -name Regex \) -print",n,n,n,n,n,n,,
"Find a directory named 'project.images' case insensitively in the entire filesystem and show it in long listing format","find ""project.images"" -iname [regex] -type d","find Path -iname Regex -type d",n,n,n,n,n,n,,
"Find a directory named 'project.images' case insensitively in the entire filesystem and show it in long listing format","find ""project.images"" -type d -iname [regex]","find Path -type d -iname Regex",n,n,n,n,y,n,n,n
"Find a directory named 'project.images' case insensitively in the entire filesystem and show it in long listing format","find ""project.images"" -iname [regex] -type f","find Path -iname Regex -type f",n,n,n,n,n,n,,
"find all the "".jpg"" files in current folder and display their count","find . -name ""*.jpg"" | wc -l","find Path -name Regex | wc -l",y,y,y,y,y,y,y,y
"find all the "".jpg"" files in current folder and display their count","find . -type f -name ""*.jpg"" | wc -l","find Path -type f -name Regex | wc -l",y,y,y,y,y,y,y,y
"find all the "".jpg"" files in current folder and display their count","find . -iname ""*.jpg"" | wc -l","find Path -iname Regex | wc -l",y,y,y,y,y,y,,
"Find all *.cgi (case insensitive) files/directories under current directory and change their permission to 755","find . -name ""*.cgi"" -exec chmod 755 {} \;","find Path -name Regex -exec chmod Permission {} \;",n,n,y,n,n,n,n,n
"Find all *.cgi (case insensitive) files/directories under current directory and change their permission to 755","chmod 755 $(find . -name ""*.cgi"")","chmod Permission $( find Path -name Regex )",n,n,y,n,n,n,n,n
"Find all *.cgi (case insensitive) files/directories under current directory and change their permission to 755","find . -name ""*.cgi"" -print0 | xargs -0 -I {} chmod 755 {}","find Path -name Regex -print0 | xargs -0 -I {} chmod Permission {}",y,n,y,n,y,n,,
"Find all *.epub, *.mobi, *.chm, *.rtf, *.lit and *.djvu files/directories under current directory","find ""*.epub"" ""*.chm"" ""*.mobi"" \( -name ""*.djvu"" -or -name ""*.lit"" -or -name ""*.rtf"" \) -print","find Path Path Path \( -name Regex -or -name Regex -or -name Regex \) -print",n,n,n,n,n,n,,
"Find all *.epub, *.mobi, *.chm, *.rtf, *.lit and *.djvu files/directories under current directory","find ""*.epub"" -type f -name ""*.djvu"" -or -name ""*.lit"" -or -name ""*.rtf"" -or -name ""*.chm"" -or -name ""*.mobi""","find Path -type f -name Regex -or -name Regex -or -name Regex -or -name Regex -or -name Regex",n,n,n,n,n,n,,
"Find all *.epub, *.mobi, *.chm, *.rtf, *.lit and *.djvu files/directories under current directory","find ""*.epub"" ""*.chm"" ""*.mobi"" ""*.rtf"" \( -name ""*.djvu"" -or -name ""*.lit"" \) -print","find Path Path Path Path \( -name Regex -or -name Regex \) -print",n,n,n,n,n,n,,
"find all *.java files/directories under current directory","find . -name ""*.java""","find Path -name Regex",y,y,y,y,y,y,,
"find all *.java files/directories under current directory","find . -name ""*.java"" -print","find Path -name Regex -print",y,y,y,y,y,y,,
"find all *.java files/directories under current directory","find . -name ""*.java"" -print0 | xargs -0 -I {} file {}","find Path -name Regex -print0 | xargs -0 -I {} file {}",n,n,y,y,n,n,n,n
"Find all *.java files in the current directory tree","find . -name ""*.java""","find Path -name Regex",y,y,y,y,y,y,y,y
"Find all *.java files in the current directory tree","find . -type f -name ""*.java""","find Path -type f -name Regex",y,y,y,y,y,y,y,y
"Find all *.java files in the current directory tree","find . -name ""*.java"" | xargs -I {} grep '.*' {}","find Path -name Regex | xargs -I {} grep Regex {}",n,n,n,n,n,n,,
"Find all *.mp4 files under /foo/bar and move them to /some/path","find ""/foo/bar"" -name ""*.mp4"" -print0 | xargs -0 -I {} mv {} ""/some/path""","find Path -name Regex -print0 | xargs -0 -I {} mv {} File",y,y,y,y,y,y,y,y
"Find all *.mp4 files under /foo/bar and move them to /some/path","find ""/foo/bar"" -iname ""*.mp4"" -print0 | xargs -0 -I {} mv {} ""/some/path""","find Path -iname Regex -print0 | xargs -0 -I {} mv {} File",y,y,y,y,n,n,y,y
"Find all *.mp4 files under /foo/bar and move them to /some/path","find ""/foo/bar"" -iname ""*.mp4"" -exec mv {} ""/some/path"" \;","find Path -iname Regex -exec mv {} File \;",y,y,y,y,n,n,y,y
"Find all *.ps files under $STARTDIR","find ""$STARTDIR"" -type f -name ""*.ps""","find Path -type f -name Regex",y,y,y,y,y,y,,
"Find all *.ps files under $STARTDIR","find ""$STARTDIR"" -name ""*.ps""","find Path -name Regex",y,y,y,y,y,y,,
"Find all *.ps files under $STARTDIR","find ""*.ps"" -type f -iname ""$STARTDIR""","find Path -type f -iname Regex",y,n,y,n,y,n,,
"Find all *.rpm files/directories under current directory","find . -name ""*.rpm""","find Path -name Regex",y,y,y,y,y,y,y,y
"Find all *.rpm files/directories under current directory","find . -name ""*.rpm"" -print","find Path -name Regex -print",y,y,y,y,y,y,y,y
"Find all *.rpm files/directories under current directory","find . -name ""*.rpm"" -print0 | xargs -0 -I {} file {}","find Path -name Regex -print0 | xargs -0 -I {} file {}",n,n,y,y,n,n,n,n
"Find all *.txt files under the current directory whose names are not ""File.txt""","find . -name ""*.txt"" -not -path ""File.txt""","find Path -name Regex -not -path Regex",n,n,y,n,n,n,n,n
"Find all *.txt files under the current directory whose names are not ""File.txt""","find . -name ""*.txt"" -not -name ""File.txt""","find Path -name Regex -not -name Regex",y,y,y,y,y,y,y,y
"Find all *.txt files under the current directory whose names are not ""File.txt""","find . -name ""*.txt"" ! -name ""File.txt"" -print","find Path -name Regex ! -name Regex -print",y,y,y,y,y,y,y,y
"Find all *shp* directories under current directory and move their contents to ../shp_all/","find . -type d -name ""*shp*"" -exec mv -t ""../shp_all/"" {} +","find Path -type d -name Regex -exec mv -t Directory {} +",y,y,y,y,n,n,y,y
"Find all *shp* directories under current directory and move their contents to ../shp_all/","find ""../shp_all/"" -type d -name ""*shp*"" -exec mv {} [file] \;","find Path -type d -name Regex -exec mv {} File \;",y,n,y,n,n,n,y,y
"Find all *shp* directories under current directory and move their contents to ../shp_all/","find . -name ""*shp*"" -type d -print0 | xargs -0 -I {} mv -t ""../shp_all/"" {}","find Path -name Regex -type d -print0 | xargs -0 -I {} mv -t Directory {}",y,y,y,y,n,n,y,y
"Find all .c and .C files in the current directory tree that contain ""main("" and copy them to directory test1/","find ""main \( "" -name ""*.c"" | grep -v ""*.C"" | xargs -I {} cp -a --target-directory=""test1/"" --parents {}","find Path -name Regex | grep -v Regex | xargs -I {} cp -a --target-directory Directory --parents {}",n,n,n,n,n,n,,
"Find all .c and .C files in the current directory tree that contain ""main("" and copy them to directory test1/","find ""main \( "" -name ""*.c"" | grep -v ""*.C"" | xargs -I {} cp -a -v --target-directory=""test1/"" --parents {}","find Path -name Regex | grep -v Regex | xargs -I {} cp -a -v --target-directory Directory --parents {}",n,n,n,n,n,n,,
"Find all .c and .C files in the current directory tree that contain ""main("" and copy them to directory test1/","find ""main \( "" -name ""*.c"" -or -name ""*.C"" | xargs -I {} cp -a -v --target-directory=""test1/"" --parents {}","find Path -name Regex -or -name Regex | xargs -I {} cp -a -v --target-directory Directory --parents {}",n,n,n,n,n,n,,
"Find all .gz archives in the /path/to/dir directory tree","find ""/path/to/dir"" -type f -name ""*.gz""","find Path -type f -name Regex",y,y,y,y,y,y,y,y
"Find all .gz archives in the /path/to/dir directory tree","find ""/path/to/dir"" -type f -name ""*.gz"" | xargs -I {} tar -c -v -f [file] {}","find Path -type f -name Regex | xargs -I {} tar -c -v -f File {}",n,n,n,n,n,n,,
"Find all .gz archives in the /path/to/dir directory tree","find ""/path/to/dir"" -type f -name ""*.gz"" -exec tar -u -f [file] {} \;","find Path -type f -name Regex -exec tar -u -f File {} \;",n,n,n,n,n,n,,
"Find all .js files in the current directory tree that do not contain a whitespace","find . -name ""*.js"" -print0 | xargs -0 -I {} grep -L '.*' {}","find Path -name Regex -print0 | xargs -0 -I {} grep -L Regex {}",y,n,y,n,y,n,y,y
"Find all .js files in the current directory tree that do not contain a whitespace","find . -name ""*.js"" | grep -v '.*'","find Path -name Regex | grep -v Regex",n,n,n,n,n,n,,
"Find all .js files in the current directory tree that do not contain a whitespace","find . -name ""*.js"" -print0 | xargs -0 -n [quantity] -I {} grep -L '.*' {}","find Path -name Regex -print0 | xargs -0 -n Quantity -I {} grep -L Regex {}",y,n,y,n,y,n,y,y
"Find all .mp3 files with more then 10MB and delete them from root directory .","find . -name ""*.mp3"" -size +10M -delete","find Path -name Regex -size +Size -delete",y,n,y,n,y,y,n,n
"Find all .mp3 files with more then 10MB and delete them from root directory .","find . -name ""*.mp3"" -size +10M -exec rm {} \;","find Path -name Regex -size +Size -exec rm {} \;",y,n,y,n,y,y,n,n
"Find all .mp3 files with more then 10MB and delete them from root directory .","find . -name ""*.mp3"" -size +10M -exec rm -r -f {} \;","find Path -name Regex -size +Size -exec rm -r -f {} \;",y,n,y,n,n,n,y,n
"Find all 777 permission files/directories under current directory tree","find . -perm 777","find Path -perm Permission",y,y,y,y,y,y,,
"Find all 777 permission files/directories under current directory tree","find . -type f -perm 777 -print","find Path -type f -perm Permission -print",n,n,n,n,n,n,,
"Find all 777 permission files/directories under current directory tree","find . -perm -777","find Path -perm -Permission",y,y,y,y,y,y,y,y
"Find all broken symlinks in maximum 1 level down the $path directory","find ""$path"" -maxdepth 1 -type l","find Path -maxdepth Quantity -type l",n,n,n,n,n,n,,
"Find all broken symlinks in maximum 1 level down the $path directory","find ""$path"" -mindepth 1 -type l","find Path -mindepth Quantity -type l",n,n,n,n,n,n,,
"Find all broken symlinks in maximum 1 level down the $path directory","find ""$path"" -mindepth 1 -maxdepth [quantity] -type l","find Path -mindepth Quantity -maxdepth Quantity -type l",n,n,n,n,n,n,,
"find all directories in the current directory","find . -type d","find Path -type d",y,y,y,y,y,y,y,y
"find all directories in the current directory","find . -type d -print","find Path -type d -print",y,y,y,y,y,y,y,y
"find all directories in the current directory","find . -type d -exec ls -d -l -r -t {} \;","find Path -type d -exec ls -d -l -r -t {} \;",y,y,y,y,n,n,y,y
"Find all directories in maximum 2 levels down the /tmp/test directory","find ""/tmp/test"" -maxdepth 2 -type d","find Path -maxdepth Quantity -type d",y,y,y,y,y,y,y,y
"Find all directories in maximum 2 levels down the /tmp/test directory","find ""/tmp/test"" -mindepth 2 -maxdepth [quantity] -type d","find Path -mindepth Quantity -maxdepth Quantity -type d",y,n,n,n,y,n,y,n
"Find all directories in maximum 2 levels down the /tmp/test directory","find ""/tmp/test"" -maxdepth 2 -mindepth [quantity] -type d","find Path -maxdepth Quantity -mindepth Quantity -type d",y,n,n,n,y,n,y,n
"Find all directories starting from / that have permissions 777","find ""/"" -type d -perm 777","find Path -type d -perm Permission",y,y,y,y,y,y,y,y
"Find all directories starting from / that have permissions 777","find ""/"" -type d -perm 777 -print","find Path -type d -perm Permission -print",y,y,y,y,y,y,y,y
"Find all directories starting from / that have permissions 777","find ""/"" -perm 777","find Path -perm Permission",n,n,n,n,n,n,,
"Find all directories that start with stat","find . -type d -name ""*""","find Path -type d -name Regex",y,n,y,n,y,n,y,n
"Find all directories that start with stat","find . -name ""*"" -type d","find Path -name Regex -type d",y,n,y,n,y,n,y,n
"Find all directories that start with stat","find . -type d -iname [regex]","find Path -type d -iname Regex",y,n,n,n,y,n,y,n
"Find all directories under $x directory and set read-write-execute permission for owner and group and no permission for other for those directories","find ""$x"" -type d -exec chmod [permission] {} \;","find Path -type d -exec chmod Permission {} \;",y,n,y,n,y,n,,
"Find all directories under $x directory and set read-write-execute permission for owner and group and no permission for other for those directories","find ""$x"" -type d -exec chmod [permission] {} +","find Path -type d -exec chmod Permission {} +",y,n,y,n,y,n,y,n
"Find all directories under $x directory and set read-write-execute permission for owner and group and no permission for other for those directories","find ""$x"" -type d -print0 | xargs -0 -I {} chmod [permission] {}","find Path -type d -print0 | xargs -0 -I {} chmod Permission {}",y,n,y,n,y,n,y,n
"Find all directories under 'project' directory without going into subdirectories that do not match the POSIX egrep regex $PATTERN in their paths and are not empty","find ""project"" -type d ! -path [regex] ! -path [regex] ! -path ""$PATTERN""","find Path -type d ! -path Regex ! -path Regex ! -path Regex",n,n,n,n,n,n,,
"Find all directories under 'project' directory without going into subdirectories that do not match the POSIX egrep regex $PATTERN in their paths and are not empty","find ""project"" -type d ! -name ""$PATTERN"" ! -path [regex] ! -path [regex]","find Path -type d ! -name Regex ! -path Regex ! -path Regex",n,n,n,n,n,n,,
"Find all directories under 'project' directory without going into subdirectories that do not match the POSIX egrep regex $PATTERN in their paths and are not empty","find ""project"" -maxdepth [quantity] -type d ! -name ""$PATTERN"" -print0 | xargs -0 -I {} rmdir {}","find Path -maxdepth Quantity -type d ! -name Regex -print0 | xargs -0 -I {} rmdir {}",n,n,n,n,n,n,,
"Find all directories under /directory-path and change their permission to 2755","chmod 2755 $(find ""/directory-path"" -type d)","chmod Permission $( find Path -type d )",y,y,y,y,y,y,y,y
"Find all directories under /directory-path and change their permission to 2755","find ""/directory-path"" -type d -exec chmod 2755 {} +","find Path -type d -exec chmod Permission {} +",y,y,y,y,y,y,y,y
"Find all directories under /directory-path and change their permission to 2755","find ""/directory-path"" -type d -exec chmod 2755 {} \;","find Path -type d -exec chmod Permission {} \;",y,y,y,y,y,y,y,y
"Find all directories under minimum 1 level down the current directory excluding  directories (along with their contents) that start with a . (dot) in their names","find . -type d -maxdepth 1 ! -name ""*""","find Path -type d -maxdepth Quantity ! -name Regex",n,n,n,n,n,n,,
"Find all directories under minimum 1 level down the current directory excluding  directories (along with their contents) that start with a . (dot) in their names","find . -maxdepth 1 -type d | grep '.*'","find Path -maxdepth Quantity -type d | grep Regex",n,n,n,n,n,n,,
"Find all directories under minimum 1 level down the current directory excluding  directories (along with their contents) that start with a . (dot) in their names","find . -mindepth 1 -maxdepth [quantity] -type d | grep '.*'","find Path -mindepth Quantity -maxdepth Quantity -type d | grep Regex",n,n,n,n,n,n,,
"find all the empty directories in current folder and delete them","find . -type d -empty -delete","find Path -type d -empty -delete",y,y,y,y,y,y,y,y
"find all the empty directories in current folder and delete them","find . -type d -empty -exec rm -r -f {} \;","find Path -type d -empty -exec rm -r -f {} \;",y,y,y,y,y,y,y,y
"find all the empty directories in current folder and delete them","find . -type d -empty -exec rm [file] \;","find Path -type d -empty -exec rm File \;",n,n,n,n,n,n,,
"Find all empty directories in the current one and delete them","find . -type d -empty -delete","find Path -type d -empty -delete",y,y,y,y,y,y,,
"Find all empty directories in the current one and delete them","find . -type d -empty -exec rm [file] \;","find Path -type d -empty -exec rm File \;",n,n,n,n,n,n,,
"Find all empty directories in the current one and delete them","find . -type d -empty -exec rm -r -f {} \;","find Path -type d -empty -exec rm -r -f {} \;",y,y,y,y,y,y,,
"find all the empty in the current folder do not search in sub directories","find . -maxdepth [quantity] -type d -empty","find Path -maxdepth Quantity -type d -empty",y,n,y,n,y,n,,
"find all the empty in the current folder do not search in sub directories","find . -maxdepth [quantity] -empty","find Path -maxdepth Quantity -empty",y,n,y,n,y,n,y,n
"find all the empty in the current folder do not search in sub directories","find . -maxdepth [quantity] -empty -type d","find Path -maxdepth Quantity -empty -type d",y,n,y,n,n,n,y,n
"Find all executable files under the current directory and below","find . -perm [permission]","find Path -perm Permission",y,n,y,n,y,n,,
"Find all executable files under the current directory and below","find . -perm [permission]","find Path -perm Permission",y,n,y,n,y,n,,
"Find all executable files under the current directory and below","find . -perm [permission] -print","find Path -perm Permission -print",y,n,y,n,y,n,,
"Find all files/directories named 'photoA.jpg' under current directory tree","find . -name ""photoA.jpg""","find Path -name Regex",y,y,y,y,y,y,y,y
"Find all files/directories named 'photoA.jpg' under current directory tree","find . -iname ""photoA.jpg""","find Path -iname Regex",n,n,n,n,n,n,,
"Find all files/directories named 'photoA.jpg' under current directory tree","find . -name ""photoA.jpg"" -print","find Path -name Regex -print",y,y,y,y,y,n,y,y
"Find all files/directories named modules under current directory and list them twice","find . -name ""*"" -ls","find Path -name Regex -ls",n,n,n,n,n,n,,
"Find all files/directories named modules under current directory and list them twice","find . -name ""*"" -exec ls -l {} \;","find Path -name Regex -exec ls -l {} \;",n,n,n,n,n,n,,
"Find all files/directories named modules under current directory and list them twice","find . -name ""*"" | xargs -I {} ls -l {}","find Path -name Regex | xargs -I {} ls -l {}",n,n,n,n,n,n,,
"Find all files/directories owned by user 'michel' under current directory","find . -user ""michel""","find Path -user Regex",y,y,y,y,y,y,y,y
"Find all files/directories owned by user 'michel' under current directory","find . -user ""michel"" -print","find Path -user Regex -print",y,y,y,y,y,y,y,y
"Find all files/directories owned by user 'michel' under current directory","find . -user ""michel"" -exec ls -l {} \;","find Path -user Regex -exec ls -l {} \;",n,n,n,n,n,n,,
"Find all files/directories that are not newer than Jul 01 by modification time","","",n,n,n,n,n,n,,
"Find all files/directories that are not newer than Jul 01 by modification time","","",n,n,n,n,n,n,,
"Find all files/directories that are not newer than Jul 01 by modification time","","",n,n,n,n,n,n,,
"Find all files/directories that are owned by user 'eric' under current directory tree","find . -user ""eric""","find Path -user Regex",y,y,y,y,y,y,y,y
"Find all files/directories that are owned by user 'eric' under current directory tree","find . -user ""eric"" -print","find Path -user Regex -print",y,y,y,y,y,y,y,y
"Find all files/directories that are owned by user 'eric' under current directory tree","find . -user ""eric"" -exec ls -l -s {} \;","find Path -user Regex -exec ls -l -s {} \;",n,n,n,n,n,n,,
"Find all files/directories under $1 which have at least execute permission for their owner and set execute permission for group for these files/directories","find ""$1"" -perm [permission] -exec chmod [permission] {} \;","find Path -perm Permission -exec chmod Permission {} \;",y,n,y,n,y,n,y,n
"Find all files/directories under $1 which have at least execute permission for their owner and set execute permission for group for these files/directories","find ""$1"" -perm [permission] -print0 | xargs -0 -I {} chmod [permission] {}","find Path -perm Permission -print0 | xargs -0 -I {} chmod Permission {}",y,n,y,n,y,n,y,n
"Find all files/directories under $1 which have at least execute permission for their owner and set execute permission for group for these files/directories","find ""$1"" -perm [permission] -exec chmod [permission] {} \;","find Path -perm Permission -exec chmod Permission {} \;",y,n,y,n,y,n,y,n
"Find all files/directories under $1 which have at least read permission for their owner and set read permission for group for these files/directories","find ""$1"" -perm [permission] -exec chmod [permission] {} \;","find Path -perm Permission -exec chmod Permission {} \;",y,n,y,n,y,n,y,n
"Find all files/directories under $1 which have at least read permission for their owner and set read permission for group for these files/directories","find ""$1"" -perm [permission]","find Path -perm Permission",n,n,n,n,n,n,,
"Find all files/directories under $1 which have at least read permission for their owner and set read permission for group for these files/directories","find ""$1"" -perm [permission] -print0 | xargs -0 -I {} chmod [permission] {}","find Path -perm Permission -print0 | xargs -0 -I {} chmod Permission {}",y,n,y,n,y,n,y,n
"Find all files/directories under '/usr' directory tree that have been modified exactly 5 minutes ago","find ""/usr"" -mtime 5m","find Path -mtime Timespan",y,n,y,y,n,n,y,n
"Find all files/directories under '/usr' directory tree that have been modified exactly 5 minutes ago","find ""/usr"" -mtime -5m","find Path -mtime -Timespan",y,n,y,n,n,n,y,n
"Find all files/directories under '/usr' directory tree that have been modified exactly 5 minutes ago","find ""/usr"" -daystart -mtime 5m","find Path -daystart -mtime Timespan",n,n,n,n,n,n,,
"Find all files/directories under '/usr/share/doc' directory tree whose name start with 'README'","find ""/usr/share/doc"" -name ""README""","find Path -name Regex",y,n,y,n,y,n,,
"Find all files/directories under '/usr/share/doc' directory tree whose name start with 'README'","find ""/usr/share/doc"" -iname ""README""","find Path -iname Regex",n,n,n,n,n,n,,
"Find all files/directories under '/usr/share/doc' directory tree whose name start with 'README'","find ""/usr/share/doc"" -name ""README"" -print","find Path -name Regex -print",y,n,y,n,y,n,,
"Find all files/directories under /non-existent/directory directory with ~/bin/find","find ""/non-existent/directory"" -name ""~find""","find Path -name Regex",y,n,y,n,n,n,y,y
"Find all files/directories under /non-existent/directory directory with ~/bin/find","find ""/non-existent/directory"" -iname ""~find""","find Path -iname Regex",y,n,y,n,n,n,y,y
"Find all files/directories under /non-existent/directory directory with ~/bin/find","find ""/non-existent/directory"" -print | xargs -I {} grep ""~find"" {}","find Path -print | xargs -I {} grep Regex {}",n,n,n,n,n,n,,
"Find all files/directories under /var/www/some/subset and change their owner and group to www-data","find ""/var/www/some/subset"" -exec chown [regex] {} \;","find Path -exec chown Regex {} \;",y,n,y,n,y,n,y,n
"Find all files/directories under /var/www/some/subset and change their owner and group to www-data","find ""/var/www/some/subset"" -print0 | xargs -0 -I {} chown [regex] {}","find Path -print0 | xargs -0 -I {} chown Regex {}",y,n,y,n,y,n,,
"Find all files/directories under /var/www/some/subset and change their owner and group to www-data","find ""/var/www/some/subset"" | xargs -I {} chown [regex] {}","find Path | xargs -I {} chown Regex {}",y,n,y,n,y,n,y,n
"Find all files/directories under current directory and put the output into full_backup_dir variable","find . -print0 | xargs -0 -I {} echo ""full_backup_dir"" {}","find Path -print0 | xargs -0 -I {} echo Regex {}",n,n,n,n,n,n,,
"Find all files/directories under current directory and put the output into full_backup_dir variable","find . -print0 | xargs -0 -I {} echo ""full_backup_dir"" [regex] {}","find Path -print0 | xargs -0 -I {} echo Regex Regex {}",n,n,n,n,n,n,,
"Find all files/directories under current directory and put the output into full_backup_dir variable","find . -print0 | xargs -0 -I {} echo ""full_backup_dir"" {}","find Path -print0 | xargs -0 -I {} echo Regex {}",n,n,n,n,n,n,,
"Find all files/directories under current directory that are 10MB in size","find . -size 10M","find Path -size Size",y,y,y,y,y,y,,
"Find all files/directories under current directory that are 10MB in size","find . -size -10M","find Path -size -Size",y,n,y,n,y,n,n,n
"Find all files/directories under current directory that are 10MB in size","find . -size 10M -print","find Path -size Size -print",y,y,y,y,y,y,,
"Find all files/directories under current directory that were modified exactly 30 minutes ago","find . -mtime 30m","find Path -mtime Timespan",y,n,y,y,n,n,y,n
"Find all files/directories under current directory that were modified exactly 30 minutes ago","find . -mtime 30m -print","find Path -mtime Timespan -print",y,n,y,y,n,n,y,n
"Find all files/directories under current directory that were modified exactly 30 minutes ago","find . -daystart -mtime 30m","find Path -daystart -mtime Timespan",n,n,n,n,n,n,,
"Find all files/directories under current directory tree that belong to the group 'compta'","find . -group ""compta""","find Path -group Regex",y,y,y,y,y,y,y,y
"Find all files/directories under current directory tree that belong to the group 'compta'","find . -group ""compta"" -print","find Path -group Regex -print",y,y,y,y,y,y,y,y
"Find all files/directories under current directory tree that belong to the group 'compta'","find . -group ""compta"" -exec echo [regex] [regex] [regex] {} \;","find Path -group Regex -exec echo Regex Regex Regex {} \;",n,n,y,n,n,n,n,n
"Find all files/directories under minimum 1 level down the $FOLDER directory and sort them","find ""$FOLDER"" -mindepth 1 -maxdepth [quantity] | sort","find Path -mindepth Quantity -maxdepth Quantity | sort",n,n,n,n,n,n,,
"Find all files/directories under minimum 1 level down the $FOLDER directory and sort them","find ""$FOLDER"" -mindepth 1 -maxdepth [quantity] -type f | sort","find Path -mindepth Quantity -maxdepth Quantity -type f | sort",n,n,n,n,n,n,,
"Find all files/directories under minimum 1 level down the $FOLDER directory and sort them","find ""$FOLDER"" -mindepth 1 -maxdepth [quantity]","find Path -mindepth Quantity -maxdepth Quantity",n,n,n,n,n,n,,
"Find all files/directories with '.pdf' extension excluding 'pdfs' directory and all of its contents","find "".pdf"" -name ""*.pdfs"" ! -path [regex] ! -path [regex]","find Path -name Regex ! -path Regex ! -path Regex",y,n,y,n,n,n,y,n
"Find all files/directories with '.pdf' extension excluding 'pdfs' directory and all of its contents","find "".pdf"" -name ""*.pdfs"" ! -path [regex] -exec cat {} \;","find Path -name Regex ! -path Regex -exec cat {} \;",n,n,n,n,n,n,,
"Find all files/directories with '.pdf' extension excluding 'pdfs' directory and all of its contents","find "".pdf"" -name ""*.pdfs"" ! -name ""*"" -exec cat {} \;","find Path -name Regex ! -name Regex -exec cat {} \;",n,n,n,n,n,n,,
"Find all files/directories with user id 120 under current directory tree","find . -uid 120","find Path -uid Regex",y,y,y,y,y,y,,
"Find all files/directories with user id 120 under current directory tree","find . -user 120","find Path -user Regex",y,y,y,y,y,y,y,y
"Find all files/directories with user id 120 under current directory tree","find . -gid 120","find Path -gid Regex",n,n,n,n,n,n,,
"find all files ending with ""js.compiled"" in current folder","find . -name ""js.compiled""","find Path -name Regex",y,n,y,n,y,n,,
"find all files ending with ""js.compiled"" in current folder","find . -name ""js.compiled"" -print","find Path -name Regex -print",y,n,y,n,y,n,,
"find all files ending with ""js.compiled"" in current folder","find . -type f -name ""js.compiled""","find Path -type f -name Regex",y,n,y,n,y,n,,
"find all files ending with ""js.compiled"" in current folder and rename them.","find . -type f -name ""js.compiled"" -exec rename [regex] {} \;","find Path -type f -name Regex -exec rename Regex {} \;",y,n,y,n,y,n,y,n
"find all files ending with ""js.compiled"" in current folder and rename them.","find . -name ""js.compiled"" -print0 | xargs -0 -I {} rename [regex] {}","find Path -name Regex -print0 | xargs -0 -I {} rename Regex {}",y,n,y,n,y,n,y,n
"find all files ending with ""js.compiled"" in current folder and rename them.","find . -name ""js.compiled"" -exec rename [regex] {} \;","find Path -name Regex -exec rename Regex {} \;",y,n,y,n,y,n,y,n
"find all the files from root folder which have nogroup or noname and dispaly their details.","find . -inum [quantity] -exec ls -l {} \;","find Path -inum Quantity -exec ls -l {} \;",n,n,n,n,n,n,,
"find all the files from root folder which have nogroup or noname and dispaly their details.","find . -type f -print0 | xargs -0 -I {} ls -l -t -r {} | head -n [quantity]","find Path -type f -print0 | xargs -0 -I {} ls -l -t -r {} | head -n Quantity",n,n,n,n,n,n,,
"find all the files from root folder which have nogroup or noname and dispaly their details.","find . -perm [permission]","find Path -perm Permission",n,n,n,n,n,n,,
"Find all files in /home/kos and below whose names end in "".tmp""","find ""/home/kos"" -name ""*.tmp""","find Path -name Regex",y,y,y,y,y,y,y,y
"Find all files in /home/kos and below whose names end in "".tmp""","find ""/home/kos"" -name ""*.tmp"" | xargs -I {} grep '.*' {}","find Path -name Regex | xargs -I {} grep Regex {}",n,n,n,n,n,n,,
"Find all files in /home/kos and below whose names end in "".tmp""","find ""/home/kos"" -name ""*.tmp"" -exec grep -l '.*' {} + | xargs -I {} grep '.*' {}","find Path -name Regex -exec grep -l Regex {} + | xargs -I {} grep Regex {}",n,n,n,n,n,n,,
"Find all files in /tmp whose names begin with the current user's name followed by "".""","find ""/tmp"" -user [regex] -name "".""","find Path -user Regex -name Regex",n,n,n,n,n,n,,
"Find all files in /tmp whose names begin with the current user's name followed by "".""","find ""/tmp"" -user [regex] -iname "".""","find Path -user Regex -iname Regex",n,n,n,n,n,n,,
"Find all files in /tmp whose names begin with the current user's name followed by "".""","find ""/tmp"" -name "".""","find Path -name Regex",y,n,y,n,y,n,y,n
"find all the files in the /usr folder that have been modified after the file /usr/FirstFile.","find ""/usr"" -newer ""/usr/FirstFile""","find Path -newer File",y,y,y,y,y,y,y,y
"find all the files in the /usr folder that have been modified after the file /usr/FirstFile.","find ""/usr"" -newer ""/usr/FirstFile"" -print","find Path -newer File -print",y,y,y,y,y,y,y,y
"find all the files in the /usr folder that have been modified after the file /usr/FirstFile.","find ""/usr"" -type f -newer ""/usr/FirstFile""","find Path -type f -newer File",y,y,y,y,y,y,y,y
"Find all files in and below all subdirectories of the current directory","find . -mindepth [quantity]","find Path -mindepth Quantity",y,n,y,n,y,n,,
"Find all files in and below all subdirectories of the current directory","find . -mindepth [quantity] -maxdepth [quantity]","find Path -mindepth Quantity -maxdepth Quantity",n,n,n,n,n,n,,
"Find all files in and below all subdirectories of the current directory","find . -mindepth [quantity] -print","find Path -mindepth Quantity -print",y,n,y,n,y,n,,
"Find all files in and below the home directory that have been modified in the last 90 minutes","find . -mtime -90m","find Path -mtime -Timespan",y,n,y,n,n,n,y,n
"Find all files in and below the home directory that have been modified in the last 90 minutes","find . -mtime 90m","find Path -mtime Timespan",n,n,y,n,n,n,n,n
"Find all files in and below the home directory that have been modified in the last 90 minutes","find . -daystart -mtime -90m","find Path -daystart -mtime -Timespan",n,n,n,n,n,n,,
"find all the files in the current directory and search for the word ""pw0"" in them.","find | xargs -I {} grep ""pw0"" {}","find | xargs -I {} grep Regex {}",y,n,y,n,y,y,n,n
"find all the files in the current directory and search for the word ""pw0"" in them.","find . -exec grep ""pw0"" {} \;","find Path -exec grep Regex {} \;",y,n,y,n,y,y,n,n
"find all the files in the current directory and search for the word ""pw0"" in them.","find | xargs -I {} grep -i ""pw0"" {}","find | xargs -I {} grep -i Regex {}",n,n,n,n,n,n,,
"Find all files in the current directory recursively that were last modified more than 5 days ago","find . -mtime +5","find Path -mtime +Timespan",y,y,y,y,y,y,,
"Find all files in the current directory recursively that were last modified more than 5 days ago","find . -mtime +5 -print","find Path -mtime +Timespan -print",y,y,y,y,y,y,,
"Find all files in the current directory recursively that were last modified more than 5 days ago","find . -name ""*"" -mtime +5","find Path -name Regex -mtime +Timespan",y,y,y,y,y,y,y,y
"Find all files in the current directory recursively with ""linkin park"" in their names and copy them to /Users/tommye/Desktop/LP","find . -iname ""linkin park"" -exec cp {} ""/Users/tommye/Desktop/LP"" \;","find Path -iname Regex -exec cp {} File \;",n,n,n,n,n,n,,
"Find all files in the current directory recursively with ""linkin park"" in their names and copy them to /Users/tommye/Desktop/LP","find . -iname ""linkin park"" | xargs --replace=[regex] -I {} cp [file] ""/Users/tommye/Desktop/LP"" {}","find Path -iname Regex | xargs --replace Regex -I {} cp File File {}",n,n,n,n,n,n,,
"Find all files in the current directory recursively with ""linkin park"" in their names and copy them to /Users/tommye/Desktop/LP","find . -name ""linkin park"" | xargs -I {} cp -a {} ""/Users/tommye/Desktop/LP""","find Path -name Regex | xargs -I {} cp -a {} File",n,n,y,n,n,n,n,n
"find all files in the current directory that are less than 1 byte size","find . -size -1c","find Path -size -Size",y,y,y,y,y,y,,
"find all files in the current directory that are less than 1 byte size","find . -size -1c -print","find Path -size -Size -print",y,y,y,y,y,y,,
"find all files in the current directory that are less than 1 byte size","find . -type f -size -1c","find Path -type f -size -Size",y,y,y,y,y,y,y,y
"Find all files in current directory that were modified less than 1 day ago excluding hidden files  and archive them and put the output into the variable file_changed","find . -depth -wholename ""file_changed"" -prune -or -mtime -1 -print0","find Path -depth -wholename Regex -prune -or -mtime -Timespan -print0",n,n,n,n,n,n,,
"Find all files in current directory that were modified less than 1 day ago excluding hidden files  and archive them and put the output into the variable file_changed","find . -depth -wholename ""file_changed"" -prune -or -mtime -1 -print","find Path -depth -wholename Regex -prune -or -mtime -Timespan -print",n,n,n,n,n,n,,
"Find all files in current directory that were modified less than 1 day ago excluding hidden files  and archive them and put the output into the variable file_changed","find . -depth -wholename [regex] -prune -or -mtime -1 -print0 | xargs -0 -I {} tar -c -v -f ""file_changed"" {}","find Path -depth -wholename Regex -prune -or -mtime -Timespan -print0 | xargs -0 -I {} tar -c -v -f File {}",n,n,n,n,n,n,,
"find all the files in the current directory that have the word ""lib"" in them","find . -name ""lib""","find Path -name Regex",n,n,n,n,n,n,,
"find all the files in the current directory that have the word ""lib"" in them","find ""lib"" -exec grep '.*' {} \;","find Path -exec grep Regex {} \;",n,n,n,n,n,n,,
"find all the files in the current directory that have the word ""lib"" in them","find . -name ""*"" | xargs -I {} grep ""lib"" {}","find Path -name Regex | xargs -I {} grep Regex {}",n,n,n,n,n,n,,
"find all the files in the current directory whose size is equal to exactly 126MB.","find . -size 126M","find Path -size Size",y,y,y,y,y,y,,
"find all the files in the current directory whose size is equal to exactly 126MB.","find . -size 126M -print","find Path -size Size -print",y,y,y,y,y,y,,
"find all the files in the current directory whose size is equal to exactly 126MB.","find . -type f -size 126M -exec du -S -h {} + | sort -r -h | head -n [quantity]","find Path -type f -size Size -exec du -S -h {} + | sort -r -h | head -n Quantity",n,n,n,n,n,n,,
"find all the files in current folder ending with ""ini"" and search for a word in all these files","find . -name ""*.ini"" -exec grep '.*' {} \;","find Path -name Regex -exec grep Regex {} \;",y,n,y,n,y,n,y,n
"find all the files in current folder ending with ""ini"" and search for a word in all these files","find . -name ""*.ini"" | xargs -I {} grep '.*' {}","find Path -name Regex | xargs -I {} grep Regex {}",y,n,y,n,y,n,y,n
"find all the files in current folder ending with ""ini"" and search for a word in all these files","find . -name ""*.ini"" -print0 | xargs -0 -I {} grep '.*' {}","find Path -name Regex -print0 | xargs -0 -I {} grep Regex {}",y,n,y,n,y,n,y,n
"find all the files in the current folder that are modified after the modification date of a file","find . -newer [file]","find Path -newer File",y,n,y,y,y,n,y,n
"find all the files in the current folder that are modified after the modification date of a file","find . -newer [file] -print","find Path -newer File -print",y,n,y,y,y,n,y,n
"find all the files in the current folder that are modified after the modification date of a file","find . -newer [file] -and ! -newer [file]","find Path -newer File -and ! -newer File",n,n,n,n,n,n,,
"find all files in current folder which are more than 300MB","find . -size +300M","find Path -size +Size",y,y,y,y,y,y,,
"find all files in current folder which are more than 300MB","find . -type f -size +300M","find Path -type f -size +Size",y,y,y,y,y,y,y,y
"find all files in current folder which are more than 300MB","find . -size +300M -print","find Path -size +Size -print",y,y,y,y,y,y,,
"find all the files in the current folder which are readable","find . -type f","find Path -type f",n,n,n,n,n,n,,
"find all the files in the current folder which are readable","find . .","find Path Path",n,n,n,n,y,n,n,n
"find all the files in the current folder which are readable","find . -type f -regex [regex]","find Path -type f -regex Regex",n,n,n,n,n,n,,
"find all files in the current folder which have not been changed in the last 48 hours","find . -ctime +48h","find Path -ctime +Timespan",y,n,y,y,n,n,y,n
"find all files in the current folder which have not been changed in the last 48 hours","find . -mtime +48h -print","find Path -mtime +Timespan -print",y,n,y,y,n,n,y,n
"find all files in the current folder which have not been changed in the last 48 hours","find . -mtime +48h","find Path -mtime +Timespan",y,n,y,y,n,n,y,n
"find all files in the file system which are modified after the file /tmp/checkpoint","find . -newer ""/tmp/checkpoint""","find Path -newer File",y,y,y,n,y,y,y,y
"find all files in the file system which are modified after the file /tmp/checkpoint","find . -newer ""/tmp/checkpoint"" -print","find Path -newer File -print",y,y,y,n,y,y,y,y
"find all files in the file system which are modified after the file /tmp/checkpoint","find . -newer ""/tmp/checkpoint"" | xargs -I {} ls -l {}","find Path -newer File | xargs -I {} ls -l {}",n,n,n,n,n,n,,
"find all the files in the file system which hae set uid enabled and save them to /root/suid.txt and those which have size greater than 100MB save them to /root/big.txt","find ""/root/suid.txt"" \( -perm -uid -fprintf ""/root/big.txt"" __SP__UNK \) -and \( -size +100M -fprintf [file] '%-10s %p\n' \)","find Path \( -perm -Permission -fprintf File __SP__UNK \) -and \( -size +Size -fprintf File '%-10s %p\n' \)",y,n,n,n,y,n,y,y
"find all the files in the file system which hae set uid enabled and save them to /root/suid.txt and those which have size greater than 100MB save them to /root/big.txt","find ""/root/suid.txt"" \( -perm -uid -fprintf ""/root/big.txt"" __SP__UNK \) -and \( -size +100M -fprintf [file] __SP__UNK \)","find Path \( -perm -Permission -fprintf File __SP__UNK \) -and \( -size +Size -fprintf File __SP__UNK \)",y,n,n,n,y,n,y,y
"find all the files in the file system which hae set uid enabled and save them to /root/suid.txt and those which have size greater than 100MB save them to /root/big.txt","find ""/root/suid.txt"" \( -perm -uid -fprintf ""/root/big.txt"" __SP__UNK \) -and -size +100M -exec ls -l {} \;","find Path \( -perm -Permission -fprintf File __SP__UNK \) -and -size +Size -exec ls -l {} \;",n,n,n,n,n,n,,
"find all the files in the folder /home which are exactly of size 10MB","find ""/home"" -size 10M","find Path -size Size",y,y,y,y,y,y,y,y
"find all the files in the folder /home which are exactly of size 10MB","find ""/home"" -type f -size 10M","find Path -type f -size Size",y,y,y,y,y,y,y,y
"find all the files in the folder /home which are exactly of size 10MB","find ""/home"" -type f -size 10M | xargs -I {} du -s -h {}","find Path -type f -size Size | xargs -I {} du -s -h {}",n,n,n,n,n,n,,
"Find all files in maximum 2 levels down the current directory","find . -maxdepth 2 -type f","find Path -maxdepth Quantity -type f",y,y,y,y,y,y,,
"Find all files in maximum 2 levels down the current directory","find . -mindepth 2 -maxdepth [quantity]","find Path -mindepth Quantity -maxdepth Quantity",y,n,y,n,y,n,y,n
"Find all files in maximum 2 levels down the current directory","find . -mindepth 2 -maxdepth [quantity] -type f","find Path -mindepth Quantity -maxdepth Quantity -type f",y,n,y,n,y,n,y,n
"Finds all files like ""mylog*.log"" newer than $2 and archives them with bzip2.","find ""mylog*.log"" -name ""*"" -newer ""$2"" -exec tar -u -v -f ""bzip2"" {} \;","find Path -name Regex -newer File -exec tar -u -v -f File {} \;",n,n,n,n,n,n,,
"Finds all files like ""mylog*.log"" newer than $2 and archives them with bzip2.","find ""mylog*.log"" -name ""*"" -newer ""$2"" | xargs -I {} tar -u -v -f ""bzip2"" {}","find Path -name Regex -newer File | xargs -I {} tar -u -v -f File {}",n,n,n,n,n,n,,
"Finds all files like ""mylog*.log"" newer than $2 and archives them with bzip2.","find ""mylog*.log"" -name ""*"" -newer ""$2"" -exec tar -u -f ""bzip2"" {} \;","find Path -name Regex -newer File -exec tar -u -f File {} \;",n,n,n,n,n,n,,
"Find all files name passwd in the root directory and all its sub-directories.","find . -name ""*""","find Path -name Regex",y,n,y,n,y,n,,
"Find all files name passwd in the root directory and all its sub-directories.","find . -type f -name ""*""","find Path -type f -name Regex",y,n,y,n,y,n,y,n
"Find all files name passwd in the root directory and all its sub-directories.","find . -iname [regex]","find Path -iname Regex",n,n,n,n,n,n,,
"find all the files starting with ""config"" in the folder Symfony","find . -name ""config""","find Path -name Regex",y,n,y,n,y,n,,
"find all the files starting with ""config"" in the folder Symfony","find . -iname ""config""","find Path -iname Regex",y,n,n,n,y,n,y,n
"find all the files starting with ""config"" in the folder Symfony","find . -type f -name ""config""","find Path -type f -name Regex",y,n,y,n,y,n,y,n
"find all the files that are modified in the last 1 day","find . -mtime -1","find Path -mtime -Timespan",y,y,y,y,y,y,,
"find all the files that are modified in the last 1 day","find . -daystart -mtime -1","find Path -daystart -mtime -Timespan",y,y,n,n,y,y,y,y
"find all the files that are modified in the last 1 day","find . -type f -mtime -1","find Path -type f -mtime -Timespan",y,y,y,y,n,n,y,y
"find all the files that have been changed today","","",n,n,n,n,n,n,,
"find all the files that have been changed today","","",n,n,n,n,n,n,,
"find all the files that have been changed today","","",n,n,n,n,n,n,,
"find all files that have been used more than two days since their status was last changed","find . -mtime +2","find Path -mtime +Timespan",n,n,n,n,n,n,y,y
"find all files that have been used more than two days since their status was last changed","find . -ctime +2","find Path -ctime +Timespan",n,n,n,n,n,n,y,y
"find all files that have been used more than two days since their status was last changed","find . -mtime +2 -print","find Path -mtime +Timespan -print",n,n,n,n,n,n,y,y
"Find all files that belongs to group Developer under /home directory","find ""/home"" -group [regex]","find Path -group Regex",y,n,y,n,y,n,,
"Find all files that belongs to group Developer under /home directory","find ""/home"" -group [regex] -print","find Path -group Regex -print",y,n,y,n,y,n,,
"Find all files that belongs to group Developer under /home directory","find ""/home"" -group [regex] -exec grep '.*' {} \; -print","find Path -group Regex -exec grep Regex {} \; -print",n,n,n,n,n,n,,
"Find all files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory without descending into other partitions","find ""/"" -maxdepth 1 -xdev -type f | xargs -I {} grep -F ""stringtofind"" {}","find Path -maxdepth Quantity -xdev -type f | xargs -I {} grep -F Regex {}",n,n,n,n,n,n,,
"Find all files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory without descending into other partitions","find ""/"" -maxdepth 1 -xdev -type f -print0 | xargs -0 -I {} grep -i ""stringtofind"" {}","find Path -maxdepth Quantity -xdev -type f -print0 | xargs -0 -I {} grep -i Regex {}",y,y,y,y,n,n,y,y
"Find all files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory without descending into other partitions","find ""/"" -mindepth 1 -maxdepth [quantity] -type f | xargs -I {} grep -F ""stringtofind"" {}","find Path -mindepth Quantity -maxdepth Quantity -type f | xargs -I {} grep -F Regex {}",n,n,n,n,n,n,,
"Find all files under $source_dir that match the regex .*\.\(avi\|wmv\|flv\|mp4\) in their paths and print them with null character as the delimiter","","",n,n,n,n,n,n,,
"Find all files under $source_dir that match the regex .*\.\(avi\|wmv\|flv\|mp4\) in their paths and print them with null character as the delimiter","","",n,n,n,n,n,n,,
"Find all files under $source_dir that match the regex .*\.\(avi\|wmv\|flv\|mp4\) in their paths and print them with null character as the delimiter","","",n,n,n,n,n,n,,
"Find all files under ${searchpath} that match the regex '""${string1}"".*""${string2}"".*""${string3}""' (${string1} ... won't be expanded) in their contents","find ""${searchpath}"" -type f -exec grep -l ""${string1}----${string2}----${string3}"" {} \;","find Path -type f -exec grep -l Regex {} \;",y,y,y,n,y,y,y,y
"Find all files under ${searchpath} that match the regex '""${string1}"".*""${string2}"".*""${string3}""' (${string1} ... won't be expanded) in their contents","find ""${searchpath}"" -type f | xargs -I {} grep ""${string1}----${string2}----${string3}"" {}","find Path -type f | xargs -I {} grep Regex {}",y,y,n,n,y,y,y,y
"Find all files under ${searchpath} that match the regex '""${string1}"".*""${string2}"".*""${string3}""' (${string1} ... won't be expanded) in their contents","find ""${searchpath}"" -type f | grep -E ""${string1}----${string2}----${string3}""","find Path -type f | grep -E Regex",n,n,n,n,n,n,,
"Find all files under and below the current working directory with the word California in the file (case insensitive), and count the number of lines in the output","find . -type f -exec grep -i -l '.*' {} \; | wc -l","find Path -type f -exec grep -i -l Regex {} \; | wc -l",y,n,y,n,y,y,y,n
"Find all files under and below the current working directory with the word California in the file (case insensitive), and count the number of lines in the output","find . -type f -print0 | xargs -0 -I {} wc -l {}","find Path -type f -print0 | xargs -0 -I {} wc -l {}",n,n,n,n,n,n,,
"Find all files under and below the current working directory with the word California in the file (case insensitive), and count the number of lines in the output","find . -type f -print0 | xargs -0 -L [quantity] -I {} wc -l {}","find Path -type f -print0 | xargs -0 -L Quantity -I {} wc -l {}",n,n,n,n,n,n,,
"Find all files under current directory","find . -type f","find Path -type f",y,y,y,y,y,y,y,y
"Find all files under current directory","find . -type f -print","find Path -type f -print",y,y,y,y,y,y,y,y
"Find all files under current directory","find . -type f -print0 | xargs -0 -I {} file {}","find Path -type f -print0 | xargs -0 -I {} file {}",n,n,y,y,n,n,n,n
"Find all files under current directory and set read-write permission for owner and group and no permission for other for those directories","find . -type f -exec chmod [permission] {} \;","find Path -type f -exec chmod Permission {} \;",y,n,y,n,y,n,,
"Find all files under current directory and set read-write permission for owner and group and no permission for other for those directories","find . -type f -exec chmod [permission] {} +","find Path -type f -exec chmod Permission {} +",y,n,y,n,y,n,y,n
"Find all files under current directory and set read-write permission for owner and group and no permission for other for those directories","find . -type f -print0 | xargs -0 -I {} chmod [permission] {}","find Path -type f -print0 | xargs -0 -I {} chmod Permission {}",y,n,y,n,y,n,y,n
"Find all files under the current directory whose filenames are not ""file.txt"", ignoring the case","find . -type f -not -iname ""file.txt""","find Path -type f -not -iname Regex",y,y,y,y,y,n,y,y
"Find all files under the current directory whose filenames are not ""file.txt"", ignoring the case","find . -type f ! -iname ""file.txt"" ! -iname [regex]","find Path -type f ! -iname Regex ! -iname Regex",y,n,y,n,n,n,y,n
"Find all files under the current directory whose filenames are not ""file.txt"", ignoring the case","find . -type f \( -iname [regex] ! -iname ""file.txt"" \)","find Path -type f \( -iname Regex ! -iname Regex \)",y,n,y,n,n,n,y,n
"Find all files under media/ directory and change their permission to 600","find ""media/"" -type f -exec chmod 600 {} \;","find Path -type f -exec chmod Permission {} \;",y,y,y,y,y,y,y,y
"Find all files under media/ directory and change their permission to 600","find ""media/"" -type f -exec chmod 600 {} +","find Path -type f -exec chmod Permission {} +",y,y,y,y,y,y,y,y
"Find all files under media/ directory and change their permission to 600","find ""media/"" -type f -print0 | xargs -0 -I {} chmod 600 {}","find Path -type f -print0 | xargs -0 -I {} chmod Permission {}",y,y,y,y,y,y,y,y
"Find all files whose permission are 777","find . -type f -perm 777 -print","find Path -type f -perm Permission -print",y,y,y,y,y,n,y,y
"Find all files whose permission are 777","find . -perm 777","find Path -perm Permission",y,y,y,y,y,n,y,y
"Find all files whose permission are 777","find . -type f -perm 777","find Path -type f -perm Permission",y,y,y,y,y,n,y,y
"Find all files with '.conf' extension under '/etc' directory tree that have been modified in the last 30 minutes","find ""/etc"" -mtime -30m -name "".conf""","find Path -mtime -Timespan -name Regex",y,n,y,n,n,n,y,n
"Find all files with '.conf' extension under '/etc' directory tree that have been modified in the last 30 minutes","find ""/etc"" -name "".conf"" -mtime -30m","find Path -name Regex -mtime -Timespan",y,n,y,n,n,n,y,n
"Find all files with '.conf' extension under '/etc' directory tree that have been modified in the last 30 minutes","find ""/etc"" -mtime -30m -name "".conf"" -print","find Path -mtime -Timespan -name Regex -print",y,n,y,n,n,n,y,n
"Find all files with '.txt' extension under '/home/my_dir' dirctory tree and display the number of lines in these files","find ""/home/my_dir"" -name ""*.txt"" | xargs -I {} wc -l {}","find Path -name Regex | xargs -I {} wc -l {}",y,y,y,y,y,y,n,n
"Find all files with '.txt' extension under '/home/my_dir' dirctory tree and display the number of lines in these files","find ""/home/my_dir"" -name ""*.txt"" -print0 | xargs -0 -I {} wc -l {}","find Path -name Regex -print0 | xargs -0 -I {} wc -l {}",y,y,y,y,y,y,y,y
"Find all files with '.txt' extension under '/home/my_dir' dirctory tree and display the number of lines in these files","find ""/home/my_dir"" -name ""*.txt"" -exec wc -l {} \;","find Path -name Regex -exec wc -l {} \;",y,y,y,y,y,y,y,y
"Find all fonts (in '/usr/local/fonts') that belong to the user 'warwick'","find . -user ""warwick"" -perm [permission] -print","find Path -user Regex -perm Permission -print",n,n,n,n,n,n,,
"Find all fonts (in '/usr/local/fonts') that belong to the user 'warwick'","find . -user ""warwick"" -perm [permission]","find Path -user Regex -perm Permission",n,n,n,n,n,n,,
"Find all fonts (in '/usr/local/fonts') that belong to the user 'warwick'","find . -user [regex] -iname ""warwick""","find Path -user Regex -iname Regex",y,n,y,n,n,n,y,n
"find all the jpg files in current folder and sort them","find . -name ""*.jpg"" | sort -r","find Path -name Regex | sort -r",n,n,n,n,n,n,,
"find all the jpg files in current folder and sort them","find . -name ""*.jpg"" | sort","find Path -name Regex | sort",y,y,y,y,n,n,y,y
"find all the jpg files in current folder and sort them","find . -name ""*.jpg"" | sort -t [regex] -n -r","find Path -name Regex | sort -t Regex -n -r",n,n,n,n,n,n,,
"find all of the files that are readable","find . -type f","find Path -type f",n,n,n,n,n,n,,
"find all of the files that are readable","find . -perm [permission]","find Path -perm Permission",y,n,y,n,y,n,y,n
"find all of the files that are readable","find . -type f -print","find Path -type f -print",n,n,n,n,n,n,,
"find all the ogg files in the current directory which have the word ""monfichier"" in their name","find . -name ""*.ogg"" | grep ""monfichier""","find Path -name Regex | grep Regex",y,y,y,n,y,y,y,y
"find all the ogg files in the current directory which have the word ""monfichier"" in their name","find . -name ""*.ogg"" | xargs -I {} grep ""monfichier"" {}","find Path -name Regex | xargs -I {} grep Regex {}",n,n,n,n,n,n,,
"find all the ogg files in the current directory which have the word ""monfichier"" in their name","find . -name ""*.ogg"" -print0 | xargs -0 -I {} grep ""monfichier"" {}","find Path -name Regex -print0 | xargs -0 -I {} grep Regex {}",n,n,n,n,n,n,,
"find all the perl files in /var/www","find ""/var/www"" -name ""*""","find Path -name Regex",y,n,y,n,y,n,y,n
"find all the perl files in /var/www","find ""/var/www"" -type f -name ""*""","find Path -type f -name Regex",y,n,y,n,y,n,,
"find all the perl files in /var/www","find ""/var/www"" -type f \( -name ""*"" -or -name ""*"" -or -name ""*"" \)","find Path -type f \( -name Regex -or -name Regex -or -name Regex \)",y,n,y,n,n,n,y,n
"Finds all php processes running in system.","find ""php"" -type f -iname [regex]","find Path -type f -iname Regex",n,n,n,n,n,n,,
"Finds all php processes running in system.","find ""php"" -type f \( -iname [regex] -or -iname [regex] \)","find Path -type f \( -iname Regex -or -iname Regex \)",n,n,n,n,n,n,,
"Finds all php processes running in system.","find ""php"" -type f \( -iname [regex] -or -iname [regex] -or -iname [regex] \)","find Path -type f \( -iname Regex -or -iname Regex -or -iname Regex \)",n,n,n,n,n,n,,
"find all the png files in the current folder which begin with the word image","find . -name ""*.png""","find Path -name Regex",y,n,y,n,y,n,,
"find all the png files in the current folder which begin with the word image","find . -name ""*.png"" | xargs -I {} grep '.*' {}","find Path -name Regex | xargs -I {} grep Regex {}",n,n,n,n,n,n,,
"find all the png files in the current folder which begin with the word image","find . -name ""*.png"" -exec grep -l '.*' {} \;","find Path -name Regex -exec grep -l Regex {} \;",n,n,n,n,n,n,,
"Find all README's in /usr/share","find ""/usr/share"" -name ""*""","find Path -name Regex",y,n,y,n,y,n,,
"Find all README's in /usr/share","find ""/usr/share"" -type f -name ""*""","find Path -type f -name Regex",y,n,y,n,y,n,y,n
"Find all README's in /usr/share","find ""/usr/share"" -type f -iname [regex]","find Path -type f -iname Regex",y,n,y,n,y,n,y,n
"Find all regular files in current directory and /home/www directory","find ""/home/www"" -type f \( -name ""*"" -or -name ""*"" \)","find Path -type f \( -name Regex -or -name Regex \)",n,n,n,n,n,n,,
"Find all regular files in current directory and /home/www directory","find ""/home/www"" -type f \( -name ""*"" -or -name ""*"" -or -name ""*"" \)","find Path -type f \( -name Regex -or -name Regex -or -name Regex \)",n,n,n,n,n,n,,
"Find all regular files in current directory and /home/www directory","find ""/home/www"" -type f \( -iname [regex] -or -iname [regex] \)","find Path -type f \( -iname Regex -or -iname Regex \)",n,n,n,n,n,n,,
"Find all regular files in the current directory tree and count them","find . -type f | wc -l","find Path -type f | wc -l",y,y,y,y,y,y,,
"Find all regular files in the current directory tree and count them","find | wc -l -type f","find | wc -l File File",n,n,n,n,n,n,,
"Find all regular files in the current directory tree and count them","find . -type f -printf __SP__UNK | wc -l","find Path -type f -printf __SP__UNK | wc -l",y,n,y,n,y,n,y,n
"Find all regular files named postgis-2.0.0 under current directory","find . -type f -name ""postgis-2.0.0""","find Path -type f -name Regex",y,y,y,y,y,y,,
"Find all regular files named postgis-2.0.0 under current directory","find . -name ""postgis-2.0.0"" -type f","find Path -name Regex -type f",y,y,y,y,y,y,y,y
"Find all regular files named postgis-2.0.0 under current directory","find . -name ""postgis-2.0.0"" -type f -print","find Path -name Regex -type f -print",y,y,y,y,y,y,y,y
"Find all regular files that reside in the current directory tree and were last modified more than 5 days ago","find . -type f -mtime +5","find Path -type f -mtime +Timespan",y,y,y,y,y,y,,
"Find all regular files that reside in the current directory tree and were last modified more than 5 days ago","find . -maxdepth [quantity] -type f -mtime +5","find Path -maxdepth Quantity -type f -mtime +Timespan",n,n,n,n,n,n,,
"Find all regular files that reside in the current directory tree and were last modified more than 5 days ago","find . -type f -daystart -mtime +5","find Path -type f -daystart -mtime +Timespan",n,n,n,n,n,n,,
"Find all regular files under ${S} directory","find ""${S}"" -type f","find Path -type f",y,y,y,y,y,y,,
"Find all regular files under ${S} directory","find ""${S}"" -maxdepth [quantity] -type f","find Path -maxdepth Quantity -type f",n,n,n,n,n,n,,
"Find all regular files under ${S} directory","find ""${S}"" -mindepth [quantity] -type f","find Path -mindepth Quantity -type f",y,n,y,n,y,n,y,n
"Find all regular files whose names contain a case insensitive pattern composed of space separated positional arguments and display a long listing of them","find . -type f -iname [regex] -exec ls {} \;","find Path -type f -iname Regex -exec ls {} \;",n,n,n,n,n,n,,
"Find all regular files whose names contain a case insensitive pattern composed of space separated positional arguments and display a long listing of them","find . -type f -iname [regex] -ls | xargs -I {} ls -l {}","find Path -type f -iname Regex -ls | xargs -I {} ls -l {}",n,n,n,n,n,n,,
"Find all regular files whose names contain a case insensitive pattern composed of space separated positional arguments and display a long listing of them","find . -type f -iname [regex] -exec ls -l {} \;","find Path -type f -iname Regex -exec ls -l {} \;",y,n,y,n,y,n,y,n
"Find all SUID set files under current directory and show a few lines of output from the beginning","find . -perm suid | head","find Path -perm Permission | head",y,n,n,n,y,n,y,n
"Find all SUID set files under current directory and show a few lines of output from the beginning","find . -perm +suid | head","find Path -perm +Permission | head",n,n,n,n,n,n,,
"Find all SUID set files under current directory and show a few lines of output from the beginning","find . -perm -suid | head","find Path -perm -Permission | head",y,n,n,n,y,n,y,n
"find all text files in the current folder","find . -name ""*""","find Path -name Regex",y,n,y,n,y,n,,
"find all text files in the current folder","find . -name ""*"" -print","find Path -name Regex -print",y,n,y,n,y,n,,
"find all text files in the current folder","find . -type f -name ""*""","find Path -type f -name Regex",y,n,y,n,y,n,,
"find all text files in current folder and delete all the files that have the word foo in their name","find . -name ""*"" | xargs -I {} rm {}","find Path -name Regex | xargs -I {} rm {}",n,n,y,n,n,n,n,n
"find all text files in current folder and delete all the files that have the word foo in their name","find . -name ""*"" -exec rm {} \;","find Path -name Regex -exec rm {} \;",n,n,y,n,n,n,n,n
"find all text files in current folder and delete all the files that have the word foo in their name","find . -name ""*"" -print0 | xargs -0 -I {} rm {}","find Path -name Regex -print0 | xargs -0 -I {} rm {}",n,n,y,n,n,n,n,n
"find all the text files that have modified in the last 2 days and not modified today","","",n,n,n,n,n,n,,
"find all the text files that have modified in the last 2 days and not modified today","","",n,n,n,n,n,n,,
"find all the text files that have modified in the last 2 days and not modified today","","",n,n,n,n,n,n,,
"Find all TXT files that belong to user root","find . -user [regex] -iname ""*.txt""","find Path -user Regex -iname Regex",y,n,y,n,y,n,,
"Find all TXT files that belong to user root","find . -user [regex] -name ""*.txt""","find Path -user Regex -name Regex",y,n,y,n,y,n,,
"Find all TXT files that belong to user root","find . -user [regex] -type f -name ""*.txt""","find Path -user Regex -type f -name Regex",y,n,y,n,y,n,y,n
"Find and delete all .zip files in the current directory tree","find . -name "".zip"" | xargs -I {} rm -r -f {}","find Path -name Regex | xargs -I {} rm -r -f {}",y,n,y,n,n,n,y,n
"Find and delete all .zip files in the current directory tree","find . -name "".zip"" | xargs -I {} rm {}","find Path -name Regex | xargs -I {} rm {}",y,n,y,n,y,n,n,n
"Find and delete all .zip files in the current directory tree","find . -name "".zip"" -print0 | xargs -0 -I {} rm -r -f {}","find Path -name Regex -print0 | xargs -0 -I {} rm -r -f {}",y,n,y,n,n,n,y,n
"Find and remove the .rhosts file in the /home directory tree","find ""/home"" -name "".rhosts"" | xargs -I {} rm {}","find Path -name Regex | xargs -I {} rm {}",y,y,y,y,y,y,n,n
"Find and remove the .rhosts file in the /home directory tree","find ""/home"" -name "".rhosts"" | xargs -I {} rm -f {}","find Path -name Regex | xargs -I {} rm -f {}",y,y,y,y,y,y,n,n
"Find and remove the .rhosts file in the /home directory tree","find ""/home"" -type f -name "".rhosts"" -exec rm -f {} \;","find Path -type f -name Regex -exec rm -f {} \;",y,y,y,y,y,y,y,y
"this find command Substitute space with underscore in the file name replaces space in all the *.mp3 files with _","find . -name ""*.mp3"" -print0 | xargs -0 -I {} rename ""_"" {}","find Path -name Regex -print0 | xargs -0 -I {} rename Regex {}",y,n,n,n,y,n,y,y
"this find command Substitute space with underscore in the file name replaces space in all the *.mp3 files with _","find . -name ""*.mp3"" | xargs -I {} grep ""_"" {}","find Path -name Regex | xargs -I {} grep Regex {}",n,n,n,n,n,n,,
"this find command Substitute space with underscore in the file name replaces space in all the *.mp3 files with _","find . -name ""*.mp3"" | xargs -I {} rename ""_"" {}","find Path -name Regex | xargs -I {} rename Regex {}",y,n,n,n,y,n,y,y
"find directories in the folder /usr/spool/uucp","find ""/usr/spool/uucp"" -type d","find Path -type d",y,y,y,y,y,y,y,y
"find directories in the folder /usr/spool/uucp","find ""/usr/spool/uucp"" -type d -name ""*""","find Path -type d -name Regex",y,y,y,y,y,y,y,y
"find directories in the folder /usr/spool/uucp","find ""/usr/spool/uucp"" -type d \( -name ""*"" -or -name ""*"" -or -name ""*"" \) -print","find Path -type d \( -name Regex -or -name Regex -or -name Regex \) -print",y,y,y,y,n,n,y,y
"Find empty regular files in /dir and its subdirectories","find ""/dir"" -type f -empty","find Path -type f -empty",y,y,y,y,y,y,y,y
"Find empty regular files in /dir and its subdirectories","find ""/dir"" -maxdepth [quantity] -type f -empty","find Path -maxdepth Quantity -type f -empty",n,n,n,n,n,n,,
"Find empty regular files in /dir and its subdirectories","find ""/dir"" . -type f -empty","find Path Path -type f -empty",n,n,n,n,n,n,,
"Find every JavaScript file in the wordpress directory","find . -name ""*""","find Path -name Regex",n,n,y,n,n,n,n,n
"Find every JavaScript file in the wordpress directory","find . -type f -name ""*""","find Path -type f -name Regex",y,n,y,n,n,n,y,n
"Find every JavaScript file in the wordpress directory","find . -iname [regex]","find Path -iname Regex",n,n,y,n,n,n,n,n
"find the file ""filename.txt"" in the usr folder","find . -name ""filename.txt""","find Path -name Regex",y,n,y,n,y,n,,
"find the file ""filename.txt"" in the usr folder","find . -iname ""filename.txt""","find Path -iname Regex",n,n,n,n,n,n,,
"find the file ""filename.txt"" in the usr folder","find . -type f -name ""filename.txt""","find Path -type f -name Regex",y,n,y,n,y,n,y,y
"Find files/directories named 'filename' in the entire filesystem","find . -name ""filename""","find Path -name Regex",y,n,y,n,y,n,,
"Find files/directories named 'filename' in the entire filesystem","find . -iname ""filename""","find Path -iname Regex",n,n,n,n,n,n,,
"Find files/directories named 'filename' in the entire filesystem","find . -fstype __SP__UNK -name ""filename""","find Path -fstype __SP__UNK -name Regex",n,n,n,n,n,n,,
"Find files/directories named 'photo.jpg' in the entire filesystem","find . -name ""photo.jpg""","find Path -name Regex",y,n,y,n,y,n,,
"Find files/directories named 'photo.jpg' in the entire filesystem","find . -iname ""photo.jpg""","find Path -iname Regex",n,n,n,n,n,n,,
"Find files/directories named 'photo.jpg' in the entire filesystem","find . \( -name ""photo.jpg"" -or -name ""*"" \)","find Path \( -name Regex -or -name Regex \)",y,n,y,n,n,n,y,n
"Find files/directories named 'somename.txt' under current directory tree","find . -name ""somename.txt""","find Path -name Regex",y,y,y,y,y,y,y,y
"Find files/directories named 'somename.txt' under current directory tree","find . -iname ""somename.txt""","find Path -iname Regex",n,n,n,n,n,n,,
"Find files/directories named 'somename.txt' under current directory tree","find . \( -name ""somename.txt"" -or -name ""*"" \)","find Path \( -name Regex -or -name Regex \)",y,n,y,n,n,n,y,n
"Find files in the current directory tree whose names begin with ""file"" and whose size is 0, and remove them","find . -name ""file"" | head - 0 | xargs -I {} rm {}","find Path -name Regex | head - Quantity | xargs -I {} rm {}",n,n,n,n,n,n,,
"Find files in the current directory tree whose names begin with ""file"" and whose size is 0, and remove them","find . -name ""file"" | head -n 0 | xargs -I {} rm {}","find Path -name Regex | head -n Quantity | xargs -I {} rm {}",n,n,n,n,n,n,,
"Find files in the current directory tree whose names begin with ""file"" and whose size is 0, and remove them","find . -name ""file"" | head - 0 | xargs -I {} rm -r -f {}","find Path -name Regex | head - Quantity | xargs -I {} rm -r -f {}",n,n,n,n,n,n,,
"Find files in the current directory tree whose permissions are 775","find . -perm 775","find Path -perm Permission",y,y,y,y,y,y,,
"Find files in the current directory tree whose permissions are 775","find . -type f -perm 775 -print","find Path -type f -perm Permission -print",y,y,y,y,y,y,y,y
"Find files in the current directory tree whose permissions are 775","find . -type f -perm [permission] -print -exec chmod 775 {} \;","find Path -type f -perm Permission -print -exec chmod Permission {} \;",n,n,n,n,n,n,,
"Find the file whose inode number is 1316256","find . -inum 1316256","find Path -inum Quantity",y,y,y,y,y,y,,
"Find the file whose inode number is 1316256","find . -inum 1316256 -exec ls -l {} \;","find Path -inum Quantity -exec ls -l {} \;",n,n,n,n,n,n,,
"Find the file whose inode number is 1316256","find . -inum 1316256 -print","find Path -inum Quantity -print",y,y,y,y,y,y,,
"find the file with the name ""file"" in the entire file system","find . -name ""file""","find Path -name Regex",y,n,y,n,y,n,,
"find the file with the name ""file"" in the entire file system","find . -iname ""file""","find Path -iname Regex",n,n,n,n,n,n,,
"find the file with the name ""file"" in the entire file system","find . -name ""file"" -print","find Path -name Regex -print",y,n,y,n,y,n,,
"Find the first file/directory in ... directory and quit","find "".."" \( -name ""*"" -or -name ""*"" \) -print","find Path \( -name Regex -or -name Regex \) -print",n,n,n,n,n,n,,
"Find the first file/directory in ... directory and quit","find "".."" \( -name ""*"" -or -name ""*"" -or -name ""*"" \) -print","find Path \( -name Regex -or -name Regex -or -name Regex \) -print",n,n,n,n,n,n,,
"Find the first file/directory in ... directory and quit","find "".."" .","find Path Path",n,n,n,n,y,n,n,n
"Finds the folder where temporary files would be written to, and save path to it in a 'TMPDIR' variable.","dirname $(mktemp -u -t ""TMPDIR"")","dirname $( mktemp -u -t Regex )",n,n,n,n,y,n,n,n
"Finds the folder where temporary files would be written to, and save path to it in a 'TMPDIR' variable.","dirname $(readlink ""TMPDIR"")","dirname $( readlink File )",n,n,n,n,n,n,,
"Finds the folder where temporary files would be written to, and save path to it in a 'TMPDIR' variable.","dirname $(readlink -f ""TMPDIR"")","dirname $( readlink -f File )",n,n,n,n,n,n,,
"Find out if there are any files on the system owned by user `account'","find . -user ""account"" -print","find Path -user Regex -print",y,n,y,n,y,n,y,y
"Find out if there are any files on the system owned by user `account'","find . -user [regex] -name ""account""","find Path -user Regex -name Regex",y,n,y,n,n,n,y,n
"Find out if there are any files on the system owned by user `account'","find . -user ""account""","find Path -user Regex",y,n,y,n,y,n,y,y
"Find PHP files with abstract classes","find ""class"" -name ""*.php""","find Path -name Regex",n,n,n,n,n,n,,
"Find PHP files with abstract classes","find ""class"" -name ""*.php"" -print .","find Path -name Regex -print Path",n,n,n,n,n,n,,
"Find PHP files with abstract classes","find ""class"" -name ""*.php"" -print0 | xargs -0 -I {} grep '.*' {}","find Path -name Regex -print0 | xargs -0 -I {} grep Regex {}",n,n,n,n,n,n,,
"Finds recursively all files in '/path/' excluding folders dir1, dir2 and all like *.dst, that contain 'pattern', and prints matched strings with string number and file name.","","",n,n,n,n,n,n,,
"Finds recursively all files in '/path/' excluding folders dir1, dir2 and all like *.dst, that contain 'pattern', and prints matched strings with string number and file name.","","",n,n,n,n,n,n,,
"Finds recursively all files in '/path/' excluding folders dir1, dir2 and all like *.dst, that contain 'pattern', and prints matched strings with string number and file name.","","",n,n,n,n,n,n,,
"Find recursively all files matching pattern 'file??' in the xargstest/ directory and print a sorted list of them","find ""xargstest/"" -name ""file??"" | sort | uniq","find Path -name Regex | sort | uniq",y,n,y,y,n,n,y,n
"Find recursively all files matching pattern 'file??' in the xargstest/ directory and print a sorted list of them","find ""xargstest/"" -name ""file??"" | sort | uniq | sort -n","find Path -name Regex | sort | uniq | sort -n",n,n,n,n,n,n,,
"Find recursively all files matching pattern 'file??' in the xargstest/ directory and print a sorted list of them","find ""xargstest/"" -name ""file??"" | sort -t [regex] -n -k [number]","find Path -name Regex | sort -t Regex -n -k Number",n,n,n,n,n,n,,
"Find regular files in the current directory that are writable by at least somebody","find . -type f -perm [permission]","find Path -type f -perm Permission",y,n,y,n,y,n,y,n
"Find regular files in the current directory that are writable by at least somebody","find . -maxdepth [quantity] -type f -perm [permission]","find Path -maxdepth Quantity -type f -perm Permission",n,n,n,n,y,y,n,n
"Find regular files in the current directory that are writable by at least somebody","find . -perm [permission] -type f","find Path -perm Permission -type f",y,n,y,n,y,y,y,n
"find regular files in the current directory, without descending into sub-directories and display as a null separated list.","find . -maxdepth [quantity] -type f -print0 | xargs -0 -n [quantity] -I {} echo {}","find Path -maxdepth Quantity -type f -print0 | xargs -0 -n Quantity -I {} echo {}",n,n,n,n,n,n,,
"find regular files in the current directory, without descending into sub-directories and display as a null separated list.","find . -maxdepth [quantity] -type f -print0 | xargs -0 -I {} echo [regex] {}","find Path -maxdepth Quantity -type f -print0 | xargs -0 -I {} echo Regex {}",n,n,n,n,n,n,,
"find regular files in the current directory, without descending into sub-directories and display as a null separated list.","find . -maxdepth [quantity] -type f -print0 | xargs -0 -I {} ls -l {}","find Path -maxdepth Quantity -type f -print0 | xargs -0 -I {} ls -l {}",n,n,n,n,n,n,,
"Finds strings like ""texthere"" recursively in all files of a current folder regarding all symlinks.","find . -type f -print0 | xargs -0 -I {} grep ""texthere"" {}","find Path -type f -print0 | xargs -0 -I {} grep Regex {}",y,y,y,y,n,n,y,y
"Finds strings like ""texthere"" recursively in all files of a current folder regarding all symlinks.","find . -type f -exec grep ""texthere"" {} \;","find Path -type f -exec grep Regex {} \;",y,y,y,y,n,n,y,y
"Finds strings like ""texthere"" recursively in all files of a current folder regarding all symlinks.","find . -type f -print0 | xargs -0 -I {} grep -l ""texthere"" {}","find Path -type f -print0 | xargs -0 -I {} grep -l Regex {}",n,n,n,n,n,n,,
"Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the first dot.","grep '.*' [file] | cut -f [number] -d [regex]","grep Regex File | cut -f Number -d Regex",y,n,n,n,y,n,y,y
"Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the first dot.","grep -o '.*' [file] | cut -d [regex] -f [number] | cut -d [regex] -f [number] | cut -f [number] -d [regex]","grep -o Regex File | cut -d Regex -f Number | cut -d Regex -f Number | cut -f Number -d Regex",n,n,n,n,n,n,,
"Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the first dot.","grep -o '.*' [file] | cut -f [number] -d [regex]","grep -o Regex File | cut -f Number -d Regex",n,n,n,n,n,n,,
"Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the second and third dot.","grep -o '.*' [file] | uniq -c","grep -o Regex File | uniq -c",n,n,n,n,n,n,,
"Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the second and third dot.","grep -o '.*' [file] | cut -d [regex] -f [number] | uniq -c","grep -o Regex File | cut -d Regex -f Number | uniq -c",n,n,n,n,n,n,,
"Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the second and third dot.","grep -o '.*' [file] | cut -f [number] -d [regex]","grep -o Regex File | cut -f Number -d Regex",n,n,n,n,n,n,,
"Finds strings with dot-separated sequence of numbers, and prints part of that sequence between the first and second dot.","grep -o '.*' [file] | cut -d [regex] -f [number] | uniq -c","grep -o Regex File | cut -d Regex -f Number | uniq -c",n,n,n,n,n,n,,
"Finds strings with dot-separated sequence of numbers, and prints part of that sequence between the first and second dot.","grep -o '.*' [file] | tr -s [regex] | cut -d [regex] -f [number]","grep -o Regex File | tr -s Regex | cut -d Regex -f Number",n,n,n,n,n,n,,
"Finds strings with dot-separated sequence of numbers, and prints part of that sequence between the first and second dot.","grep -o '.*' [file] | cut -d [regex] -f [number] | cut -d [regex] -f [number] | uniq -c","grep -o Regex File | cut -d Regex -f Number | cut -d Regex -f Number | uniq -c",n,n,n,n,n,n,,
"Find symlinks in the current directory tree","find . -type l","find Path -type l",y,y,y,y,y,y,y,y
"Find symlinks in the current directory tree","find . -type l -exec readlink -f {} \; | grep '.*'","find Path -type l -exec readlink -f {} \; | grep Regex",n,n,n,n,n,n,,
"Find symlinks in the current directory tree","find . -type l -exec readlink -f {} \; | sort -r -h | grep '.*'","find Path -type l -exec readlink -f {} \; | sort -r -h | grep Regex",n,n,n,n,n,n,,
"Force create a symbolc link named ""softlink_name"" to ""source_file_or_directory_name"" without dereferencing ""softlink_name""","","",n,n,n,n,n,n,,
"Force create a symbolc link named ""softlink_name"" to ""source_file_or_directory_name"" without dereferencing ""softlink_name""","","",n,n,n,n,n,n,,
"Force create a symbolc link named ""softlink_name"" to ""source_file_or_directory_name"" without dereferencing ""softlink_name""","","",n,n,n,n,n,n,,
"Forcefully delete all files in the current directory","find . -exec rm -f {} \;","find Path -exec rm -f {} \;",y,y,y,y,y,y,,
"Forcefully delete all files in the current directory","find . | xargs -I {} rm -f {}","find Path | xargs -I {} rm -f {}",y,y,y,y,y,y,n,n
"Forcefully delete all files in the current directory","find . | xargs -I {} rm {}","find Path | xargs -I {} rm {}",n,n,n,n,n,n,,
"Format the contents of ""[file]"" in a neat table","column -t -s ""[file]"" [file]","column -t -s Regex File",y,n,y,n,n,n,y,n
"Format the contents of ""[file]"" in a neat table","column -s ""[file]"" [file]","column -s Regex File",n,n,n,n,n,n,,
"Format the contents of ""[file]"" in a neat table","echo ""[file]"" | column -t","echo Regex | column -t",n,n,n,n,n,n,,
"Format time string @1267619929 according to default time format","date --date=""@1267619929""","date --date Regex",y,y,y,y,y,y,y,y
"Format time string @1267619929 according to default time format","date -d ""@1267619929""","date -d Regex",y,y,y,y,y,y,y,y
"Format time string @1267619929 according to default time format","date -u -d ""@1267619929""","date -u -d Regex",n,n,n,n,n,n,,
"Forward port 16186 on hello.com to 8888 on localhost using private key ""privatekeystuffdis88s8dsf8h8hsd8fh8d"" for login","","",n,n,n,n,n,n,,
"Forward port 16186 on hello.com to 8888 on localhost using private key ""privatekeystuffdis88s8dsf8h8hsd8fh8d"" for login","","",n,n,n,n,n,n,,
"Forward port 16186 on hello.com to 8888 on localhost using private key ""privatekeystuffdis88s8dsf8h8hsd8fh8d"" for login","","",n,n,n,n,n,n,,
"Get domain ""$domain"" IP address","dig -x ""$domain"" | grep '.*' | cut -d [regex] -f [number] | grep '.*' | cut -f [number]","dig -x Regex | grep Regex | cut -d Regex -f Number | grep Regex | cut -f Number",n,n,n,n,n,n,,
"Get domain ""$domain"" IP address","dig -x ""$domain"" | grep '.*' | cut -d [regex] -f [number] | grep '.*'","dig -x Regex | grep Regex | cut -d Regex -f Number | grep Regex",n,n,n,n,n,n,,
"Get domain ""$domain"" IP address","dig -x ""$domain"" | grep '.*' | cut -d [regex] -f [number] | tr [regex] [regex]","dig -x Regex | grep Regex | cut -d Regex -f Number | tr Regex Regex",n,n,n,n,n,n,,
"Get domain name of $ip and save it to the variable 'reverse'","dig ""reverse"" ""$ip"" __SP__UNK","dig Regex Regex __SP__UNK",n,n,n,n,n,n,,
"Get domain name of $ip and save it to the variable 'reverse'","basename ""reverse"" | cut -d ""$ip"" -f [number]","basename Regex | cut -d Regex -f Number",n,n,n,n,n,n,,
"Get domain name of $ip and save it to the variable 'reverse'","dig -x ""$ip"" | grep ""reverse"" | cut -d [regex] -f [number] | tr [regex] [regex]","dig -x Regex | grep Regex | cut -d Regex -f Number | tr Regex Regex",n,n,n,n,n,n,,
"Gets MAC address of p2p0 network interface.","ifconfig ""p2p0"" | grep -E -o '.*'","ifconfig Regex | grep -E -o Regex",y,n,y,n,y,n,y,n
"Gets MAC address of p2p0 network interface.","ifconfig ""p2p0"" | grep -E -o '.*' | grep -E -o '.*'","ifconfig Regex | grep -E -o Regex | grep -E -o Regex",y,n,y,n,n,n,y,n
"Gets MAC address of p2p0 network interface.","ifconfig ""p2p0"" | grep '.*' | cut -d [regex] -f [number] | cut -d [regex] -f [number]","ifconfig Regex | grep Regex | cut -d Regex -f Number | cut -d Regex -f Number",y,n,y,n,y,n,y,n
"Get second line from text contained in variable $data.","grep ""$data"" | cut -d [regex] -f [number] | cut -d [regex] -f [number] | cut -d [regex] -f [number] | cut -d [regex]","grep Regex | cut -d Regex -f Number | cut -d Regex -f Number | cut -d Regex -f Number | cut -d Regex",n,n,n,n,n,n,,
"Get second line from text contained in variable $data.","grep ""$data"" | cut -d [regex] -f [number] | cut -d [regex] -f [number] | cut -d [regex] -f [number] | sort | uniq","grep Regex | cut -d Regex -f Number | cut -d Regex -f Number | cut -d Regex -f Number | sort | uniq",n,n,n,n,n,n,,
"Get second line from text contained in variable $data.","grep '.*' | cut -d [regex] -f [number] | grep ""$data"" | cut -d [regex] -f [number]","grep Regex | cut -d Regex -f Number | grep Regex | cut -d Regex -f Number",n,n,n,n,n,n,,
"get year-month-day hour:minute:second from date","echo ""hour:minute:second"" | rev | cut -d [regex] -f [number] | rev","echo Regex | rev | cut -d Regex -f Number | rev",n,n,n,n,n,n,,
"get year-month-day hour:minute:second from date","echo ""hour:minute:second"" | rev | cut -d [regex] -f [number] | cut -d [regex] -f [number] | rev","echo Regex | rev | cut -d Regex -f Number | cut -d Regex -f Number | rev",n,n,n,n,n,n,,
"get year-month-day hour:minute:second from date","echo ""hour:minute:second"" | rev | cut -d [regex] -f [number] | cut -d [regex] -f [number] | cut -d [regex] -f [number]","echo Regex | rev | cut -d Regex -f Number | cut -d Regex -f Number | cut -d Regex -f Number",n,n,n,n,n,n,,
"Go to directory /cygdrive/c/Program Files (x86) using backslashes to escape special characters","cd ""/cygdrive/c/Program""","cd Directory",y,n,y,n,y,n,,
"Go to directory /cygdrive/c/Program Files (x86) using backslashes to escape special characters","cd $(find . -name ""/cygdrive/c/Program"" -print0 | xargs -0 -n [quantity] -I {} dirname {})","cd $( find Path -name Regex -print0 | xargs -0 -n Quantity -I {} dirname {} )",n,n,n,n,n,n,,
"Go to directory /cygdrive/c/Program Files (x86) using backslashes to escape special characters","cd $(find . -name ""/cygdrive/c/Program"" -print0 | tr -d [regex] | tr [regex] [regex] | tr -d [regex])","cd $( find Path -name Regex -print0 | tr -d Regex | tr Regex Regex | tr -d Regex )",n,n,n,n,n,n,,
"Go to directory /cygdrive/c/Program Files (x86) using quotes to escape special characters","cd ""/cygdrive/c/Program""","cd Directory",y,n,y,n,y,n,,
"Go to directory /cygdrive/c/Program Files (x86) using quotes to escape special characters","cd $(echo ""/cygdrive/c/Program"" | tr [regex] [regex])","cd $( echo Regex | tr Regex Regex )",n,n,n,n,n,n,,
"Go to directory /cygdrive/c/Program Files (x86) using quotes to escape special characters","cd $(find . -name ""/cygdrive/c/Program"" -print0 | xargs -0 -n [quantity] -I {} dirname {})","cd $( find Path -name Regex -print0 | xargs -0 -n Quantity -I {} dirname {} )",n,n,n,n,n,n,,
"Interactively create a symbolic link in the current directory for ""$SCRIPT_DIR/$FILE""","ln -s ""$SCRIPT_DIR/$FILE""","ln -s File",n,y,n,n,n,y,y,y
"Interactively create a symbolic link in the current directory for ""$SCRIPT_DIR/$FILE""","find ""$SCRIPT_DIR/$FILE"" -type l -exec ln -s {} [regex] \;","find Path -type l -exec ln -s {} Regex \;",n,n,n,n,n,n,,
"Interactively create a symbolic link in the current directory for ""$SCRIPT_DIR/$FILE""","find ""$SCRIPT_DIR/$FILE"" -type l -print0 | xargs -0 -I {} ln -s {}","find Path -type l -print0 | xargs -0 -I {} ln -s {}",n,n,n,n,n,n,,
"Isolate first comma-delimited field of each line in ""file"", discard consecutive duplicates, and search ""file"" for first matching occurrence of that field.","tac [file] | grep ""file"" | cut -d [regex] -f [number] | grep ""file"" | cut -f [number]","tac File | grep Regex | cut -d Regex -f Number | grep Regex | cut -f Number",n,n,n,n,n,n,,
"Isolate first comma-delimited field of each line in ""file"", discard consecutive duplicates, and search ""file"" for first matching occurrence of that field.","tac [file] | grep ""file"" | cut -f [number] -d ""file""","tac File | grep Regex | cut -f Number -d Regex",n,n,n,n,n,n,,
"Isolate first comma-delimited field of each line in ""file"", discard consecutive duplicates, and search ""file"" for first matching occurrence of that field.","tac [file] | grep ""file"" | cut -d ""file"" -f [number] | rev","tac File | grep Regex | cut -d Regex -f Number | rev",n,n,n,n,n,n,,
"Join columns in ""file1"" and ""file2"" if their first field matches and format the output as a table","column -t -s ""file2"" ""file1""","column -t -s Regex File",n,n,n,n,n,n,,
"Join columns in ""file1"" and ""file2"" if their first field matches and format the output as a table","join -1 [regex] -2 [regex] -o __SP__UNK ""file2"" ""file1""","join -1 Regex -2 Regex -o __SP__UNK File File",n,n,n,n,n,n,,
"Join columns in ""file1"" and ""file2"" if their first field matches and format the output as a table","join -1 [regex] -2 [regex] ""file1"" ""file2"" | column -t","join -1 Regex -2 Regex File File | column -t",y,n,y,n,y,n,y,y
"Join comma-separated data in file1 and file2, including extra non-matching information in both files.","","",n,n,n,n,n,n,,
"Join comma-separated data in file1 and file2, including extra non-matching information in both files.","","",n,n,n,n,n,n,,
"Join comma-separated data in file1 and file2, including extra non-matching information in both files.","","",n,n,n,n,n,n,,
"List .log files from the current directory tree","find . -name ""*.log""","find Path -name Regex",y,y,y,y,y,y,y,y
"List .log files from the current directory tree","find . -name ""*.log"" | xargs -I {} ls -l {}","find Path -name Regex | xargs -I {} ls -l {}",n,n,y,y,n,n,n,n
"List .log files from the current directory tree","find . -name ""*.log"" -print0 | xargs -0 -n [quantity] -I {} echo {}","find Path -name Regex -print0 | xargs -0 -n Quantity -I {} echo {}",y,n,y,y,y,n,y,n
"List all .jpg files in the home directory tree","find . -name ""*.jpg"" -exec ls {} \;","find Path -name Regex -exec ls {} \;",y,n,y,n,y,y,n,n
"List all .jpg files in the home directory tree","find . -name ""*.jpg"" -ls","find Path -name Regex -ls",y,n,y,n,y,n,n,n
"List all .jpg files in the home directory tree","find . -name ""*.jpg"" | xargs -I {} ls {}","find Path -name Regex | xargs -I {} ls {}",y,n,y,n,y,n,n,n
"List all .jpg files in the home directory tree in a fast way","find . -name ""*.jpg"" -exec ls {} \;","find Path -name Regex -exec ls {} \;",y,n,y,n,y,n,n,n
"List all .jpg files in the home directory tree in a fast way","find . -name ""*.jpg"" | xargs -I {} ls -l {}","find Path -name Regex | xargs -I {} ls -l {}",n,n,y,n,n,n,n,n
"List all .jpg files in the home directory tree in a fast way","find . -name ""*.jpg"" -exec ls -l {} \;","find Path -name Regex -exec ls -l {} \;",n,n,y,n,n,n,n,n
"List all .svn files/directories under current directory","find . -name "".svn"" -exec ls {} \;","find Path -name Regex -exec ls {} \;",y,y,y,y,y,y,n,n
"List all .svn files/directories under current directory","find . -name "".svn"" | xargs -I {} ls -l {}","find Path -name Regex | xargs -I {} ls -l {}",n,n,y,y,n,n,n,n
"List all .svn files/directories under current directory","find . -name "".svn"" -ls","find Path -name Regex -ls",y,y,y,y,y,y,n,n
"List all files and directories in long list format with a time style of ""long-iso"" and sort from oldest modifed to newest modified","ls -l -t -r ""long-iso"" | sort -n | tail - [quantity]","ls -l -t -r File | sort -n | tail - Quantity",n,n,n,n,n,n,,
"List all files and directories in long list format with a time style of ""long-iso"" and sort from oldest modifed to newest modified","ls -l -t -r ""long-iso"" | sort -n","ls -l -t -r File | sort -n",n,n,n,n,n,n,,
"List all files and directories in long list format with a time style of ""long-iso"" and sort from oldest modifed to newest modified","ls -l ""long-iso"" | sort -n -r | head - [quantity]","ls -l File | sort -n -r | head - Quantity",n,n,n,n,n,n,,
"List all files/directories under current directory","find . -print0 | xargs -0 -I {} ls {}","find Path -print0 | xargs -0 -I {} ls {}",y,y,y,y,y,y,n,n
"List all files/directories under current directory","find . -ls","find Path -ls",y,y,y,y,y,y,,
"List all files/directories under current directory","find . -exec ls {} \;","find Path -exec ls {} \;",y,y,y,y,y,y,n,n
"List all files/directories under current directory with 'FooBar' in their names ensuring white space safety","find . -name ""FooBar"" -print0 | xargs -0 -n [quantity] -I {} ls {}","find Path -name Regex -print0 | xargs -0 -n Quantity -I {} ls {}",y,n,y,n,y,n,n,n
"List all files/directories under current directory with 'FooBar' in their names ensuring white space safety","find . -print0 | tr [regex] ""FooBar""","find Path -print0 | tr Regex Regex",n,n,n,n,n,n,,
"List all files/directories under current directory with 'FooBar' in their names ensuring white space safety","find . -name ""FooBar"" -print0 | xargs -0 -I {} ls {}","find Path -name Regex -print0 | xargs -0 -I {} ls {}",y,n,y,n,y,n,n,n
"List all files in the current directory tree larger than 1000 kb","find . -size +1000k -ls","find Path -size +Size -ls",y,y,y,y,y,y,,
"List all files in the current directory tree larger than 1000 kb","find . -size +1000k -exec ls -l -h {} \;","find Path -size +Size -exec ls -l -h {} \;",n,n,y,y,n,n,n,n
"List all files in the current directory tree larger than 1000 kb","find . -size +1000k -exec ls -l {} \;","find Path -size +Size -exec ls -l {} \;",n,n,y,y,n,n,n,n
"List all files under current directory with their sizes and paths","find . -type f -printf __SP__UNK | sort","find Path -type f -printf __SP__UNK | sort",y,n,y,n,n,n,y,n
"List all files under current directory with their sizes and paths","find . -type f -printf __SP__UNK | sort -n | head -n [quantity]","find Path -type f -printf __SP__UNK | sort -n | head -n Quantity",n,n,n,n,n,n,,
"List all files under current directory with their sizes and paths","find . -type f -printf __SP__UNK | sort -n | cut -d [regex] -f [number]","find Path -type f -printf __SP__UNK | sort -n | cut -d Regex -f Number",y,n,y,n,n,n,y,n
"List all IPV4 addresses found in all files under /etc directory","find ""/etc"" -exec grep ""ipv4"" {} \;","find Path -exec grep Regex {} \;",n,n,y,n,n,n,n,n
"List all IPV4 addresses found in all files under /etc directory","find ""/etc"" -exec grep -l ""ipv4"" {} \;","find Path -exec grep -l Regex {} \;",n,n,n,n,n,n,,
"List all IPV4 addresses found in all files under /etc directory","find ""/etc"" -type f -exec grep ""ipv4"" {} \;","find Path -type f -exec grep Regex {} \;",y,n,y,n,n,n,y,n
"List all regular files from the current directory tree that were modified less than 60 minutes ago","find . -type f -mtime -60m | xargs -I {} ls -l {}","find Path -type f -mtime -Timespan | xargs -I {} ls -l {}",y,n,y,y,n,n,y,n
"List all regular files from the current directory tree that were modified less than 60 minutes ago","find . -type f -mtime -60m -print0 | xargs -0 -I {} ls -l {}","find Path -type f -mtime -Timespan -print0 | xargs -0 -I {} ls -l {}",y,n,y,y,n,n,y,n
"List all regular files from the current directory tree that were modified less than 60 minutes ago","find . -mtime -60m -type f -ls","find Path -mtime -Timespan -type f -ls",y,n,y,y,n,n,y,n
"List all SGID and SUID files in entire file system","find . \( -perm +sgid -or -perm +suid \) -ls","find Path \( -perm +Permission -or -perm +Permission \) -ls",y,n,y,n,y,n,n,n
"List all SGID and SUID files in entire file system","find . \( -perm +sgid -or -perm -suid \) -ls","find Path \( -perm +Permission -or -perm -Permission \) -ls",y,n,y,n,y,n,n,n
"List all SGID and SUID files in entire file system","find . \( -perm +sgid -or -perm +suid \) -ls","find Path \( -perm +Permission -or -perm +Permission \) -ls",y,n,y,n,y,n,n,n
"List files and directories recursively","find .","find Path",y,y,y,y,y,n,y,y
"List files and directories recursively","find . -ls","find Path -ls",y,n,y,y,y,n,n,n
"List files and directories recursively","find . -exec ls -l {} \;","find Path -exec ls -l {} \;",n,n,y,y,n,n,n,n
"List files in ""dir1"" that are not in ""dir2""","find ""dir1"" ! \( -name ""dir2"" -or -name ""*"" \) {} . -print","find Path ! \( -name Regex -or -name Regex \) {} Path -print",n,n,n,n,n,n,,
"List files in ""dir1"" that are not in ""dir2""","comm -1 -3 ""dir1"" ""dir2""","comm -1 -3 File File",n,n,n,n,n,n,,
"List files in ""dir1"" that are not in ""dir2""","find ""dir1"" ! \( -name ""dir2"" -or -name ""*"" \) {} .","find Path ! \( -name Regex -or -name Regex \) {} Path",n,n,n,n,n,n,,
"List the full path of each directory in the current working directory","ls -d [file]","ls -d File",n,n,n,n,n,n,,
"List the full path of each directory in the current working directory","ls -d $(pwd)","ls -d $( pwd )",n,n,n,n,n,n,,
"List the full path of each directory in the current working directory","tree -d -f -i $(pwd)","tree -d -f -i $( pwd )",y,y,y,y,y,y,y,y
"list regular files ending in .mbox","find "".mbox"" -type f -name ""*""","find Path -type f -name Regex",y,n,y,n,y,n,y,n
"list regular files ending in .mbox","find "".mbox"" -type f | xargs -I {} ls -l {}","find Path -type f | xargs -I {} ls -l {}",y,n,y,n,n,y,y,n
"list regular files ending in .mbox","find "".mbox"" -type f \( -name ""*"" -or -name ""*"" -or -name ""*"" \)","find Path -type f \( -name Regex -or -name Regex -or -name Regex \)",y,n,y,n,n,n,y,n
"Locate all *.mov files in the current directory tree","find . -name ""*.mov""","find Path -name Regex",y,y,y,y,y,y,y,y
"Locate all *.mov files in the current directory tree","find . -type f -name ""*.mov""","find Path -type f -name Regex",y,y,y,y,y,y,y,y
"Locate all *.mov files in the current directory tree","find . -iname ""*.mov""","find Path -iname Regex",y,y,y,y,n,n,y,y
"Locate all files in the current directory and below that have ""testfile"" in their names","find . -name ""testfile""","find Path -name Regex",y,n,y,n,y,n,,
"Locate all files in the current directory and below that have ""testfile"" in their names","find . -iname ""testfile""","find Path -iname Regex",n,n,n,n,n,n,,
"Locate all files in the current directory and below that have ""testfile"" in their names","find . -name ""testfile"" -print","find Path -name Regex -print",y,n,y,n,y,n,,
"long list the detials of all the shell scripts in current directory","ls -l -d $(find . -type f)","ls -l -d $( find Path -type f )",n,n,n,n,n,n,,
"long list the detials of all the shell scripts in current directory","ls -l -d $(find .)","ls -l -d $( find Path )",n,n,n,n,n,n,,
"long list the detials of all the shell scripts in current directory","ls -l -d [file]","ls -l -d File",y,n,y,n,n,n,y,n
"looks for all files larger than 10 megabytes (10485760 bytes) within /home","find ""/home"" -size +10M -exec ls -l -h {} \;","find Path -size +Size -exec ls -l -h {} \;",y,n,y,y,y,n,n,n
"looks for all files larger than 10 megabytes (10485760 bytes) within /home","find ""/home"" -type f -size +10M -exec ls -l {} \;","find Path -type f -size +Size -exec ls -l {} \;",y,y,y,y,n,n,y,y
"looks for all files larger than 10 megabytes (10485760 bytes) within /home","find ""/home"" -size +10M -exec ls -l -d {} \;","find Path -size +Size -exec ls -l -d {} \;",y,y,y,y,y,n,y,y
"Make directory ""/tmp/foo""","mkdir ""/tmp/foo""","mkdir Directory",y,y,y,y,y,y,y,y
"Make directory ""/tmp/foo""","find ""/tmp/foo"" \( -type d -or -name ""*"" -or -name ""*"" \) -prune -or \( -type d -or -name ""*"" -or -name ""*"" \)","find Path \( -type d -or -name Regex -or -name Regex \) -prune -or \( -type d -or -name Regex -or -name Regex \)",n,n,n,n,n,n,,
"Make directory ""/tmp/foo""","find ""/tmp/foo"" \( -type d -or -name ""*"" -or -name ""*"" \) -prune -or \( -type d -print -or -name ""*"" \)","find Path \( -type d -or -name Regex -or -name Regex \) -prune -or \( -type d -print -or -name Regex \)",n,n,n,n,n,n,,
"Make directories to ""directory{1..3}/subdirectory{1..3}/subsubdirectory{1..2}"" as needed","mkdir -p ""directory{1..3}/subdirectory{1..3}/subsubdirectory{1..2}""","mkdir -p Directory",y,y,y,y,y,y,y,y
"Make directories to ""directory{1..3}/subdirectory{1..3}/subsubdirectory{1..2}"" as needed","mkdir -p $(dirname ""directory{1..3}/subdirectory{1..3}/subsubdirectory{1..2}"")","mkdir -p $( dirname Regex )",n,n,n,n,n,n,,
"Make directories to ""directory{1..3}/subdirectory{1..3}/subsubdirectory{1..2}"" as needed","mkdir -p $(find ""directory{1..3}/subdirectory{1..3}/subsubdirectory{1..2}"" -type d -print0 | xargs -0 -I {} mkdir -p {} | split -d -l [quantity] [file] [regex])","mkdir -p $( find Path -type d -print0 | xargs -0 -I {} mkdir -p {} | split -d -l Quantity File Regex )",n,n,n,n,n,n,,
"Merge lines from ""file_1"" and ""file_2"" and format the output as a table with tab separators","sort -n ""file_2"" ""file_1"" | column -t","sort -n File File | column -t",n,n,y,y,n,n,n,n
"Merge lines from ""file_1"" and ""file_2"" and format the output as a table with tab separators","sort -n ""file_2"" ""file_1""","sort -n File File",n,n,n,n,n,n,,
"Merge lines from ""file_1"" and ""file_2"" and format the output as a table with tab separators","join -1 [regex] -2 [regex] ""file_1"" ""file_2""","join -1 Regex -2 Regex File File",n,n,n,n,n,n,,
"Modify interval to 0.1 seconds for the watch command","find . -type d -mtime 0.1s -print0 | xargs -0 -I {} chmod [permission] {}","find Path -type d -mtime Timespan -print0 | xargs -0 -I {} chmod Permission {}",n,n,n,n,n,n,,
"Modify interval to 0.1 seconds for the watch command","find . -type d -mtime 0.1s -print0 | xargs -0 -I {} tar -r -v -f [file] {}","find Path -type d -mtime Timespan -print0 | xargs -0 -I {} tar -r -v -f File {}",n,n,n,n,n,n,,
"Modify interval to 0.1 seconds for the watch command","find . -type d -mtime 0.1s -exec ls -l -t -r {} \; | sleep [timespan]","find Path -type d -mtime Timespan -exec ls -l -t -r {} \; | sleep Timespan",n,n,n,n,n,n,,
"Mount ""nifs"" filesystem ""/dev/mapper/myldm"" on ""/mnt"" as read only","mount ""nifs"" -t __SP__UNK ""/mnt"" ""/dev/mapper/myldm""","mount Regex -t __SP__UNK Regex Directory",n,n,n,n,n,n,,
"Mount ""nifs"" filesystem ""/dev/mapper/myldm"" on ""/mnt"" as read only","mount ""nifs"" ""/dev/mapper/myldm"" -t __SP__UNK -o __SP__UNK ""/mnt""","mount Regex Regex -t __SP__UNK -o __SP__UNK Directory",n,n,n,n,n,n,,
"Mount ""nifs"" filesystem ""/dev/mapper/myldm"" on ""/mnt"" as read only","mount ""nifs"" ""/mnt"" -t __SP__UNK -o __SP__UNK -t __SP__UNK ""/dev/mapper/myldm""","mount Regex Regex -t __SP__UNK -o __SP__UNK -t __SP__UNK Directory",n,n,n,n,n,n,,
"Mount partition with label ""WHITE"" on ""/mnt/WHITE""","mount ""/mnt/WHITE"" ""WHITE""","mount Regex Regex",n,n,n,n,y,n,n,n
"Mount partition with label ""WHITE"" on ""/mnt/WHITE""","mount ""/mnt/WHITE"" [regex] ""WHITE""","mount Regex Regex Directory",n,n,n,n,y,n,n,n
"Mount partition with label ""WHITE"" on ""/mnt/WHITE""","mount ""/mnt/WHITE"" ""WHITE"" -o __SP__UNK","mount Regex Regex -o __SP__UNK",n,n,n,n,n,n,,
"Mount partition with label ""WHITE"" on ""/mnt/WHITE"" with read and write permission and have it accessible by user and group ""test""","mount ""WHITE"" ""/mnt/WHITE"" ""test""","mount Regex Regex Directory",n,n,n,n,n,n,,
"Mount partition with label ""WHITE"" on ""/mnt/WHITE"" with read and write permission and have it accessible by user and group ""test""","mount ""WHITE"" ""/mnt/WHITE"" ""test"" -o __SP__UNK","mount Regex Regex Directory -o __SP__UNK",n,n,n,n,n,n,,
"Mount partition with label ""WHITE"" on ""/mnt/WHITE"" with read and write permission and have it accessible by user and group ""test""","mount ""WHITE"" [regex] $(find ""/mnt/WHITE"" -type d -print0 | sort -z | tr ""test"" [regex] | tee -a [file])","mount Regex Regex $( find Path -type d -print0 | sort -z | tr Regex Regex | tee -a File )",n,n,n,n,n,n,,
"Move all *.pdf.marker files and their corresponding *.pdf files under ${INPUT} to ${OUTPUT}","find . \( -name ""*.pdf.marker"" -or -name ""*.pdf"" -or -name ""${INPUT}"" \) -exec mv {} ""${OUTPUT}"" \;","find Path \( -name Regex -or -name Regex -or -name Regex \) -exec mv {} File \;",y,n,y,n,n,n,y,n
"Move all *.pdf.marker files and their corresponding *.pdf files under ${INPUT} to ${OUTPUT}","find ""${INPUT}"" ""*.pdf"" -name ""*.pdf.marker"" -print0 | xargs -0 -I {} mv {} ""${OUTPUT}""","find Path Path -name Regex -print0 | xargs -0 -I {} mv {} File",n,n,n,n,n,n,,
"Move all *.pdf.marker files and their corresponding *.pdf files under ${INPUT} to ${OUTPUT}","find . \( -name ""*.pdf.marker"" -or -name ""*.pdf"" -or -name ""${INPUT}"" \) -print0 | xargs -0 -I {} mv {} ""${OUTPUT}""","find Path \( -name Regex -or -name Regex -or -name Regex \) -print0 | xargs -0 -I {} mv {} File",y,n,y,n,n,n,y,n
"Move all files excluding hidden files in ""/path/subfolder/"" to ""/path/""","find ""/path/subfolder/"" -not \( -path [regex] -prune -or -path [regex] -prune \) -type f -print0 | xargs -0 -I {} mv -t ""/path/"" {}","find Path -not \( -path Regex -prune -or -path Regex -prune \) -type f -print0 | xargs -0 -I {} mv -t Directory {}",y,n,y,n,n,n,y,y
"Move all files excluding hidden files in ""/path/subfolder/"" to ""/path/""","find ""/path/subfolder/"" -not \( -path [regex] -prune \) -name ""*"" -print0 | xargs -0 -I {} mv -t ""/path/"" {}","find Path -not \( -path Regex -prune \) -name Regex -print0 | xargs -0 -I {} mv -t Directory {}",y,n,y,n,n,n,y,y
"Move all files excluding hidden files in ""/path/subfolder/"" to ""/path/""","find ""/path/subfolder/"" -not \( -path [regex] -prune \) -not -path [regex] -type f -print0 | xargs -0 -I {} mv -t ""/path/"" {}","find Path -not \( -path Regex -prune \) -not -path Regex -type f -print0 | xargs -0 -I {} mv -t Directory {}",y,n,y,n,n,n,y,y
"Move each of the directories in /path/to/folders/* to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory then move all *.emlx files into this directory","find . -name ""/path/to/folders/*"" -type d -print0 | xargs -0 -I {} rename "".mbox"" {}","find Path -name Regex -type d -print0 | xargs -0 -I {} rename Regex {}",n,n,n,n,n,n,,
"Move each of the directories in /path/to/folders/* to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory then move all *.emlx files into this directory","find . -type d -name ""/path/to/folders/*"" -execdir rename "".mbox"" {} \;","find Path -type d -name Regex -execdir rename Regex {} \;",n,n,n,n,n,n,,
"Move each of the directories in /path/to/folders/* to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory then move all *.emlx files into this directory","find "".mbox"" -name ""/path/to/folders/*"" -type d -exec mv {} [file] \;","find Path -name Regex -type d -exec mv {} File \;",n,n,n,n,n,n,,
"Move files from $sourcePath to $destPath that have not been modified in the last 10 days","find ""$destPath"" -mtime +10 -exec mv {} ""$sourcePath"" \;","find Path -mtime +Timespan -exec mv {} File \;",y,n,y,n,y,n,y,n
"Move files from $sourcePath to $destPath that have not been modified in the last 10 days","find ""$destPath"" -mtime +10 -print0 | xargs -0 -I {} mv -t ""$sourcePath"" {}","find Path -mtime +Timespan -print0 | xargs -0 -I {} mv -t Directory {}",y,n,y,n,y,n,y,n
"Move files from $sourcePath to $destPath that have not been modified in the last 10 days","find ""$destPath"" -mtime +10 -exec mv {} ""$sourcePath"" +","find Path -mtime +Timespan -exec mv {} File +",y,n,y,n,y,n,y,n
"Numerically sort file ""file.dat"" by the second word of each line and output from greatest value to least value","sort -n -r -k ""file.dat""","sort -n -r -k Number",n,n,n,n,n,n,,
"Numerically sort file ""file.dat"" by the second word of each line and output from greatest value to least value","sort -n ""file.dat"" | uniq -c","sort -n File | uniq -c",n,n,n,n,n,n,,
"Numerically sort file ""file.dat"" by the second word of each line and output from greatest value to least value","sort -n -r ""file.dat""","sort -n -r File",n,n,n,n,n,n,,
"Open gcc info manual and select ""option index"" menu entry.","echo ""option index"" | rev | cut -d [regex] -f [number] | rev","echo Regex | rev | cut -d Regex -f Number | rev",n,n,n,n,n,n,,
"Open gcc info manual and select ""option index"" menu entry.","echo ""option index"" | rev | cut -d [regex] -f [number] | rev | cut -d [regex] -f [number] | rev","echo Regex | rev | cut -d Regex -f Number | rev | cut -d Regex -f Number | rev",n,n,n,n,n,n,,
"Open gcc info manual and select ""option index"" menu entry.","grep '.*' [file] | cut -d [regex] -f [number] | grep ""option index"" | cut -d [regex] -f [number] | cut -d [regex] -f [number]","grep Regex File | cut -d Regex -f Number | grep Regex | cut -d Regex -f Number | cut -d Regex -f Number",n,n,n,n,n,n,,
"Perform case-insensitive search for file `TeSt123.txt' on the system","find . -name ""TeSt123.txt""","find Path -name Regex",n,n,y,n,n,n,n,n
"Perform case-insensitive search for file `TeSt123.txt' on the system","find . -type f -name ""TeSt123.txt"" | xargs -I {} grep '.*' {}","find Path -type f -name Regex | xargs -I {} grep Regex {}",n,n,n,n,n,n,,
"Perform case-insensitive search for file `TeSt123.txt' on the system","find ""TeSt123.txt"" -type f -iname [regex] | xargs -I {} grep '.*' {}","find Path -type f -iname Regex | xargs -I {} grep Regex {}",n,n,n,n,n,n,,
"Print ""deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu precise main"" and append to file ""/etc/apt/sources.list""","echo ""http://ppa.launchpad.net/webupd8team/java/ubuntu"" | tee -a ""/etc/apt/sources.list""","echo Regex | tee -a File",y,n,y,n,y,n,,
"Print ""deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu precise main"" and append to file ""/etc/apt/sources.list""","cat ""http://ppa.launchpad.net/webupd8team/java/ubuntu"" | tee -a ""/etc/apt/sources.list""","cat File | tee -a File",n,n,n,n,n,n,,
"Print ""deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu precise main"" and append to file ""/etc/apt/sources.list""","yes ""http://ppa.launchpad.net/webupd8team/java/ubuntu"" | tee -a ""/etc/apt/sources.list""","yes Regex | tee -a File",n,n,n,n,n,n,,
"Print 'file' content, formatting output as 29-symbol wide column","cat ""29-symbol"" | column -s ""file""","cat File | column -s Regex",n,n,n,n,n,n,,
"Print 'file' content, formatting output as 29-symbol wide column","cat ""29-symbol"" | tr -d ""file""","cat File | tr -d Regex",n,n,n,n,n,n,,
"Print 'file' content, formatting output as 29-symbol wide column","nl -s [regex] [file] | tr -s ""file"" | cut -d ""29-symbol"" -f [number]","nl -s Regex File | tr -s Regex | cut -d Regex -f Number",n,n,n,n,n,n,,
"Print 1 byte from ""/dev/urandom"" as a signed decimal value and no address radix","cat ""/dev/urandom"" | tr -d -c [regex] | od -t x1 -w 1c","cat File | tr -d -c Regex | od -t x1 -w Size",y,y,n,n,y,y,y,y
"Print 1 byte from ""/dev/urandom"" as a signed decimal value and no address radix","","",n,n,n,n,n,n,,
"Print 1 byte from ""/dev/urandom"" as a signed decimal value and no address radix","","",n,n,n,n,n,n,,
"Print a list of all *.code files from the current directory tree","find . -name ""*.code"" -ls","find Path -name Regex -ls",y,y,y,y,y,y,n,n
"Print a list of all *.code files from the current directory tree","find . -name ""*.code"" -exec echo {} \;","find Path -name Regex -exec echo {} \;",y,y,y,y,y,y,y,y
"Print a list of all *.code files from the current directory tree","find . -name ""*.code""","find Path -name Regex",y,y,y,y,y,y,y,y
"Print a list of regular files from directory tree sort_test/ sorted with LC_COLLATE=en_US.UTF-8","","",n,n,n,n,n,n,,
"Print a list of regular files from directory tree sort_test/ sorted with LC_COLLATE=en_US.UTF-8","","",n,n,n,n,n,n,,
"Print a list of regular files from directory tree sort_test/ sorted with LC_COLLATE=en_US.UTF-8","","",n,n,n,n,n,n,,
"Print a list of regular files from directory tree sort_test/ sorted with LC_COLLATE=en_US.utf8","","",n,n,n,n,n,n,,
"Print a list of regular files from directory tree sort_test/ sorted with LC_COLLATE=en_US.utf8","","",n,n,n,n,n,n,,
"Print a list of regular files from directory tree sort_test/ sorted with LC_COLLATE=en_US.utf8","","",n,n,n,n,n,n,,
"Print a list of unique users who are logged in","who | cut -d ""*.log"" -f [number] | sort -u","who | cut -d Regex -f Number | sort -u",y,n,n,n,y,n,y,n
"Print a list of unique users who are logged in","w | cut -d ""*.log"" -f [number] | sort -u","w | cut -d Regex -f Number | sort -u",n,n,n,n,n,n,,
"Print a list of unique users who are logged in","who | cut -d ""*.log"" -f [number] | sort | uniq -c","who | cut -d Regex -f Number | sort | uniq -c",n,n,n,n,n,n,,
"Print a randomly sorted list of numbers from 1 to 10 to file ""/tmp/lst"" and outputs ""-------"" followed by the reverse list to the screen","seq 1 10 | sort -R | tee ""-------"" | tee ""/tmp/lst""","seq Number Number | sort -R | tee File | tee File",n,n,n,n,n,n,,
"Print a randomly sorted list of numbers from 1 to 10 to file ""/tmp/lst"" and outputs ""-------"" followed by the reverse list to the screen","seq 1 10 | sort -R | tee ""/tmp/lst"" | tr -d ""-------""","seq Number Number | sort -R | tee File | tr -d Regex",n,n,n,n,n,n,,
"Print a randomly sorted list of numbers from 1 to 10 to file ""/tmp/lst"" and outputs ""-------"" followed by the reverse list to the screen","seq 1 10 | sort -R | tee ""/tmp/lst"" | sort | tee ""-------""","seq Number Number | sort -R | tee File | sort | tee File",n,n,n,n,n,n,,
"Print a space separated list of numbers from 1 to 10","seq 1 10 | xargs -I {} echo {}","seq Number Number | xargs -I {} echo {}",n,n,n,n,n,n,,
"Print a space separated list of numbers from 1 to 10","seq 1 | xargs -n 10 -I {} echo {}","seq Number | xargs -n Quantity -I {} echo {}",n,n,n,n,n,n,,
"Print a space separated list of numbers from 1 to 10","seq 1 [number] | xargs -n 10 -I {} echo {}","seq Number Number | xargs -n Quantity -I {} echo {}",n,n,n,n,n,n,,
"Print absolute path of ""PATH""","readlink -f ""PATH""","readlink -f File",y,y,y,y,y,y,y,y
"Print absolute path of ""PATH""","readlink -f $(readlink -f ""PATH"")","readlink -f $( readlink -f File )",y,y,y,y,n,n,y,y
"Print absolute path of ""PATH""","readlink -f $(which ""PATH"")","readlink -f $( which Regex )",y,y,n,n,y,y,y,y
"Prints all business days in a current month.","cal -h | cut -c [number] | tail -n [quantity]","cal -h | cut -c Number | tail -n Quantity",n,n,y,n,n,n,n,n
"Prints all business days in a current month.","cal -h | cut -c [number]","cal -h | cut -c Number",y,n,y,n,y,n,,
"Prints all business days in a current month.","cal -h | cut -c [number] | tail -n [quantity] | head -n [quantity]","cal -h | cut -c Number | tail -n Quantity | head -n Quantity",n,n,y,n,n,n,n,n
"Print common files of directory ""1"" and ""2""","find . -maxdepth 1 -type f | xargs -I {} ls -l -t {} | tail -n 2","find Path -maxdepth Quantity -type f | xargs -I {} ls -l -t {} | tail -n Quantity",n,n,n,n,n,n,,
"Print common files of directory ""1"" and ""2""","find . -maxdepth 1 -type f | xargs -I {} echo 2 {} [regex]","find Path -maxdepth Quantity -type f | xargs -I {} echo Regex {} Regex",n,n,n,n,n,n,,
"Print common files of directory ""1"" and ""2""","find . -maxdepth 1 -type f | xargs -I {} echo 2 {}","find Path -maxdepth Quantity -type f | xargs -I {} echo Regex {}",n,n,n,n,n,n,,
"Print the contents of ""order.txt""","cat ""order.txt""","cat File",y,y,y,y,y,y,y,y
"Print the contents of ""order.txt""","cat $(who | cut -d ""order.txt"" -f [number])","cat $( who | cut -d Regex -f Number )",n,n,n,n,n,n,,
"Print the contents of ""order.txt""","cat $(cat ""order.txt"")","cat $( cat File )",n,n,n,n,n,n,,
"Print count of unique lines in all files like 'list_part*'","cat ""list_part*"" | wc -l","cat File | wc -l",n,n,n,n,n,n,,
"Print count of unique lines in all files like 'list_part*'","cat ""list_part*"" | sort | uniq | wc -l","cat File | sort | uniq | wc -l",y,y,y,n,y,y,y,y
"Print count of unique lines in all files like 'list_part*'","sort ""list_part*"" | uniq -u | wc -l","sort File | uniq -u | wc -l",y,n,y,n,n,n,y,y
"Print current date as epoch seconds","date --date=[regex] __SP__UNK","date --date Regex __SP__UNK",n,n,n,n,n,n,,
"Print current date as epoch seconds","date -u -I __SP__UNK","date -u -I __SP__UNK",n,n,n,n,n,n,,
"Print current date as epoch seconds","date __SP__UNK","date __SP__UNK",n,n,n,n,n,n,,
"Print the current directory tree with the date of last modification for each file or directory","find . -type f -printf __SP__UNK | sort -n | tail -n [quantity]","find Path -type f -printf __SP__UNK | sort -n | tail -n Quantity",n,n,n,n,n,n,,
"Print the current directory tree with the date of last modification for each file or directory","find . -type f -printf '%T@ %p\n' | sort -n | tail - [quantity] | cut -f [number] -d [regex]","find Path -type f -printf '%T@ %p\n' | sort -n | tail - Quantity | cut -f Number -d Regex",n,n,n,n,n,n,,
"Print the current directory tree with the date of last modification for each file or directory","find . -type f -print0 | xargs -0 -I {} file {}","find Path -type f -print0 | xargs -0 -I {} file {}",n,n,n,n,n,n,,
"Print details for all files in the ./work directory tree with extension .sh that were modified less than 20 days ago","find ""./work"" -name ""*.sh"" -mtime -20","find Path -name Regex -mtime -Timespan",n,n,n,n,n,n,,
"Print details for all files in the ./work directory tree with extension .sh that were modified less than 20 days ago","find ""./work"" -name ""*.sh"" -mtime -20 -print","find Path -name Regex -mtime -Timespan -print",n,n,n,n,n,n,,
"Print details for all files in the ./work directory tree with extension .sh that were modified less than 20 days ago","find ""./work"" -name ""*.sh"" -mtime -20 -exec ls -l {} \;","find Path -name Regex -mtime -Timespan -exec ls -l {} \;",y,y,y,y,y,y,n,n
"Print differences between the sorted content of file $1 and file $2, executing 'diff' with options from ""${@:3}"" array slice","sort ""${@:3}"" ""$2"" | split -d -l [quantity] ""diff"" ""$1""","sort File File | split -d -l Quantity File Regex",y,y,n,n,y,y,y,y
"Print differences between the sorted content of file $1 and file $2, executing 'diff' with options from ""${@:3}"" array slice","","",n,n,n,n,n,n,,
"Print differences between the sorted content of file $1 and file $2, executing 'diff' with options from ""${@:3}"" array slice","","",n,n,n,n,n,n,,
"Print directories in the the current directory as a list with no report information","tree -d -f -i","tree -d -f -i",y,y,n,n,y,y,y,y
"Print directories in the the current directory as a list with no report information","tree -d -f","tree -d -f",n,n,n,n,n,n,,
"Print directories in the the current directory as a list with no report information","find . -maxdepth [quantity] -type d -print0 | xargs -0 -n [quantity] -I {} echo {}","find Path -maxdepth Quantity -type d -print0 | xargs -0 -n Quantity -I {} echo {}",n,n,n,n,n,n,,
"Print each line in ""set1"" and ""set2"" that does not exist in the other","sort ""set1"" ""set2"" | uniq -d","sort File File | uniq -d",n,n,n,n,n,n,,
"Print each line in ""set1"" and ""set2"" that does not exist in the other","sort ""set1"" ""set2"" | uniq -u","sort File File | uniq -u",n,n,y,y,n,n,n,n
"Print each line in ""set1"" and ""set2"" that does not exist in the other","sort ""set1"" ""set2"" | uniq","sort File File | uniq",n,n,n,n,y,y,n,n
"Print the file content of command ""[whatever]""","cat $(which ""[whatever]"")","cat $( which Regex )",y,y,y,y,y,n,y,y
"Print the file content of command ""[whatever]""","cat ""[whatever]"" | xargs -I {} cat {}","cat File | xargs -I {} cat {}",n,n,n,n,n,n,,
"Print the file content of command ""[whatever]""","cat $(which ""[whatever]"" | xargs -I {} cat {})","cat $( which Regex | xargs -I {} cat {} )",n,n,n,n,n,n,,
"Print files created/modified in the last day","find ""created/modified"" -mtime -1 -print","find Path -mtime -Timespan -print",y,n,y,n,n,n,y,n
"Print files created/modified in the last day","find ""created/modified"" -mtime -1","find Path -mtime -Timespan",y,n,y,n,n,n,y,n
"Print files created/modified in the last day","find ""created/modified"" -type f -mtime -1 | xargs -n [quantity] -I {} echo [regex] [regex] {}","find Path -type f -mtime -Timespan | xargs -n Quantity -I {} echo Regex Regex {}",n,n,y,n,n,n,n,n
"Print first 11 characters from $line, print a tab, print the md5 sum of the file specified by the 13th and onward characters from $line and print a null character at end without a trailing new line","echo ""md5"" | rev | cut -d ""$line"" -f [number] | cut -d ""13th"" -f [number] | tr ""$line"" 11","echo Regex | rev | cut -d Regex -f Number | cut -d Regex -f Number | tr Regex Regex",n,n,n,n,n,n,,
"Print first 11 characters from $line, print a tab, print the md5 sum of the file specified by the 13th and onward characters from $line and print a null character at end without a trailing new line","echo ""md5"" | rev | cut -d ""$line"" -f [number] | cut -d ""$line"" -f [number] | cut -d ""13th"" -f 11 | tr","echo Regex | rev | cut -d Regex -f Number | cut -d Regex -f Number | cut -d Regex -f Number | tr",n,n,n,n,n,n,,
"Print first 11 characters from $line, print a tab, print the md5 sum of the file specified by the 13th and onward characters from $line and print a null character at end without a trailing new line","echo ""md5"" | rev | cut -d ""$line"" -f [number] | cut -d ""$line"" -f [number] | cut -d ""13th"" -f 11","echo Regex | rev | cut -d Regex -f Number | cut -d Regex -f Number | cut -d Regex -f Number",n,n,n,n,n,n,,
"Print first field from semicolon-seprated line $string.","echo ""$string"" | cut -d [regex] -f [number]","echo Regex | cut -d Regex -f Number",y,n,y,n,y,n,,
"Print first field from semicolon-seprated line $string.","echo ""$string"" | head -n [quantity] | cut -d [regex] -f [number]","echo Regex | head -n Quantity | cut -d Regex -f Number",n,n,n,n,n,n,,
"Print first field from semicolon-seprated line $string.","echo ""$string"" | rev | cut -d [regex] -f [number] | head -n [quantity]","echo Regex | rev | cut -d Regex -f Number | head -n Quantity",n,n,n,n,n,n,,
"Print flow of random data, showing all non-printing characters","cat [file] | tr -d -c [regex] | grep -o -P '.*'","cat File | tr -d -c Regex | grep -o -P Regex",n,n,n,n,n,n,,
"Print flow of random data, showing all non-printing characters","echo -e [regex] | rev | cut -d [regex] -f [number] | rev","echo -e Regex | rev | cut -d Regex -f Number | rev",n,n,n,n,n,n,,
"Print flow of random data, showing all non-printing characters","cat [file] | tr -d -c [regex] | grep -o '.*'","cat File | tr -d -c Regex | grep -o Regex",n,n,n,n,n,n,,
"Print the full path of a file under the current working directory with inode number specified on standard input","ls -d [file] | cut -f [number] -d [regex]","ls -d File | cut -f Number -d Regex",n,n,n,n,n,n,,
"Print the full path of a file under the current working directory with inode number specified on standard input","ls -d [file] | tr -d [regex]","ls -d File | tr -d Regex",n,n,n,n,n,n,,
"Print the full path of a file under the current working directory with inode number specified on standard input","ls -d [file] | tr -s [regex] | cut -d [regex] -f [number]","ls -d File | tr -s Regex | cut -d Regex -f Number",n,n,n,n,n,n,,
"Print the full path of executable ""lshw""","which ""lshw""","which Regex",y,y,y,y,y,y,y,y
"Print the full path of executable ""lshw""","readlink -f $(which ""lshw"")","readlink -f $( which Regex )",y,y,y,y,y,y,y,y
"Print the full path of executable ""lshw""","readlink $(which ""lshw"")","readlink $( which Regex )",n,n,n,n,n,n,,
"Prints full path to files with dot in name in a current folder.","ls -d -1 [file]","ls -d -1 File",y,n,n,n,y,n,y,n
"Prints full path to files with dot in name in a current folder.","ls -d [file]","ls -d File",n,n,n,n,n,y,y,n
"Prints full path to files with dot in name in a current folder.","echo [regex] | xargs -I {} dirname {}","echo Regex | xargs -I {} dirname {}",n,n,n,n,n,n,,
"Print the given file name's extensions.","find . -name ""*""","find Path -name Regex",n,n,n,n,n,n,,
"Print the given file name's extensions.","echo $(basename [regex])","echo $( basename Regex )",n,n,n,n,n,n,,
"Print the given file name's extensions.","find . -name ""*"" -exec echo {} \;","find Path -name Regex -exec echo {} \;",n,n,n,n,n,n,,
"Print the largest 20 files under current directory","find . -type f -exec du -S -h {} + | sort -r -h | head -n 20","find Path -type f -exec du -S -h {} + | sort -r -h | head -n Quantity",y,y,y,y,y,y,y,y
"Print the largest 20 files under current directory","find . -type f -printf '%T@ %p\n' | sort -n | head -n 20 | tail -n [quantity]","find Path -type f -printf '%T@ %p\n' | sort -n | head -n Quantity | tail -n Quantity",n,n,n,n,n,n,,
"Print the largest 20 files under current directory","find . -type f -printf __SP__UNK | sort -n | head -n 20","find Path -type f -printf __SP__UNK | sort -n | head -n Quantity",n,n,n,n,n,n,,
"Print last 10 commands in history","history | tail -n 10","history | tail -n Quantity",y,y,y,y,y,y,,
"Print last 10 commands in history","history | tail - 10","history | tail - Quantity",y,n,n,n,y,y,y,n
"Print last 10 commands in history","history | tail - 10 | cut -d [regex] -f [number]","history | tail - Quantity | cut -d Regex -f Number",n,n,n,n,n,n,,
"Print line number of each line in /etc/passwd file, where current user name is found","wc $(find . -name ""/etc/passwd"")","wc $( find Path -name Regex )",n,n,n,n,n,n,,
"Print line number of each line in /etc/passwd file, where current user name is found","cat ""/etc/passwd"" | xargs -I {} cat {} | wc -l","cat File | xargs -I {} cat {} | wc -l",n,n,n,n,n,n,,
"Print line number of each line in /etc/passwd file, where current user name is found","cat ""/etc/passwd"" | xargs -I {} cat {} | wc -l","cat File | xargs -I {} cat {} | wc -l",n,n,n,n,n,n,,
"Print the list of files in the current directory tree excluding those whose paths contain ""exclude3"" or ""exclude4""","find . ! -path ""exclude3"" ! -path ""exclude4""","find Path ! -path Regex ! -path Regex",y,n,y,n,y,y,y,n
"Print the list of files in the current directory tree excluding those whose paths contain ""exclude3"" or ""exclude4""","find ""exclude3"" -not -path ""exclude4""","find Path -not -path Regex",n,n,n,n,n,n,,
"Print the list of files in the current directory tree excluding those whose paths contain ""exclude3"" or ""exclude4""","find . ! -path ""exclude4"" -type f -name ""exclude3""","find Path ! -path Regex -type f -name Regex",n,n,n,n,n,n,,
"Print the list of regular files from the current directory tree that were modified less than 2 days ago","find . -type f -mtime -2","find Path -type f -mtime -Timespan",y,y,y,y,y,y,y,y
"Print the list of regular files from the current directory tree that were modified less than 2 days ago","find . -mtime -2 -type f","find Path -mtime -Timespan -type f",y,y,y,y,y,y,y,y
"Print the list of regular files from the current directory tree that were modified less than 2 days ago","find . -mtime -2 -type f -printf __SP__UNK","find Path -mtime -Timespan -type f -printf __SP__UNK",y,n,y,n,y,n,y,n
"Prints logged in users in sorted order.","finger | cut -d ""*.log"" -f [number] | sort | uniq -c","finger | cut -d Regex -f Number | sort | uniq -c",n,n,n,n,n,n,,
"Prints logged in users in sorted order.","finger | cut -d ""*.log"" -f [number] | sort -u","finger | cut -d Regex -f Number | sort -u",n,n,n,n,n,n,,
"Prints logged in users in sorted order.","w -h | cut -d ""*.log"" -f [number] | sort | uniq -c","w -h | cut -d Regex -f Number | sort | uniq -c",y,n,n,n,y,n,y,n
"Prints long listing of the current directory and top-level directories within, sorted from oldest to newest, with appended indicators.","ls -F -l -t -r [file] [file]","ls -F -l -t -r File File",y,n,y,n,n,n,y,y
"Prints long listing of the current directory and top-level directories within, sorted from oldest to newest, with appended indicators.","ls -F -F -l -t -r [file] [file]","ls -F -F -l -t -r File File",y,n,y,n,n,n,y,y
"Prints long listing of the current directory and top-level directories within, sorted from oldest to newest, with appended indicators.","ls -l -t -r [file] | tr -d [regex]","ls -l -t -r File | tr -d Regex",n,n,n,n,n,n,,
"Prints long listing of the current directory, sorted from oldest to newest, with appended indicators.","ls -F -l -t -r [file]","ls -F -l -t -r File",y,n,y,n,y,n,y,y
"Prints long listing of the current directory, sorted from oldest to newest, with appended indicators.","ls -F -l -t -r [file] [file]","ls -F -l -t -r File File",n,n,n,n,n,n,,
"Prints long listing of the current directory, sorted from oldest to newest, with appended indicators.","ls -l -t -r [file] | tr -d [regex]","ls -l -t -r File | tr -d Regex",n,n,n,n,n,n,,
"Print the most repeated line in ""list2.txt"" that exists in ""list1.txt"" prefixed by the number of occurrences","grep -v ""list2.txt"" ""list1.txt"" | sort | uniq -c | sort -n -r","grep -v Regex File | sort | uniq -c | sort -n -r",n,n,n,n,n,n,,
"Print the most repeated line in ""list2.txt"" that exists in ""list1.txt"" prefixed by the number of occurrences","grep -v ""list2.txt"" ""list1.txt"" | sort | uniq -c","grep -v Regex File | sort | uniq -c",n,n,n,n,n,n,,
"Print the most repeated line in ""list2.txt"" that exists in ""list1.txt"" prefixed by the number of occurrences","sort ""list1.txt"" ""list2.txt"" | uniq -c","sort File File | uniq -c",n,n,n,n,n,n,,
"Print the names of the directories from the paths expanded by the glob pattern /path/to/directory/*","find ""/path/to/directory/*"" -type d","find Path -type d",y,n,y,n,n,n,y,y
"Print the names of the directories from the paths expanded by the glob pattern /path/to/directory/*","find ""/path/to/directory/*"" -maxdepth [quantity] -type d","find Path -maxdepth Quantity -type d",n,n,y,n,n,n,n,n
"Print the names of the directories from the paths expanded by the glob pattern /path/to/directory/*","find ""/path/to/directory/*"" -mindepth [quantity] -type d","find Path -mindepth Quantity -type d",y,n,y,n,y,n,y,n
"Print nothing because 'MYVAR' string doesn`t match with '/[^/]+:' pattern","","",n,n,n,n,n,n,,
"Print nothing because 'MYVAR' string doesn`t match with '/[^/]+:' pattern","","",n,n,n,n,n,n,,
"Print nothing because 'MYVAR' string doesn`t match with '/[^/]+:' pattern","","",n,n,n,n,n,n,,
"Print the number of lines for each *.txt file from the $DIR directory tree","find ""$DIR"" -name ""*.txt"" | xargs -I {} wc -l {}","find Path -name Regex | xargs -I {} wc -l {}",y,y,y,y,y,y,n,n
"Print the number of lines for each *.txt file from the $DIR directory tree","find ""$DIR"" -name ""*.txt"" -print0 | xargs -0 -I {} wc -l {}","find Path -name Regex -print0 | xargs -0 -I {} wc -l {}",y,y,y,y,y,y,n,n
"Print the number of lines for each *.txt file from the $DIR directory tree","find ""$DIR"" -name ""*.txt"" -exec wc -l {} \;","find Path -name Regex -exec wc -l {} \;",y,y,y,y,y,y,n,n
"Print only common strings in content of files 'file1.sorted' and 'file2.sorted'","cat ""file1.sorted"" | cut -d ""file2.sorted"" -f [number]","cat File | cut -d Regex -f Number",n,n,n,n,n,n,,
"Print only common strings in content of files 'file1.sorted' and 'file2.sorted'","cat ""file1.sorted"" | rev | cut -d [regex] -f [number] | cut -d ""file2.sorted"" -f [number] | cut -d [regex] -f [number]","cat File | rev | cut -d Regex -f Number | cut -d Regex -f Number | cut -d Regex -f Number",n,n,n,n,n,n,,
"Print only common strings in content of files 'file1.sorted' and 'file2.sorted'","cat ""file1.sorted"" [file] | cut -d ""file2.sorted"" -f [number]","cat File File | cut -d Regex -f Number",n,n,n,n,n,n,,
"Prints only unique strings of those stored in variables $COMMANDS and $ALIASES.","diff -q ""$ALIASES"" [file] | cut -d ""$COMMANDS"" -f [number] | sort | uniq -c","diff -q File File | cut -d Regex -f Number | sort | uniq -c",n,n,n,n,n,n,,
"Prints only unique strings of those stored in variables $COMMANDS and $ALIASES.","comm -2 -3 ""$COMMANDS"" ""$ALIASES""","comm -2 -3 File File",n,n,n,n,n,n,,
"Prints only unique strings of those stored in variables $COMMANDS and $ALIASES.","comm -1 -3 ""$COMMANDS"" ""$ALIASES""","comm -1 -3 File File",n,n,n,n,n,n,,
"Prints sizes of all top-level folders in a current folder with human-readable format and descending order.","du -k -s -h [file] | sort -n -r","du -k -s -h File | sort -n -r",n,n,y,n,n,n,n,n
"Prints sizes of all top-level folders in a current folder with human-readable format and descending order.","du -k -s [file] | sort -n -r","du -k -s File | sort -n -r",n,n,n,n,n,n,,
"Prints sizes of all top-level folders in a current folder with human-readable format and descending order.","du -s -h [file] | sort -n -r","du -s -h File | sort -n -r",n,n,y,n,n,n,n,n
"Prints string ""0 1 * * * /root/test.sh"" to the terminal, and append it to file '/var/spool/cron/root'","cat ""/root/test.sh"" | tee -a ""/var/spool/cron/root""","cat File | tee -a File",n,n,n,n,n,n,,
"Prints string ""0 1 * * * /root/test.sh"" to the terminal, and append it to file '/var/spool/cron/root'","echo ""/root/test.sh"" | tee -a ""/var/spool/cron/root""","echo Regex | tee -a File",y,n,y,n,y,n,,
"Prints string ""0 1 * * * /root/test.sh"" to the terminal, and append it to file '/var/spool/cron/root'","yes ""/root/test.sh"" | tee -a ""/var/spool/cron/root""","yes Regex | tee -a File",n,n,n,n,n,n,,
"Prints strings with text ""texthere"" in all files recursively in a current folder.","find . -print | xargs -I {} grep ""texthere"" {}","find Path -print | xargs -I {} grep Regex {}",y,y,y,y,y,y,n,n
"Prints strings with text ""texthere"" in all files recursively in a current folder.","find . -exec grep ""texthere"" {} \;","find Path -exec grep Regex {} \;",y,y,y,y,y,y,n,n
"Prints strings with text ""texthere"" in all files recursively in a current folder.","find . -print0 | xargs -0 -I {} grep ""texthere"" {}","find Path -print0 | xargs -0 -I {} grep Regex {}",y,y,y,y,y,y,n,n
"Print the text file paths that match 'needle text' in their contents under 'my_folder' recursively","echo ""my_folder"" | grep ""needle text"" | cut -d [regex] -f [number]","echo Regex | grep Regex | cut -d Regex -f Number",n,n,n,n,n,n,,
"Print the text file paths that match 'needle text' in their contents under 'my_folder' recursively","grep ""needle text"" [file] | cut -d [regex] -f [number] | grep ""my_folder"" | cut -d [regex] -f [number]","grep Regex File | cut -d Regex -f Number | grep Regex | cut -d Regex -f Number",n,n,n,n,n,n,,
"Print the text file paths that match 'needle text' in their contents under 'my_folder' recursively","grep -l ""needle text"" [file] | cut -d [regex] -f [number] | grep ""my_folder"" | cut -d [regex] -f [number]","grep -l Regex File | cut -d Regex -f Number | grep Regex | cut -d Regex -f Number",n,n,n,n,n,n,,
"Print unique lines of sorted ""File 1"" compared with sorted ""File 2""","comm -2 -3 ""File 1"" ""File 2""","comm -2 -3 File File",y,y,y,y,y,y,,
"Print unique lines of sorted ""File 1"" compared with sorted ""File 2""","comm -3 ""File 1"" ""File 2""","comm -3 File File",n,n,n,n,n,n,,
"Print unique lines of sorted ""File 1"" compared with sorted ""File 2""","","",n,n,n,n,n,n,,
"Print unique lines of sorted file ""A.txt"" compared to sorted file ""B.txt""","comm -1 -3 ""*.txt"" ""*.txt""","comm -1 -3 File File",y,n,y,n,y,n,n,n
"Print unique lines of sorted file ""A.txt"" compared to sorted file ""B.txt""","comm -2 -3 ""*.txt"" ""*.txt""","comm -2 -3 File File",y,n,y,n,y,n,n,n
"Print unique lines of sorted file ""A.txt"" compared to sorted file ""B.txt""","comm -1 -2 ""*.txt"" ""*.txt""","comm -1 -2 File File",n,n,n,n,n,n,,
"Prints what day it was 222 days ago","","",n,n,n,n,n,n,,
"Prints what day it was 222 days ago","","",n,n,n,n,n,n,,
"Prints what day it was 222 days ago","","",n,n,n,n,n,n,,
"Print which files differ in ""/tmp/dir1"" and ""/tmp/dir2"" recursively","diff -q -r ""/tmp/dir1"" ""/tmp/dir2""","diff -q -r File File",y,y,y,y,y,y,y,y
"Print which files differ in ""/tmp/dir1"" and ""/tmp/dir2"" recursively","diff -r -q ""/tmp/dir1"" ""/tmp/dir2""","diff -r -q File File",y,y,y,y,y,y,y,y
"Print which files differ in ""/tmp/dir1"" and ""/tmp/dir2"" recursively","diff --brief -r ""/tmp/dir1"" ""/tmp/dir2""","diff --brief -r File File",y,y,y,y,y,y,y,y
"Print your/dir if it's empty","find ""your/dir"" -prune -empty","find Path -prune -empty",y,y,y,y,y,y,,
"Print your/dir if it's empty","find ""your/dir"" -maxdepth [quantity] -empty","find Path -maxdepth Quantity -empty",y,n,y,n,y,n,n,n
"Print your/dir if it's empty","find ""your/dir"" -maxdepth [quantity] -empty -exec echo {} [regex] [regex] \;","find Path -maxdepth Quantity -empty -exec echo {} Regex Regex \;",n,n,y,n,n,n,n,n
"Process each file beginning with ""file"" in the current directory as an argument to ""bash script.sh""","find ""bash script.sh"" -maxdepth [quantity] -name ""file"" -print0 | xargs -0 -I {} echo {}","find Path -maxdepth Quantity -name Regex -print0 | xargs -0 -I {} echo {}",n,n,n,n,n,n,,
"Process each file beginning with ""file"" in the current directory as an argument to ""bash script.sh""","find ""bash script.sh"" -maxdepth [quantity] -name ""*"" -print0 | xargs -0 -I {} grep ""file"" {}","find Path -maxdepth Quantity -name Regex -print0 | xargs -0 -I {} grep Regex {}",n,n,n,n,n,n,,
"Process each file beginning with ""file"" in the current directory as an argument to ""bash script.sh""","find ""bash script.sh"" -maxdepth [quantity] -name ""file"" -print0 | xargs -0 -I {} echo [regex] {}","find Path -maxdepth Quantity -name Regex -print0 | xargs -0 -I {} echo Regex {}",n,n,n,n,n,n,,
"Puts the job 1 in the background.","jobs | cut -d [regex] -f [number] | head -n 1","jobs | cut -d Regex -f Number | head -n Quantity",n,n,n,n,n,n,,
"Puts the job 1 in the background.","jobs | cut -d 1 -f [number] | sort | uniq","jobs | cut -d Regex -f Number | sort | uniq",n,n,n,n,n,n,,
"Puts the job 1 in the background.","jobs | cut -d [regex] -f [number] | cut -d [regex] -f [number] | head -n 1","jobs | cut -d Regex -f Number | cut -d Regex -f Number | head -n Quantity",n,n,n,n,n,n,,
"Read a line from standard input and save each word in the bash array variable ""arr""","read -a ""arr""","read -a Regex",y,y,y,y,y,y,y,y
"Read a line from standard input and save each word in the bash array variable ""arr""","read $(grep ""arr"" [file] | cut -d [regex] -f [number] -d [regex] | tr -s [regex] | cut -d [regex] -f [number])","read $( grep Regex File | cut -d Regex -f Number -d Regex | tr -s Regex | cut -d Regex -f Number )",n,n,n,n,n,n,,
"Read a line from standard input and save each word in the bash array variable ""arr""","read $(grep ""arr"" [file] | cut -d [regex] -f [number] -d [regex] | xargs -L [quantity] -I {} wc -l {})","read $( grep Regex File | cut -d Regex -f Number -d Regex | xargs -L Quantity -I {} wc -l {} )",n,n,n,n,n,n,,
"Read a line from standard input into variable ""message"" with escaped prompt ""Please Enter a Message: \n\b""","read -p ""Please Enter a Message \n\b"" ""message""","read -p Regex Regex",y,y,n,n,y,y,y,y
"Read a line from standard input into variable ""message"" with escaped prompt ""Please Enter a Message: \n\b""","read -r -p ""Please Enter a Message \n\b"" ""message""","read -r -p Regex Regex",n,n,n,n,n,n,,
"Read a line from standard input into variable ""message"" with escaped prompt ""Please Enter a Message: \n\b""","read -p $(grep ""Please Enter a Message \n\b"" ""message"")","read -p $( grep Regex File )",n,n,n,n,n,n,,
"Read the first line of output from ""du -s $i"" into variable ""k"" in ksh","read ""k"" ""du -s $i"" [regex] [regex] [regex] [regex] [regex] [regex] [regex] [regex] [regex]","read Regex Regex Regex Regex Regex Regex Regex Regex Regex Regex Regex",n,n,n,n,n,n,,
"Read the first line of output from ""du -s $i"" into variable ""k"" in ksh","read ""k"" ""du -s $i"" [regex] [regex] [regex] [regex] [regex] [regex] [regex] [regex] [regex] [regex]","read Regex Regex Regex Regex Regex Regex Regex Regex Regex Regex Regex Regex",n,n,n,n,n,n,,
"Read the first line of output from ""du -s $i"" into variable ""k"" in ksh","read ""k"" ""du -s $i"" [regex] [regex] [regex] [regex] [regex] [regex] [regex] [regex]","read Regex Regex Regex Regex Regex Regex Regex Regex Regex Regex",n,n,n,n,n,n,,
"Read standard input and replace any repeated characters except spaces with a single instance","read -s -p [regex]","read -s -p Regex",n,n,n,n,n,n,,
"Read standard input and replace any repeated characters except spaces with a single instance","read -r -n [quantity]","read -r -n Quantity",n,n,n,n,n,y,n,n
"Read standard input and replace any repeated characters except spaces with a single instance","read -d [regex] -s -n [quantity]","read -d Regex -s -n Quantity",n,n,n,n,n,y,n,n
"Read standard input until a null character is found and save the result in variable ""f2""","read -d ""f2"" [regex]","read -d Regex Regex",y,n,y,n,y,n,y,y
"Read standard input until a null character is found and save the result in variable ""f2""","read -r -d ""f2""","read -r -d Regex",n,n,n,n,n,n,,
"Read standard input until a null character is found and save the result in variable ""f2""","read -d $(date -d ""f2"" __SP__UNK)","read -d $( date -d Regex __SP__UNK )",n,n,n,n,n,n,,
"Recursively changes group ownership of everything within a '/path/to/repo' to 'GROUP'.","chgrp -R ""GROUP"" ""/path/to/repo""","chgrp -R Regex File",y,y,y,y,y,y,y,y
"Recursively changes group ownership of everything within a '/path/to/repo' to 'GROUP'.","chown -R ""GROUP"" ""/path/to/repo""","chown -R Regex File",y,n,y,n,n,n,y,n
"Recursively changes group ownership of everything within a '/path/to/repo' to 'GROUP'.","chgrp -R [regex] ""/path/to/repo"" | xargs -I {} chgrp ""GROUP"" {}","chgrp -R Regex File | xargs -I {} chgrp Regex {}",n,n,y,n,n,n,n,n
"Recursively changes group ownership of everything within a current folder to 'admin'.","chgrp -R ""admin"" [file]","chgrp -R Regex File",y,n,y,n,y,n,,
"Recursively changes group ownership of everything within a current folder to 'admin'.","ls -R | grep ""admin"" | xargs -n [quantity] -I {} chgrp [regex] {}","ls -R | grep Regex | xargs -n Quantity -I {} chgrp Regex {}",n,n,y,n,n,n,n,n
"Recursively changes group ownership of everything within a current folder to 'admin'.","ls -R | grep ""admin"" | xargs -I {} chgrp [regex] {}","ls -R | grep Regex | xargs -I {} chgrp Regex {}",n,n,y,n,n,n,n,n
"Recursively change owner of all files in ""folder"" to ""user_name""","chown -R ""user_name"" ""folder""","chown -R Regex File",y,y,y,y,y,y,y,y
"Recursively change owner of all files in ""folder"" to ""user_name""","chown ""user_name"" ""folder"" -R","chown Regex File -R",y,y,y,y,y,y,y,y
"Recursively change owner of all files in ""folder"" to ""user_name""","find ""folder"" -type f -print0 | xargs -0 -I {} chown [regex] {} | xargs -I {} chown ""user_name"" {}","find Path -type f -print0 | xargs -0 -I {} chown Regex {} | xargs -I {} chown Regex {}",n,n,y,n,n,n,n,n
"Recursively change the owner to ""$USER"" and group to ""$GROUP"" of ""/var/lib/cassandra""","chown -R ""$GROUP"" ""/var/lib/cassandra"" ""$USER""","chown -R Regex File File",n,n,n,n,n,n,,
"Recursively change the owner to ""$USER"" and group to ""$GROUP"" of ""/var/lib/cassandra""","chown -R ""$GROUP"" ""/var/lib/cassandra"" ""$USER"" [file] [file]","chown -R Regex File File File File",n,n,n,n,n,n,,
"Recursively change the owner to ""$USER"" and group to ""$GROUP"" of ""/var/lib/cassandra""","chown -R ""$GROUP"" ""/var/lib/cassandra"" ""$USER"" [file]","chown -R Regex File File File",n,n,n,n,n,n,,
"Recursively change the owner to ""${JBOSS_USER}"" of ""$JBOSS_LOG_DIR""","chown -R ""${JBOSS_USER}"" ""$JBOSS_LOG_DIR""","chown -R Regex File",y,y,y,y,y,y,y,y
"Recursively change the owner to ""${JBOSS_USER}"" of ""$JBOSS_LOG_DIR""","chown ""${JBOSS_USER}"" -R ""$JBOSS_LOG_DIR""","chown Regex -R File",y,y,y,y,y,y,y,y
"Recursively change the owner to ""${JBOSS_USER}"" of ""$JBOSS_LOG_DIR""","chown ""$JBOSS_LOG_DIR"" ""${JBOSS_USER}"" -R","chown Regex File -R",y,n,y,y,y,n,y,n
"Recursively copy ""emptydir"" to ""destination/newdir""","cp -R ""emptydir"" ""destination/newdir""","cp -R File File",y,y,y,y,y,y,y,y
"Recursively copy ""emptydir"" to ""destination/newdir""","rsync -r -v -v ""emptydir"" ""destination/newdir""","rsync -r -v -v File File",y,y,y,y,y,y,y,y
"Recursively copy ""emptydir"" to ""destination/newdir""","cp -r ""emptydir"" ""destination/newdir""","cp -r File File",y,y,y,y,y,y,y,y
"Recursively copy /path/foo on host ""prod"" to local directory ""/home/user/Desktop"", connecting as ssh username corresponding to local username.","rsync -r -v -z scp scp -3 ""/path/foo"" ""/home/user/Desktop"" ""prod""","rsync -r -v -z File File File File File File",n,n,n,n,n,n,,
"Recursively copy /path/foo on host ""prod"" to local directory ""/home/user/Desktop"", connecting as ssh username corresponding to local username.","rsync -r -v -z scp scp ""/path/foo"" ""prod"" ""/home/user/Desktop""","rsync -r -v -z File File File File File",n,n,n,n,n,n,,
"Recursively copy /path/foo on host ""prod"" to local directory ""/home/user/Desktop"", connecting as ssh username corresponding to local username.","rsync -r -v -z scp -3 ""/path/foo"" ""prod"" ""/home/user/Desktop""","rsync -r -v -z File File File File File",n,n,n,n,n,n,,
"Recursively copy all files with names ending with .txt from dir_1 to the same location within copy_of_dir_1","find "".txt"" -type f -name ""dir_1"" -exec cp {} ""copy_of_dir_1"" \;","find Path -type f -name Regex -exec cp {} File \;",y,n,y,n,y,n,y,n
"Recursively copy all files with names ending with .txt from dir_1 to the same location within copy_of_dir_1","find ""dir_1"" -name ""*.txt"" -exec cp {} ""copy_of_dir_1"" \;","find Path -name Regex -exec cp {} File \;",y,y,y,y,y,n,y,y
"Recursively copy all files with names ending with .txt from dir_1 to the same location within copy_of_dir_1","find ""dir_1"" -iname ""*.txt"" -exec cp {} ""copy_of_dir_1"" \;","find Path -iname Regex -exec cp {} File \;",y,y,y,y,y,n,y,y
"Recursively copy local file/directory ""/copy/from/path"" to remote location ""/copy/to/path"" on host ""server"", connecting as ssh user ""user"" and using identity key file ""/path/to/your/.pemkey"" instead of the default in ~/.ssh/","","",n,n,n,n,n,n,,
"Recursively copy local file/directory ""/copy/from/path"" to remote location ""/copy/to/path"" on host ""server"", connecting as ssh user ""user"" and using identity key file ""/path/to/your/.pemkey"" instead of the default in ~/.ssh/","","",n,n,n,n,n,n,,
"Recursively copy local file/directory ""/copy/from/path"" to remote location ""/copy/to/path"" on host ""server"", connecting as ssh user ""user"" and using identity key file ""/path/to/your/.pemkey"" instead of the default in ~/.ssh/","","",n,n,n,n,n,n,,
"Recursively from current folder searches only files that names match "".*xxx"" pattern, ignores binary files and prints file name before every string that contains ""my Text to grep"".","find . -name "".*xxx"" | xargs -I {} grep ""my Text to grep"" {}","find Path -name Regex | xargs -I {} grep Regex {}",n,n,n,n,n,n,,
"Recursively from current folder searches only files that names match "".*xxx"" pattern, ignores binary files and prints file name before every string that contains ""my Text to grep"".","find . -name "".*xxx"" -exec grep -l ""my Text to grep"" {} +","find Path -name Regex -exec grep -l Regex {} +",n,n,n,n,n,n,,
"Recursively from current folder searches only files that names match "".*xxx"" pattern, ignores binary files and prints file name before every string that contains ""my Text to grep"".","find . -name "".*xxx"" | xargs -I {} grep -l ""my Text to grep"" {}","find Path -name Regex | xargs -I {} grep -l Regex {}",n,n,n,n,n,n,,
"recursively look for files ending in either .py or .py.server","find "".py"" -name "".py.server"" -or -name ""*""","find Path -name Regex -or -name Regex",y,n,y,n,y,n,y,n
"recursively look for files ending in either .py or .py.server","find "".py"" -type f -regex "".py.server"" | xargs -I {} grep '.*' {}","find Path -type f -regex Regex | xargs -I {} grep Regex {}",n,n,n,n,n,n,,
"recursively look for files ending in either .py or .py.server","find "".py"" -type f -name ""*"" -or -name ""*"" -or -name ""*"" -or -name "".py.server"" -or -name ""*""","find Path -type f -name Regex -or -name Regex -or -name Regex -or -name Regex -or -name Regex",y,n,y,n,n,n,y,n
"Recursively print all files and directories in the current directory tree including hidden files","tree [directory]","tree Directory",n,n,n,n,n,n,,
"Recursively print all files and directories in the current directory tree including hidden files","find . -type f -print0 | xargs -0 -I {} ls -l -t -r {} | tail -n [quantity]","find Path -type f -print0 | xargs -0 -I {} ls -l -t -r {} | tail -n Quantity",n,n,n,n,n,n,,
"Recursively print all files and directories in the current directory tree including hidden files","find . -type f -print0 | xargs -0 -I {} ls -l -t -r {} | xargs -n [quantity] -I {} echo {}","find Path -type f -print0 | xargs -0 -I {} ls -l -t -r {} | xargs -n Quantity -I {} echo {}",n,n,n,n,n,n,,
"Recursively search current directory for all files with name ending with "".t1"", change this to .t2","find "".t2"" -name "".t1"" | xargs -I {} rename [regex] {}","find Path -name Regex | xargs -I {} rename Regex {}",y,n,y,n,y,n,,
"Recursively search current directory for all files with name ending with "".t1"", change this to .t2","find "".t2"" -name "".t1"" -print0 | xargs -0 -I {} rename [regex] {}","find Path -name Regex -print0 | xargs -0 -I {} rename Regex {}",y,n,y,n,y,n,y,n
"Recursively search current directory for all files with name ending with "".t1"", change this to .t2","find "".t2"" -name "".t1"" -exec rename [regex] {} \;","find Path -name Regex -exec rename Regex {} \;",y,n,y,n,y,n,,
"Recursively search for everything under the current directory, displaying human-readable file type description for each entry.","find . -exec file {} \; | grep '.*'","find Path -exec file {} \; | grep Regex",y,y,y,y,y,y,y,y
"Recursively search for everything under the current directory, displaying human-readable file type description for each entry.","find . | xargs -I {} file {}","find Path | xargs -I {} file {}",y,y,y,y,y,y,y,y
"Recursively search for everything under the current directory, displaying human-readable file type description for each entry.","find . -print0 | xargs -0 -I {} file {}","find Path -print0 | xargs -0 -I {} file {}",y,y,y,y,y,y,y,y
"Recursively set all permissions under ""../tools"" to 777","chmod 777 ""../tools"" -R","chmod Permission File -R",y,y,y,y,y,y,y,y
"Recursively set all permissions under ""../tools"" to 777","chmod 777 $(chmod [permission] ""../tools"")","chmod Permission $( chmod Permission File )",n,n,n,n,n,n,,
"Recursively set all permissions under ""../tools"" to 777","chmod 777 $(find ""../tools"" -type f)","chmod Permission $( find Path -type f )",n,n,n,n,n,n,,
"Recursively set all permissions under ""/whatever/your/directory/is"" to 755","chmod 755 ""/whatever/your/directory/is"" -R","chmod Permission File -R",y,y,y,y,y,y,y,y
"Recursively set all permissions under ""/whatever/your/directory/is"" to 755","chmod 755 $(chmod [permission] ""/whatever/your/directory/is"")","chmod Permission $( chmod Permission File )",n,n,n,n,n,n,,
"Recursively set all permissions under ""/whatever/your/directory/is"" to 755","chmod 755 $(find ""/whatever/your/directory/is"" -type f)","chmod Permission $( find Path -type f )",n,n,n,n,n,n,,
"Reformat date ""Sat Aug 09 13:37:14 2014 +1100"" according to format string ""%a %b %d %H:%M:%S %Y %z""","echo ""%a %b %d %H:%M:%S %Y %z"" | rev | cut -d ""Sat Aug -- -------- ---- +1100"" -f [number] | rev","echo Regex | rev | cut -d Regex -f Number | rev",n,n,n,n,n,n,,
"Reformat date ""Sat Aug 09 13:37:14 2014 +1100"" according to format string ""%a %b %d %H:%M:%S %Y %z""","echo ""%a %b %d %H:%M:%S %Y %z"" | rev | cut -d ""Sat Aug -- -------- ---- +1100"" -f [number] | xargs -I {} date __SP__UNK","echo Regex | rev | cut -d Regex -f Number | xargs -I {} date __SP__UNK",n,n,n,n,n,n,,
"Reformat date ""Sat Aug 09 13:37:14 2014 +1100"" according to format string ""%a %b %d %H:%M:%S %Y %z""","echo ""%a %b %d %H:%M:%S %Y %z"" | rev | cut -d ""Sat Aug -- -------- ---- +1100"" -f [number] | cut -d [regex] -f [number] | rev","echo Regex | rev | cut -d Regex -f Number | cut -d Regex -f Number | rev",n,n,n,n,n,n,,
"remote copy all text files from one location to another","find . -type f -name ""*"" -exec cp {} [file] \;","find Path -type f -name Regex -exec cp {} File \;",n,n,n,n,n,n,,
"remote copy all text files from one location to another","find . -type f -exec cp {} [file] \;","find Path -type f -exec cp {} File \;",n,n,n,n,n,n,,
"remote copy all text files from one location to another","find . -name ""*"" -exec cp {} [file] \;","find Path -name Regex -exec cp {} File \;",n,n,n,n,n,n,,
"Remount ""/system"" with read and write permission","mount ""/system"" -o __SP__UNK","mount Regex -o __SP__UNK",n,n,n,n,y,n,n,n
"Remount ""/system"" with read and write permission","mount -o __SP__UNK ""/system""","mount -o __SP__UNK Regex",n,n,n,n,y,n,n,n
"Remount ""/system"" with read and write permission","mount -o __SP__UNK ""/system"" [regex]","mount -o __SP__UNK Regex Regex",n,n,n,n,y,n,n,n
"Remount ""yaffs2"" filesystem ""/dev/block/mtdblk4"" to ""/system"" as read and write only","mount -o __SP__UNK ""yaffs2"" ""/dev/block/mtdblk4"" | tee ""/system""","mount -o __SP__UNK Regex Regex | tee File",n,n,n,n,n,n,,
"Remount ""yaffs2"" filesystem ""/dev/block/mtdblk4"" to ""/system"" as read and write only","mount -o __SP__UNK ""/system"" ""/dev/block/mtdblk4"" ""yaffs2""","mount -o __SP__UNK Regex Regex Directory",n,n,n,n,n,n,,
"Remount ""yaffs2"" filesystem ""/dev/block/mtdblk4"" to ""/system"" as read and write only","mount ""yaffs2"" ""/dev/block/mtdblk4"" -o __SP__UNK -t __SP__UNK -o __SP__UNK ""/system""","mount Regex Regex -o __SP__UNK -t __SP__UNK -o __SP__UNK Directory",n,n,n,n,n,n,,
"Removes '/var/lib/mongodb/mongod.lock' in 'sudo' mode.","rm -r """" [file] ""/var/lib/mongodb/mongod.lock"" [file] [file]","rm -r File File File File File",n,n,n,n,n,n,,
"Removes '/var/lib/mongodb/mongod.lock' in 'sudo' mode.","rm -r """" [file] ""/var/lib/mongodb/mongod.lock"" [file] [file] [file]","rm -r File File File File File File",n,n,n,n,n,n,,
"Removes '/var/lib/mongodb/mongod.lock' in 'sudo' mode.","rm -r """" [file] ""/var/lib/mongodb/mongod.lock"" [file]","rm -r File File File File",n,n,n,n,n,n,,
"Removes 'foo' file.","rm [file] ""foo"" [file]","rm File File File",n,n,n,n,n,n,,
"Removes 'foo' file.","rm [file] ""foo""","rm File File",n,n,n,n,n,n,,
"Removes 'foo' file.","rm -r ""foo""","rm -r File",y,y,y,y,n,n,y,y
"Remove all *.swp files under current directory ensuring white space safety","find . -name ""*.swp"" -print0 | xargs -0 -I {} rm {}","find Path -name Regex -print0 | xargs -0 -I {} rm {}",y,y,y,y,y,y,,
"Remove all *.swp files under current directory ensuring white space safety","find . -name ""*.swp"" -print0 | xargs -0 -n [quantity] -I {} rm {}","find Path -name Regex -print0 | xargs -0 -n Quantity -I {} rm {}",y,n,y,n,y,n,n,n
"Remove all *.swp files under current directory ensuring white space safety","find . -name ""*.swp"" -print0 | xargs -0 -p -I {} rm {}","find Path -name Regex -print0 | xargs -0 -p -I {} rm {}",y,n,y,n,y,y,n,n
"Remove all .txt files from the /full/path/dir directory tree","find ""/full/path/dir"" -name ""*.txt"" | xargs -I {} rm {}","find Path -name Regex | xargs -I {} rm {}",y,y,y,y,y,y,n,n
"Remove all .txt files from the /full/path/dir directory tree","find ""/full/path/dir"" -name ""*.txt"" -print0 | xargs -0 -I {} rm {}","find Path -name Regex -print0 | xargs -0 -I {} rm {}",y,y,y,y,y,y,n,n
"Remove all .txt files from the /full/path/dir directory tree","find ""/full/path/dir"" -type f -name ""*.txt"" -exec rm -f {} \;","find Path -type f -name Regex -exec rm -f {} \;",y,y,y,y,y,y,y,y
"Remove all directories in and below the current directory","find . -type d -exec rm -r -f {} \;","find Path -type d -exec rm -r -f {} \;",y,y,y,y,y,y,y,y
"Remove all directories in and below the current directory","find . -type d -print0 | xargs -0 -I {} rm -r -f {}","find Path -type d -print0 | xargs -0 -I {} rm -r -f {}",y,y,y,y,y,y,y,y
"Remove all directories in and below the current directory","find . -type d -exec rm -r -f {} +","find Path -type d -exec rm -r -f {} +",y,y,y,y,y,y,y,y
"Removes all empty folders under path '/foo/bar' and the path itself.","find ""/foo/bar"" -type d -empty -exec rmdir {} \;","find Path -type d -empty -exec rmdir {} \;",n,n,y,y,n,n,n,n
"Removes all empty folders under path '/foo/bar' and the path itself.","find ""/foo/bar"" -type d -print0 | xargs -0 -I {} rmdir {}","find Path -type d -print0 | xargs -0 -I {} rmdir {}",n,n,y,y,n,n,n,n
"Removes all empty folders under path '/foo/bar' and the path itself.","find ""/foo/bar"" -type d -empty -print0 | xargs -0 -I {} rmdir {}","find Path -type d -empty -print0 | xargs -0 -I {} rmdir {}",n,n,y,y,n,n,n,n
"Remove all files and directories called ""test"" from the current directory tree","find . -name ""test"" -exec rm {} \;","find Path -name Regex -exec rm {} \;",n,n,n,n,y,n,n,n
"Remove all files and directories called ""test"" from the current directory tree","find . -name ""test"" -delete","find Path -name Regex -delete",y,n,y,y,y,n,n,n
"Remove all files and directories called ""test"" from the current directory tree","find . -name ""test"" | xargs -I {} rm {}","find Path -name Regex | xargs -I {} rm {}",n,n,n,n,n,n,,
"Removes all files but $1 newest ones from current folder.","ls -1 | grep -v ""$1"" | xargs -I {} rm {}","ls -1 | grep -v Regex | xargs -I {} rm {}",n,n,n,n,n,n,,
"Removes all files but $1 newest ones from current folder.","ls -t | grep -v ""$1"" | xargs -I {} rm {}","ls -t | grep -v Regex | xargs -I {} rm {}",n,n,n,n,n,n,,
"Removes all files but $1 newest ones from current folder.","ls ""$1"" | xargs -I {} rm {}","ls File | xargs -I {} rm {}",n,n,n,n,n,n,,
"Removes all files from current folder but 3 newest ones","ls -t -r | head -n -3 | xargs -I {} rm {}","ls -t -r | head -n -Quantity | xargs -I {} rm {}",n,n,y,y,n,n,n,n
"Removes all files from current folder but 3 newest ones","ls -t -r | head -n -3 | xargs -I {} rm {}","ls -t -r | head -n -Quantity | xargs -I {} rm {}",n,n,y,y,n,n,n,n
"Removes all files from current folder but 3 newest ones","ls -t -r | head -n -3 | xargs -I {} rm -r -f {}","ls -t -r | head -n -Quantity | xargs -I {} rm -r -f {}",n,n,y,y,n,n,n,n
"Remove all files named `junk' and `dummy'","find ""dummy"" -name ""junk"" -exec rm {} \;","find Path -name Regex -exec rm {} \;",n,n,n,n,n,n,,
"Remove all files named `junk' and `dummy'","find ""dummy"" -name ""junk"" | xargs -I {} rm {}","find Path -name Regex | xargs -I {} rm {}",n,n,n,n,n,n,,
"Remove all files named `junk' and `dummy'","find ""dummy"" -name ""junk"" -print0 | xargs -0 -I {} rm {}","find Path -name Regex -print0 | xargs -0 -I {} rm {}",n,n,n,n,n,n,,
"Remove all files that end with 'prefs copy' in their names under '/mnt/zip' directory tree","find ""/mnt/zip"" -name ""prefs copy"" -exec rm {} \;","find Path -name Regex -exec rm {} \;",y,n,y,n,y,y,n,n
"Remove all files that end with 'prefs copy' in their names under '/mnt/zip' directory tree","find ""/mnt/zip"" -name ""prefs copy"" | xargs -I {} rm {}","find Path -name Regex | xargs -I {} rm {}",y,n,y,n,y,y,n,n
"Remove all files that end with 'prefs copy' in their names under '/mnt/zip' directory tree","find ""/mnt/zip"" -name ""prefs copy"" -print0 | xargs -0 -I {} rm {}","find Path -name Regex -print0 | xargs -0 -I {} rm {}",y,n,y,n,y,y,n,n
"remove all the log files which have not been modified in the last 5 days","find . -mtime +5 -name ""*.log"" -exec rm {} \;","find Path -mtime +Timespan -name Regex -exec rm {} \;",n,n,y,y,n,n,n,n
"remove all the log files which have not been modified in the last 5 days","find . -name ""*.log"" -mtime +5 -exec rm {} \;","find Path -name Regex -mtime +Timespan -exec rm {} \;",n,n,y,y,n,n,n,n
"remove all the log files which have not been modified in the last 5 days","find . -type f -mtime +5 -name ""*.log"" -exec rm {} \;","find Path -type f -mtime +Timespan -name Regex -exec rm {} \;",y,y,y,y,n,n,y,y
"Remove all regular files from the current directory tree that were modified a day ago","find . -type f -mtime 1 -exec rm -f {} \;","find Path -type f -mtime Timespan -exec rm -f {} \;",y,y,y,y,y,y,y,y
"Remove all regular files from the current directory tree that were modified a day ago","find . -mtime 1 -type f -exec rm {} \;","find Path -mtime Timespan -type f -exec rm {} \;",y,y,y,y,y,y,y,y
"Remove all regular files from the current directory tree that were modified a day ago","find . -type f -mtime 1 -exec rm {} \;","find Path -type f -mtime Timespan -exec rm {} \;",y,y,y,y,y,y,y,y
"Remove all vmware-*.log files/directories under current directory","find . -name ""vmware-*.log"" -exec rm {} \;","find Path -name Regex -exec rm {} \;",n,n,n,n,n,n,,
"Remove all vmware-*.log files/directories under current directory","find . -name ""vmware-*.log"" -print0 | xargs -0 -I {} rm -r -f {}","find Path -name Regex -print0 | xargs -0 -I {} rm -r -f {}",y,y,y,y,y,y,y,y
"Remove all vmware-*.log files/directories under current directory","find . -name ""vmware-*.log"" | xargs -I {} rm {}","find Path -name Regex | xargs -I {} rm {}",n,n,n,n,n,n,,
"Remove duplicates in variable ""variable"" and preserve the order","rm -r -f ""variable""","rm -r -f File",n,n,n,n,n,n,,
"Remove duplicates in variable ""variable"" and preserve the order","finger | cut -d ""variable"" -f [number] | tr [regex] [regex]","finger | cut -d Regex -f Number | tr Regex Regex",n,n,n,n,n,n,,
"Remove duplicates in variable ""variable"" and preserve the order","echo ""variable"" | rev | cut -d [regex] -f [number] | rev","echo Regex | rev | cut -d Regex -f Number | rev",n,n,n,n,n,n,,
"Removes empty folder 'symlink'.","rmdir ""symlink""","rmdir Directory",y,y,y,y,y,y,y,y
"Removes empty folder 'symlink'.","find ""symlink"" -depth -empty -type d -print0 | xargs -0 -I {} rmdir {}","find Path -depth -empty -type d -print0 | xargs -0 -I {} rmdir {}",n,n,n,n,y,y,n,n
"Removes empty folder 'symlink'.","find ""symlink"" -maxdepth [quantity] -empty -type d -print0 | xargs -0 -I {} rmdir {}","find Path -maxdepth Quantity -empty -type d -print0 | xargs -0 -I {} rmdir {}",n,n,n,n,y,y,n,n
"Remove files in current directory according to the filenames found in ~/clang+llvm-3.3/bin/","find ""~/clang+llvm-3.3/bin/"" -maxdepth [quantity] -name ""*"" -exec rm -f {} \;","find Path -maxdepth Quantity -name Regex -exec rm -f {} \;",n,n,n,n,n,n,,
"Remove files in current directory according to the filenames found in ~/clang+llvm-3.3/bin/","find ""~/clang+llvm-3.3/bin/"" -maxdepth [quantity] -name ""*"" -print0 | xargs -0 -I {} rm {}","find Path -maxdepth Quantity -name Regex -print0 | xargs -0 -I {} rm {}",n,n,n,n,n,n,,
"Remove files in current directory according to the filenames found in ~/clang+llvm-3.3/bin/","find ""~/clang+llvm-3.3/bin/"" -name ""*"" -exec rm -f {} \;","find Path -name Regex -exec rm -f {} \;",n,n,n,n,n,n,,
"Removes files ~/.android/adbkey and ~/.android/adbkey.pub without prompting.","rm -r -f ""---android/adbkey"" ""---android/adbkey.pub"" [file] [file] [file] [file] [file]","rm -r -f File File File File File File File",n,n,n,n,n,n,,
"Removes files ~/.android/adbkey and ~/.android/adbkey.pub without prompting.","rm -r -f ""---android/adbkey"" ""---android/adbkey.pub"" [file] [file] [file] [file]","rm -r -f File File File File File File",n,n,n,n,n,n,,
"Removes files ~/.android/adbkey and ~/.android/adbkey.pub without prompting.","rm ""---android/adbkey"" [file] ""---android/adbkey.pub""","rm File File File",n,n,n,n,n,n,,
"Remove the first 13 characters of each "".txt"" filename in the ""/tmp"" directory tree and number the output","find ""/tmp"" -name ""*.txt"" | rev | cut -d [regex] -f [number] | rev | cut -d [regex] -f 13 | rev","find Path -name Regex | rev | cut -d Regex -f Number | rev | cut -d Regex -f Number | rev",n,n,n,n,n,n,,
"Remove the first 13 characters of each "".txt"" filename in the ""/tmp"" directory tree and number the output","find ""/tmp"" -maxdepth 13 -name ""*.txt"" -print0 | xargs -0 -I {} rm -r -f {}","find Path -maxdepth Quantity -name Regex -print0 | xargs -0 -I {} rm -r -f {}",n,n,n,n,n,n,,
"Remove the first 13 characters of each "".txt"" filename in the ""/tmp"" directory tree and number the output","find ""/tmp"" -name ""*.txt"" | rev | cut -d [regex] -f [number] | rev | cut -c 13 | rev","find Path -name Regex | rev | cut -d Regex -f Number | rev | cut -c Number | rev",n,n,n,n,n,n,,
"Remove the first 7 characters of every line in the output of ""history""","finger | cut -d ""history"" -f 7 | rev","finger | cut -d Regex -f Number | rev",n,n,n,n,n,n,,
"Remove the first 7 characters of every line in the output of ""history""","finger | cut -d ""history"" -f [number] | rev | cut -d [regex] -f 7 | rev","finger | cut -d Regex -f Number | rev | cut -d Regex -f Number | rev",n,n,n,n,n,n,,
"Remove the first 7 characters of every line in the output of ""history""","finger | cut -d ""history"" -f [number] | rev | cut -c 7 | rev","finger | cut -d Regex -f Number | rev | cut -c Number | rev",n,n,n,n,n,n,,
"Remove the last 3 characters from 987654321, keeping only 987654","echo 987654 | rev | cut -d 987654321 -f 3 | rev","echo Regex | rev | cut -d Regex -f Number | rev",n,n,n,n,n,n,,
"Remove the last 3 characters from 987654321, keeping only 987654","echo 987654 | rev | cut -d 987654321 --complement -f 3 | rev","echo Regex | rev | cut -d Regex --complement -f Number | rev",n,n,n,n,n,n,,
"Remove the last 3 characters from 987654321, keeping only 987654","rev [file] | rev | cut -d 987654321 -f 987654 | rev | cut -c 3 | rev","rev File | rev | cut -d Regex -f Number | rev | cut -c Number | rev",n,n,n,n,n,n,,
"Removes only lowest level subfolders from current directory tree (folders without files and another folders within).","find . -mindepth [quantity] -maxdepth [quantity] -type d | xargs -I {} rmdir {}","find Path -mindepth Quantity -maxdepth Quantity -type d | xargs -I {} rmdir {}",n,n,n,n,n,n,,
"Removes only lowest level subfolders from current directory tree (folders without files and another folders within).","find . -mindepth [quantity] -maxdepth [quantity] -type d | xargs -I {} rm -f {}","find Path -mindepth Quantity -maxdepth Quantity -type d | xargs -I {} rm -f {}",n,n,n,n,n,n,,
"Removes only lowest level subfolders from current directory tree (folders without files and another folders within).","find . -mindepth [quantity] -maxdepth [quantity] -type d | xargs -I {} rm -r -f {}","find Path -mindepth Quantity -maxdepth Quantity -type d | xargs -I {} rm -r -f {}",n,n,n,n,n,n,,
"Remove the passphrase from user's ssh key without prompting.","rm -i [file]","rm -i File",n,n,n,n,n,n,,
"Remove the passphrase from user's ssh key without prompting.","echo -e [regex] | xargs -I {} rm {}","echo -e Regex | xargs -I {} rm {}",n,n,n,n,n,n,,
"Remove the passphrase from user's ssh key without prompting.","finger [regex] | cut -d [regex] -f [number] | rev","finger Regex | cut -d Regex -f Number | rev",n,n,n,n,n,n,,
"Remove the regular files from the current directory tree that are newer than /tmp/date.start but not newer than /tmp/date.end","find ""/tmp/date.start"" -newer [file] -and ! -newer ""/tmp/date.end"" -delete","find Path -newer File -and ! -newer File -delete",n,n,n,n,n,n,,
"Remove the regular files from the current directory tree that are newer than /tmp/date.start but not newer than /tmp/date.end","find ""/tmp/date.start"" -newer [file] -and ! -newer ""/tmp/date.end"" -exec rm {} \;","find Path -newer File -and ! -newer File -exec rm {} \;",n,n,y,n,n,n,n,n
"Remove the regular files from the current directory tree that are newer than /tmp/date.start but not newer than /tmp/date.end","find ""/tmp/date.start"" -newer [file] -and -not -newer ""/tmp/date.end"" -print0 | xargs -0 -I {} rm {}","find Path -newer File -and -not -newer File -print0 | xargs -0 -I {} rm {}",n,n,y,n,n,n,n,n
"Remove regular files in the current directory tree","find . -type f -exec rm -f {} \;","find Path -type f -exec rm -f {} \;",y,y,y,y,y,y,y,y
"Remove regular files in the current directory tree","find . -type f -print0 | xargs -0 -I {} rm -f {}","find Path -type f -print0 | xargs -0 -I {} rm -f {}",y,y,y,y,y,y,y,y
"Remove regular files in the current directory tree","find . -type f | xargs -I {} rm -f {}","find Path -type f | xargs -I {} rm -f {}",y,y,y,y,y,y,y,y
"Rename all .html files to .txt","find . -name ""*.html"" -exec mv {} ""*.txt"" \;","find Path -name Regex -exec mv {} File \;",n,n,n,n,n,n,,
"Rename all .html files to .txt","find . -type f -name ""*.html"" -exec mv {} ""*.txt"" \;","find Path -type f -name Regex -exec mv {} File \;",n,n,n,n,n,n,,
"Rename all .html files to .txt","find "".txt"" -name ""*.html"" -print0 | xargs -0 -I {} rename [regex] {}","find Path -name Regex -print0 | xargs -0 -I {} rename Regex {}",y,n,y,n,y,n,y,n
"Replace all sequence of 'blank' characters in file 'log' with a single occurence of such symbol and print space-separated fields of each string but first two fields","echo ""blank"" | rev | cut -d ""*.log"" -f -2 | rev","echo Regex | rev | cut -d Regex -f -Number | rev",n,n,n,n,n,n,,
"Replace all sequence of 'blank' characters in file 'log' with a single occurence of such symbol and print space-separated fields of each string but first two fields","fold -w 2 ""*.log"" | cut -f [number] -d ""blank""","fold -w Quantity File | cut -f Number -d Regex",n,n,n,n,n,n,,
"Replace all sequence of 'blank' characters in file 'log' with a single occurence of such symbol and print space-separated fields of each string but first two fields","fold -w 2 ""*.log"" | cut -d ""blank"" -f [number] | rev","fold -w Quantity File | cut -d Regex -f Number | rev",n,n,n,n,n,n,,
"Reports count of characters in the value of ${FOO_NO_LEAD_SPACE} variable as follows: ""length(FOO_NO_LEAD_SPACE)==<counted number of characters>""","echo -e $(echo -n -e ""length==<counted number of characters>"" | tr [regex] ""${FOO_NO_LEAD_SPACE}"" | wc -m)","echo -e $( echo -n -e Regex | tr Regex Regex | wc -m )",n,n,n,n,n,n,,
"Reports count of characters in the value of ${FOO_NO_LEAD_SPACE} variable as follows: ""length(FOO_NO_LEAD_SPACE)==<counted number of characters>""","echo -e $(echo -e ""length==<counted number of characters>"" | tr [regex] ""${FOO_NO_LEAD_SPACE}"" | wc -m)","echo -e $( echo -e Regex | tr Regex Regex | wc -m )",n,n,n,n,n,n,,
"Reports count of characters in the value of ${FOO_NO_LEAD_SPACE} variable as follows: ""length(FOO_NO_LEAD_SPACE)==<counted number of characters>""","echo -e $(echo -n -e ""length==<counted number of characters>"" | tr [regex] ""${FOO_NO_LEAD_SPACE}"" | wc -c)","echo -e $( echo -n -e Regex | tr Regex Regex | wc -c )",n,n,n,n,n,n,,
"Report file system containing path-to-file disk usage human-readable.","df -h","df -h",n,n,n,n,n,n,,
"Report file system containing path-to-file disk usage human-readable.","df -h [file]","df -h File",y,n,y,n,y,n,,
"Report file system containing path-to-file disk usage human-readable.","df -P -h | tail -n [quantity]","df -P -h | tail -n Quantity",n,n,n,n,n,n,,
"Report root file system disk usage human-readable.","df -h","df -h",n,n,n,n,n,n,,
"Report root file system disk usage human-readable.","df --total","df --total",n,n,n,n,n,n,,
"Report root file system disk usage human-readable.","df -P -h","df -P -h",n,n,n,n,n,n,,
"Returns 0 if user $1 belongs to group $2.","groups ""$1"" | head -n 0 | grep ""$2""","groups Regex | head -n Quantity | grep Regex",y,n,y,n,n,n,y,n
"Returns 0 if user $1 belongs to group $2.","groups ""$2"" | head -n 0 | grep -E ""$1""","groups Regex | head -n Quantity | grep -E Regex",y,n,y,n,n,n,y,n
"Returns 0 if user $1 belongs to group $2.","groups ""$2"" [regex] 0 ""$1"" [regex] [regex] [regex] [regex] [regex]","groups Regex Regex Regex Regex Regex Regex Regex Regex Regex",n,n,n,n,n,n,,
"return every file that does not have bar somewhere in its full pathname","find . -type f ! -name ""*"" -exec grep -H '.*' {} \;","find Path -type f ! -name Regex -exec grep -H Regex {} \;",n,n,n,n,n,n,,
"return every file that does not have bar somewhere in its full pathname","find . -type f -not -name ""*"" | xargs -I {} grep '.*' {}","find Path -type f -not -name Regex | xargs -I {} grep Regex {}",n,n,n,n,n,n,,
"return every file that does not have bar somewhere in its full pathname","find . -type f ! -name ""*"" -print | xargs -I {} grep '.*' {}","find Path -type f ! -name Regex -print | xargs -I {} grep Regex {}",n,n,n,n,n,n,,
"Run a shell with all environment variables specified in the file 'cronenv' in the user's home directory.","env | grep ""cronenv""","env | grep Regex",n,n,n,n,n,n,,
"Run a shell with all environment variables specified in the file 'cronenv' in the user's home directory.","read ""cronenv""","read Regex",n,n,n,n,n,n,,
"Run a shell with all environment variables specified in the file 'cronenv' in the user's home directory.","echo ""cronenv"" | xargs -n [quantity] -I {} echo {}","echo Regex | xargs -n Quantity -I {} echo {}",n,n,n,n,n,n,,
"Save a nginx link to ""/path/to/file"" with the current user and system FQDN host name in variable ""path""","ln -s -f ""/path/to/file"" $(readlink -f ""path"")","ln -s -f File $( readlink -f File )",n,n,n,n,n,n,,
"Save a nginx link to ""/path/to/file"" with the current user and system FQDN host name in variable ""path""","ln -s -f ""path"" $(date -d ""/path/to/file"" __SP__UNK)","ln -s -f File $( date -d Regex __SP__UNK )",n,n,n,n,n,n,,
"Save a nginx link to ""/path/to/file"" with the current user and system FQDN host name in variable ""path""","ln -s -f ""path"" $(date -d ""/path/to/file"")","ln -s -f File $( date -d Regex )",n,n,n,n,n,n,,
"Save a space separated list of process ids of currently running jobs to variable 'bgxjobs'","ps -e -f | grep ""bgxjobs"" | cut -d [regex] -f [number] | tr [regex] [regex]","ps -e -f | grep Regex | cut -d Regex -f Number | tr Regex Regex",n,n,n,n,n,n,,
"Save a space separated list of process ids of currently running jobs to variable 'bgxjobs'","ps -e -f | grep ""bgxjobs"" | tr -s [regex] | cut -d [regex] -f [number]","ps -e -f | grep Regex | tr -s Regex | cut -d Regex -f Number",n,n,n,n,n,n,,
"Save a space separated list of process ids of currently running jobs to variable 'bgxjobs'","ps -e -f | grep ""bgxjobs""","ps -e -f | grep Regex",n,n,n,n,n,n,,
"Save absolute path of the script filename in variable ""MY_PATH""","readlink -f ""MY_PATH""","readlink -f File",n,n,n,n,y,n,n,n
"Save absolute path of the script filename in variable ""MY_PATH""","readlink -m ""MY_PATH""","readlink -m File",n,n,n,n,y,n,n,n
"Save absolute path of the script filename in variable ""MY_PATH""","readlink ""MY_PATH""","readlink File",n,n,n,n,n,n,,
"Saves calendar of $month, $year in the 'cal' variable.","echo ""cal"" | rev | cut -d ""$month"" -f [number] | tr ""$year"" [regex]","echo Regex | rev | cut -d Regex -f Number | tr Regex Regex",n,n,n,n,n,n,,
"Saves calendar of $month, $year in the 'cal' variable.","echo ""cal"" | rev | cut -d ""$month"" -f [number] | cut -d [regex] -f [number] | tr ""$year"" [regex]","echo Regex | rev | cut -d Regex -f Number | cut -d Regex -f Number | tr Regex Regex",n,n,n,n,n,n,,
"Saves calendar of $month, $year in the 'cal' variable.","echo ""cal"" | rev | cut -d ""$month"" -f [number] | cut -d ""$year"" -f [number]","echo Regex | rev | cut -d Regex -f Number | cut -d Regex -f Number",n,n,n,n,n,n,,
"Save the directory name of the current bash script to variable ""path"" if it is found in one of the directories specified by PATH.","dirname $(readlink -f ""path"")","dirname $( readlink -f File )",n,n,n,n,n,n,,
"Save the directory name of the current bash script to variable ""path"" if it is found in one of the directories specified by PATH.","dirname $(readlink ""path"")","dirname $( readlink File )",n,n,n,n,n,n,,
"Save the directory name of the current bash script to variable ""path"" if it is found in one of the directories specified by PATH.","dirname $(readlink -m ""path"")","dirname $( readlink -m File )",n,n,n,n,n,n,,
"Saves listing of a current folder in 'var' variable.","ls -d ""var""","ls -d File",n,n,n,n,n,n,,
"Saves listing of a current folder in 'var' variable.","ls | cut -d ""var"" -f [number]","ls | cut -d Regex -f Number",n,n,n,n,n,n,,
"Saves listing of a current folder in 'var' variable.","ls -d $(ls -1 ""var"" | tr [regex] [regex])","ls -d $( ls -1 File | tr Regex Regex )",n,n,n,n,n,n,,
"Saves list of logged in users in system together with 'USER' header in the 'b' variable.","w | cut -d ""b"" -f [number] | cut -d ""USER"" -f [number] | cut -d ""*.log"" -f [number]","w | cut -d Regex -f Number | cut -d Regex -f Number | cut -d Regex -f Number",n,n,n,n,n,n,,
"Saves list of logged in users in system together with 'USER' header in the 'b' variable.","w | cut -d ""b"" -f [number] | tr ""USER"" ""*.log""","w | cut -d Regex -f Number | tr Regex Regex",n,n,n,n,n,n,,
"Saves list of logged in users in system together with 'USER' header in the 'b' variable.","w | cut -d ""b"" -f [number] | cut -d ""USER"" -f [number] | tr [regex] ""*.log""","w | cut -d Regex -f Number | cut -d Regex -f Number | tr Regex Regex",n,n,n,n,n,n,,
"Saves number of lines of current directory listing in 'n_max' variable.","cat ""n_max"" | wc -l","cat File | wc -l",n,n,n,n,n,n,,
"Saves number of lines of current directory listing in 'n_max' variable.","cat ""n_max"" | wc -c","cat File | wc -c",n,n,n,n,n,n,,
"Saves number of lines of current directory listing in 'n_max' variable.","ls -1 | grep ""n_max"" | wc -l","ls -1 | grep Regex | wc -l",n,n,n,n,n,n,,
"Search the ""your/dir"" directory for empty subdirectories","find ""your/dir"" -type d -empty","find Path -type d -empty",y,y,y,y,y,y,y,y
"Search the ""your/dir"" directory for empty subdirectories","find ""your/dir"" -maxdepth [quantity] -empty","find Path -maxdepth Quantity -empty",n,n,n,n,n,n,,
"Search the ""your/dir"" directory for empty subdirectories","find ""your/dir"" -mindepth [quantity] -maxdepth [quantity] -empty","find Path -mindepth Quantity -maxdepth Quantity -empty",n,n,n,n,n,n,,
"Search the `images' directory tree for regular files","find ""images"" -type f","find Path -type f",y,y,y,y,y,y,y,y
"Search the `images' directory tree for regular files","find ""images"" -type f -print","find Path -type f -print",y,y,y,y,y,y,y,y
"Search the `images' directory tree for regular files","find ""images"" -type f -exec grep '.*' {} \;","find Path -type f -exec grep Regex {} \;",n,n,n,n,n,n,,
"Search the /Path directory tree for files matching pattern ""file_name*"" and containing ""bar"" in their pathnames","find ""/Path"" -name ""file_name*"" | grep ""bar""","find Path -name Regex | grep Regex",y,y,y,y,y,y,y,y
"Search the /Path directory tree for files matching pattern ""file_name*"" and containing ""bar"" in their pathnames","find ""/Path"" -name ""file_name*"" | grep -v ""bar""","find Path -name Regex | grep -v Regex",n,n,n,n,n,n,,
"Search the /Path directory tree for files matching pattern ""file_name*"" and containing ""bar"" in their pathnames","find ""/Path"" -name ""file_name*"" -exec grep -l ""bar"" {} \;","find Path -name Regex -exec grep -l Regex {} \;",n,n,n,n,n,n,,
"Search the /path directory tree for files matching pattern '*.foo'","find ""/path"" -name ""*.foo""","find Path -name Regex",y,y,y,y,y,y,y,y
"Search the /path directory tree for files matching pattern '*.foo'","find ""/path"" -iname ""*.foo""","find Path -iname Regex",n,n,n,n,n,n,,
"Search the /path directory tree for files matching pattern '*.foo'","find ""/path"" \( -name ""*.foo"" -or -name ""*"" \)","find Path \( -name Regex -or -name Regex \)",y,n,y,n,n,n,y,n
"Search /usr/local recursively for directories whose names end with a number 0-9","find ""/usr/local"" -name ""0-9"" -type d","find Path -name Regex -type d",y,n,y,n,y,y,y,n
"Search /usr/local recursively for directories whose names end with a number 0-9","find ""/usr/local"" -type d -name ""0-9""","find Path -type d -name Regex",y,n,y,n,y,y,y,n
"Search /usr/local recursively for directories whose names end with a number 0-9","find ""/usr/local"" -name ""0-9""","find Path -name Regex",n,n,n,n,n,n,,
"Search all .java files residing in the current directory tree and modified at least 7 days ago for string ""swt""","find . -name ""*.java"" -mtime +7 -print0 | xargs -0 -I {} grep -H ""swt"" {}","find Path -name Regex -mtime +Timespan -print0 | xargs -0 -I {} grep -H Regex {}",n,n,y,y,n,n,n,n
"Search all .java files residing in the current directory tree and modified at least 7 days ago for string ""swt""","find . -name ""*.java"" -mtime +7 -exec grep -H -n ""swt"" {} \;","find Path -name Regex -mtime +Timespan -exec grep -H -n Regex {} \;",n,n,y,y,n,n,n,n
"Search all .java files residing in the current directory tree and modified at least 7 days ago for string ""swt""","find . -name ""*.java"" -mtime +7 -print0 | xargs -0 -I {} grep ""swt"" {}","find Path -name Regex -mtime +Timespan -print0 | xargs -0 -I {} grep Regex {}",y,y,y,y,y,y,n,n
"Search  all directory from /usr downwards for files whose inode number is 1234 and print them .","find ""/usr"" -inum 1234 -exec ls -l {} \;","find Path -inum Quantity -exec ls -l {} \;",n,n,n,n,n,n,,
"Search  all directory from /usr downwards for files whose inode number is 1234 and print them .","find ""/usr"" -inum 1234 -exec echo {} \;","find Path -inum Quantity -exec echo {} \;",y,y,y,y,y,y,y,y
"Search  all directory from /usr downwards for files whose inode number is 1234 and print them .","find ""/usr"" -xdev -inum 1234","find Path -xdev -inum Quantity",n,n,n,n,n,n,,
"Search  all files & directoy from root directory which  are greater then 100M and delete them .","find ""&"" -name ""*"" -size +100M -exec rm {} \;","find Path -name Regex -size +Size -exec rm {} \;",n,n,n,n,n,n,,
"Search  all files & directoy from root directory which  are greater then 100M and delete them .","find ""&"" -type f -size +100M -exec rm {} \;","find Path -type f -size +Size -exec rm {} \;",n,n,n,n,n,n,,
"Search  all files & directoy from root directory which  are greater then 100M and delete them .","find ""&"" -name ""*"" -size +100M -exec rm -r -f {} \;","find Path -name Regex -size +Size -exec rm -r -f {} \;",y,n,y,n,y,n,y,n
"Search all files in the current directory tree that are named ""whatever"" for ""whatever""","find ""whatever"" -name ""whatever""","find Path -name Regex",n,n,n,n,n,n,,
"Search all files in the current directory tree that are named ""whatever"" for ""whatever""","find . -name ""whatever"" -exec grep --with-filename ""whatever"" {} \;","find Path -name Regex -exec grep --with-filename Regex {} \;",n,n,y,y,n,n,n,n
"Search all files in the current directory tree that are named ""whatever"" for ""whatever""","find . -name ""whatever"" | xargs -I {} grep ""whatever"" {}","find Path -name Regex | xargs -I {} grep Regex {}",y,y,y,y,y,y,n,n
"Search all files in the current directory tree whose names contain ""."" for ""SearchString""","find . -name ""."" -exec grep ""SearchString"" {} \;","find Path -name Regex -exec grep Regex {} \;",y,n,y,n,y,y,n,n
"Search all files in the current directory tree whose names contain ""."" for ""SearchString""","find . -name ""."" | xargs -I {} grep ""SearchString"" {}","find Path -name Regex | xargs -I {} grep Regex {}",y,n,y,n,y,y,n,n
"Search all files in the current directory tree whose names contain ""."" for ""SearchString""","find . -name ""."" -print0 | xargs -0 -I {} grep ""SearchString"" {}","find Path -name Regex -print0 | xargs -0 -I {} grep Regex {}",y,n,y,n,y,y,n,n
"search all files in the current folder which match the regular expression","find . -regex [regex]","find Path -regex Regex",y,y,y,y,y,y,y,n
"search all files in the current folder which match the regular expression","find . -print0 | xargs -0 -I {} grep '.*' {}","find Path -print0 | xargs -0 -I {} grep Regex {}",n,n,n,n,n,n,,
"search all files in the current folder which match the regular expression","find . -print0 | xargs -r -0 -I {} grep -l '.*' {}","find Path -print0 | xargs -r -0 -I {} grep -l Regex {}",n,n,n,n,n,n,,
"search all jpg images in current folder and rename them","find . -type f -name ""*.jpg"" -exec mv {} [file] \;","find Path -type f -name Regex -exec mv {} File \;",y,n,y,y,n,n,y,n
"search all jpg images in current folder and rename them","find . -type f -iname ""*.jpg"" -exec mv {} [file] \;","find Path -type f -iname Regex -exec mv {} File \;",y,n,y,y,n,n,y,n
"search all jpg images in current folder and rename them","find . -name ""*.jpg"" -exec mv {} [file] \;","find Path -name Regex -exec mv {} File \;",y,n,y,y,n,n,y,n
"Search all non-hidden files in the current directory and all non-hidden sub-directories for the file hi.dat.","find . -name ""*"" -prune -or -name ""hi.dat"" -print","find Path -name Regex -prune -or -name Regex -print",y,n,y,n,n,n,y,y
"Search all non-hidden files in the current directory and all non-hidden sub-directories for the file hi.dat.","find . -path [regex] -prune -or -name ""hi.dat"" -print","find Path -path Regex -prune -or -name Regex -print",y,n,y,n,n,n,y,y
"Search all non-hidden files in the current directory and all non-hidden sub-directories for the file hi.dat.","find . -name ""*"" -not -path ""hi.dat""","find Path -name Regex -not -path Regex",y,n,y,n,n,n,y,y
"Search the bla directory recursively for *.so files","find . -name ""*.so""","find Path -name Regex",y,n,y,n,y,n,,
"Search the bla directory recursively for *.so files","find . -iname ""*.so""","find Path -iname Regex",y,n,y,n,n,n,y,n
"Search the bla directory recursively for *.so files","find . -type f -name ""*.so""","find Path -type f -name Regex",y,n,y,n,y,n,y,n
"Search the current directory and all of its sub-directory for any PDF files being careful to prevent the shell from expanding anything in '*.pdf'  before it'ss passed to find.","find ""*.pdf"" -name ""*.pdf"" | xargs -I {} grep ""'ss"" {}","find Path -name Regex | xargs -I {} grep Regex {}",n,n,n,n,n,n,,
"Search the current directory and all of its sub-directory for any PDF files being careful to prevent the shell from expanding anything in '*.pdf'  before it'ss passed to find.","find ""*.pdf"" -type f -name ""*.pdf"" -exec grep -H ""'ss"" {} \;","find Path -type f -name Regex -exec grep -H Regex {} \;",n,n,n,n,n,n,,
"Search the current directory and all of its sub-directory for any PDF files being careful to prevent the shell from expanding anything in '*.pdf'  before it'ss passed to find.","find ""*.pdf"" -type f -iname ""*.pdf"" -print0 | xargs -0 -I {} grep ""'ss"" {}","find Path -type f -iname Regex -print0 | xargs -0 -I {} grep Regex {}",n,n,n,n,n,n,,
"Search the current directory recursively for files containing ""needle text""","find . -name ""needle text""","find Path -name Regex",n,n,n,n,n,n,,
"Search the current directory recursively for files containing ""needle text""","find . -name ""needle text"" -print","find Path -name Regex -print",n,n,n,n,n,n,,
"Search the current directory recursively for files containing ""needle text""","find . -print0 | xargs -0 -I {} grep ""needle text"" {}","find Path -print0 | xargs -0 -I {} grep Regex {}",n,n,n,n,n,n,,
"Search the current directory recursively for regular files last modified more than 2 days ago","find . . -f -mtime +2","find Path Path -f -mtime +Timespan",n,n,n,n,y,y,n,n
"Search the current directory recursively for regular files last modified more than 2 days ago","find . -type f -mtime +2","find Path -type f -mtime +Timespan",y,y,y,y,y,y,y,y
"Search the current directory recursively for regular files last modified more than 2 days ago","find . . -f -ctime +2","find Path Path -f -ctime +Timespan",n,n,n,n,n,n,,
"Search the current directory tree for all regular non-hidden files except *.o","find . -not \( -path [regex] -prune \) -regex ""*.o""","find Path -not \( -path Regex -prune \) -regex Regex",n,n,n,n,n,n,,
"Search the current directory tree for all regular non-hidden files except *.o","find ""*.o"" -not \( -path [regex] -prune \) -type f","find Path -not \( -path Regex -prune \) -type f",n,n,n,n,n,n,,
"Search the current directory tree for all regular non-hidden files except *.o","find . -not -path ""*.o"" -type f","find Path -not -path Regex -type f",n,n,n,n,n,n,,
"Search the current directory tree for files whose names begin with ""my"" and end with ""p"" followed by any character, ignoring path names containing ""test""","find ""p"" -path ""my"" -prune -or -name ""test"" -print","find Path -path Regex -prune -or -name Regex -print",y,n,y,n,n,n,y,y
"Search the current directory tree for files whose names begin with ""my"" and end with ""p"" followed by any character, ignoring path names containing ""test""","find ""p"" \( -name ""my"" -or -name ""test"" \)","find Path \( -name Regex -or -name Regex \)",n,n,n,n,n,n,,
"Search the current directory tree for files whose names begin with ""my"" and end with ""p"" followed by any character, ignoring path names containing ""test""","find ""p"" -path ""my"" -prune -or -name ""test""","find Path -path Regex -prune -or -name Regex",y,n,y,n,y,n,y,y
"Search the current directory tree for files whose name is "".note"", case insensitive","find . -iname "".note""","find Path -iname Regex",y,y,y,y,y,y,y,y
"Search the current directory tree for files whose name is "".note"", case insensitive","find . -iname "".note"" -iname [regex]","find Path -iname Regex -iname Regex",y,n,y,n,n,n,y,n
"Search the current directory tree for files whose name is "".note"", case insensitive","find . -iname "".note"" | sort -r","find Path -iname Regex | sort -r",y,y,y,y,n,n,y,y
"Search the current directory tree for files whose names do not end in "".exe"" and "".dll""","find . -not -name ""*.exe"" -not -name ""*.dll""","find Path -not -name Regex -not -name Regex",y,y,y,y,y,y,y,y
"Search the current directory tree for files whose names do not end in "".exe"" and "".dll""","find . -not \( -name ""*.exe"" -or -name ""*.dll"" \)","find Path -not \( -name Regex -or -name Regex \)",y,y,y,y,n,n,y,y
"Search the current directory tree for files whose names do not end in "".exe"" and "".dll""","find . -not -name ""*.exe"" -or -name ""*.dll""","find Path -not -name Regex -or -name Regex",n,n,n,n,n,n,,
"Search the current directory tree for symbolic links named ""link1""","find . -lname ""link1""","find Path -lname Regex",n,n,n,n,n,n,,
"Search the current directory tree for symbolic links named ""link1""","find . -type l -lname ""link1""","find Path -type l -lname Regex",n,n,n,n,n,n,,
"Search the current directory tree for symbolic links named ""link1""","find . -type l -exec ln -s {} ""link1"" \;","find Path -type l -exec ln -s {} Regex \;",n,n,n,n,n,n,,
"Search directory trees foo and bar for .java files","find . -iname ""*.java""","find Path -iname Regex",n,n,n,n,n,n,,
"Search directory trees foo and bar for .java files","find . -name ""*.java""","find Path -name Regex",n,n,n,n,n,n,,
"Search directory trees foo and bar for .java files","find . -iname ""*.java"" | xargs -I {} grep '.*' {}","find Path -iname Regex | xargs -I {} grep Regex {}",n,n,n,n,n,n,,
"Search the entire file hierarchy for files ending in '.old' and delete them.","find "".old"" -name ""*"" -exec rm {} \;","find Path -name Regex -exec rm {} \;",y,n,y,n,y,y,n,n
"Search the entire file hierarchy for files ending in '.old' and delete them.","find "".old"" -name ""*"" -exec rm -f {} \;","find Path -name Regex -exec rm -f {} \;",y,n,y,n,y,y,n,n
"Search the entire file hierarchy for files ending in '.old' and delete them.","find "".old"" -name ""*"" -print0 | xargs -0 -I {} rm {}","find Path -name Regex -print0 | xargs -0 -I {} rm {}",y,n,y,n,y,y,n,n
"Search the files from the current directory tree for ""foo""","find . -exec grep ""foo"" {} +","find Path -exec grep Regex {} +",y,y,y,y,y,y,n,n
"Search the files from the current directory tree for ""foo""","find . | xargs -I {} grep ""foo"" {}","find Path | xargs -I {} grep Regex {}",y,y,y,y,y,y,n,n
"Search the files from the current directory tree for ""foo""","find . -print0 | xargs -0 -I {} grep ""foo"" {}","find Path -print0 | xargs -0 -I {} grep Regex {}",y,y,y,y,y,y,n,n
"Search for 'Text To Find' in all regular files under current directory tree and show the matched files","find . -type f -exec grep -l ""Text To Find"" {} +","find Path -type f -exec grep -l Regex {} +",y,y,y,y,y,y,y,y
"Search for 'Text To Find' in all regular files under current directory tree and show the matched files","find . -type f -exec grep -l ""Text To Find"" {} \;","find Path -type f -exec grep -l Regex {} \;",y,y,y,y,y,y,y,y
"Search for 'Text To Find' in all regular files under current directory tree and show the matched files","find . -type f | xargs -I {} grep -l ""Text To Find"" {}","find Path -type f | xargs -I {} grep -l Regex {}",y,y,y,y,y,y,y,y
"Search for 'birthday' (case insensitive) in all regular files under ~/Documents directory tree and show only the filenames","find ""~/Documents"" -type f -exec grep -l ""birthday"" {} \;","find Path -type f -exec grep -l Regex {} \;",y,y,y,y,y,y,n,n
"Search for 'birthday' (case insensitive) in all regular files under ~/Documents directory tree and show only the filenames","find ""~/Documents"" -type f -exec grep ""birthday"" {} \;","find Path -type f -exec grep Regex {} \;",n,n,n,n,n,n,,
"Search for 'birthday' (case insensitive) in all regular files under ~/Documents directory tree and show only the filenames","find ""~/Documents"" -type f -exec grep -l ""birthday"" {} +","find Path -type f -exec grep -l Regex {} +",y,y,y,y,y,y,n,n
"Search for 'foo' in all the java files under 'dir1', 'dir2' and 'dir3' directory tree and print only the names of the matched files","find ""dir1"" -name ""*.java"" -exec grep -l ""foo"" {} \; | tr "" 'dir2' "" ""dir3""","find Path -name Regex -exec grep -l Regex {} \; | tr Regex Regex",n,n,n,n,n,n,,
"Search for 'foo' in all the java files under 'dir1', 'dir2' and 'dir3' directory tree and print only the names of the matched files","find ""dir1"" -name ""*.java"" -exec grep -l ""foo"" {} + | cut -d ""dir3"" -f [number] | cut -f [number] -d "" 'dir2' ""","find Path -name Regex -exec grep -l Regex {} + | cut -d Regex -f Number | cut -f Number -d Regex",n,n,n,n,n,n,,
"Search for 'foo' in all the java files under 'dir1', 'dir2' and 'dir3' directory tree and print only the names of the matched files","find ""dir1"" -name ""*.java"" -exec grep -l ""foo"" {} \; | tr -d "" 'dir2' "" ""dir3""","find Path -name Regex -exec grep -l Regex {} \; | tr -d Regex Regex",n,n,n,n,n,n,,
"Search for 'string-to-find' in all HTML files under current directory tree and show the matched lines with their filenames","find . -name ""*.html"" -exec grep -H -n ""string-to-find"" {} \;","find Path -name Regex -exec grep -H -n Regex {} \;",n,n,y,y,n,n,n,n
"Search for 'string-to-find' in all HTML files under current directory tree and show the matched lines with their filenames","find . -name ""*.html"" | xargs -I {} grep -H -n ""string-to-find"" {}","find Path -name Regex | xargs -I {} grep -H -n Regex {}",n,n,y,y,n,n,n,n
"Search for 'string-to-find' in all HTML files under current directory tree and show the matched lines with their filenames","find . -name ""*.html"" -print0 | xargs -0 -I {} grep -H -n ""string-to-find"" {}","find Path -name Regex -print0 | xargs -0 -I {} grep -H -n Regex {}",n,n,y,y,n,n,n,n
"Search for 'stuff' in all *,txt files under current directory","find ""*"" -name ""*.txt"" | xargs -I {} grep ""stuff"" {}","find Path -name Regex | xargs -I {} grep Regex {}",y,n,y,n,y,n,n,n
"Search for 'stuff' in all *,txt files under current directory","find ""*"" -name ""*.txt"" | xargs -I {} grep -E ""stuff"" {}","find Path -name Regex | xargs -I {} grep -E Regex {}",y,n,y,n,y,n,n,n
"Search for 'stuff' in all *,txt files under current directory","grep ""stuff"" $(find ""*"" -name ""*.txt"")","grep Regex $( find Path -name Regex )",y,n,y,n,y,n,n,n
"Search for .pdf files","find . -name ""*.pdf""","find Path -name Regex",y,y,y,y,y,n,y,y
"Search for .pdf files","find . -iname ""*.pdf""","find Path -iname Regex",y,y,y,y,n,n,y,y
"Search for .pdf files","find . -exec grep '.*' {} ""*.pdf"" \;","find Path -exec grep Regex {} File \;",n,n,n,n,n,n,,
"Search for Subscription.java under current directory, and go to directory containing it.","cd $(find . -name ""Subscription.java"")","cd $( find Path -name Regex )",n,n,n,n,n,n,,
"Search for Subscription.java under current directory, and go to directory containing it.","cd $(find . -name ""Subscription.java"" | xargs -I {} dirname {})","cd $( find Path -name Regex | xargs -I {} dirname {} )",y,y,y,y,y,y,y,y
"Search for Subscription.java under current directory, and go to directory containing it.","cd $(find . -name ""Subscription.java"" | xargs -I {} cd {})","cd $( find Path -name Regex | xargs -I {} cd {} )",n,n,n,n,n,n,,
"search for all ""tif"" images in current folder","find . -iname ""*.tif""","find Path -iname Regex",y,y,y,y,n,n,y,y
"search for all ""tif"" images in current folder","find . -type f -iregex ""*.tif""","find Path -type f -iregex Regex",y,n,y,y,n,n,y,n
"search for all ""tif"" images in current folder","find . -name ""*.tif""","find Path -name Regex",y,y,y,y,y,y,y,y
"Search for all .mp3 files in the /mnt/usb directory tree","find ""/mnt/usb"" -name ""*.mp3""","find Path -name Regex",y,y,y,y,y,y,y,y
"Search for all .mp3 files in the /mnt/usb directory tree","find ""/mnt/usb"" -iname ""*.mp3""","find Path -iname Regex",y,y,y,y,n,n,y,y
"Search for all .mp3 files in the /mnt/usb directory tree","find ""/mnt/usb"" -type f -name ""*.mp3""","find Path -type f -name Regex",y,y,y,y,y,y,y,y
"Search for all files in the current directory recursively whose names contain ""linkin park"", ignoring the case","find . -iname ""linkin park""","find Path -iname Regex",y,n,y,n,y,n,,
"Search for all files in the current directory recursively whose names contain ""linkin park"", ignoring the case","find . -iregex ""linkin park""","find Path -iregex Regex",y,n,y,n,y,n,y,y
"Search for all files in the current directory recursively whose names contain ""linkin park"", ignoring the case","find . -iname ""linkin park"" -exec grep -i '.*' {} \;","find Path -iname Regex -exec grep -i Regex {} \;",n,n,n,n,n,n,,
"search for all the files in the folder /data/images which have been modified after /tmp/start and before /tmp/end","find ""/data/images"" -newer ""/tmp/start"" -and -newer ""/tmp/end""","find Path -newer File -and -newer File",n,n,n,n,n,n,,
"search for all the files in the folder /data/images which have been modified after /tmp/start and before /tmp/end","find ""/data/images"" -newer ""/tmp/start"" -and ! -newer ""/tmp/end""","find Path -newer File -and ! -newer File",y,y,y,y,y,y,y,y
"search for all the files in the folder /data/images which have been modified after /tmp/start and before /tmp/end","find ""/data/images"" -newer ""/tmp/start"" -not -newer ""/tmp/end""","find Path -newer File -not -newer File",y,y,y,y,y,y,y,y
"Search for the case insensitive regex 'STRING_TO_SEARCH_FOR' in all files under current directory","find . -exec grep -i ""STRING_TO_SEARCH_FOR"" {} \;","find Path -exec grep -i Regex {} \;",y,y,y,y,y,y,n,n
"Search for the case insensitive regex 'STRING_TO_SEARCH_FOR' in all files under current directory","find . -type f -exec grep -i ""STRING_TO_SEARCH_FOR"" {} \;","find Path -type f -exec grep -i Regex {} \;",y,y,y,y,y,y,y,y
"Search for the case insensitive regex 'STRING_TO_SEARCH_FOR' in all files under current directory","find . | xargs -I {} grep -i ""STRING_TO_SEARCH_FOR"" {}","find Path | xargs -I {} grep -i Regex {}",y,y,y,y,y,y,n,n
"search for the file ""job.history"" in the folder /data/Spoolln and search for multiple patterns in the file and display the count of matched lines along with the pattern","find ""/data/Spoolln"" -name ""job.history"" | grep -v '.*' | wc -l","find Path -name Regex | grep -v Regex | wc -l",n,n,n,n,n,n,,
"search for the file ""job.history"" in the folder /data/Spoolln and search for multiple patterns in the file and display the count of matched lines along with the pattern","find ""/data/Spoolln"" -name ""job.history"" -exec grep -H -n '.*' {} \; | wc -l","find Path -name Regex -exec grep -H -n Regex {} \; | wc -l",n,n,n,n,n,n,,
"search for the file ""job.history"" in the folder /data/Spoolln and search for multiple patterns in the file and display the count of matched lines along with the pattern","find ""/data/Spoolln"" -name ""job.history"" | xargs -I {} grep -H -n '.*' {} [file] {}","find Path -name Regex | xargs -I {} grep -H -n Regex {} File {}",n,n,n,n,n,n,,
"search for the file ""name_to_find"" in the home folder","find . -name ""name_to_find""","find Path -name Regex",y,n,y,n,y,n,,
"search for the file ""name_to_find"" in the home folder","find . -iname ""name_to_find""","find Path -iname Regex",n,n,n,n,n,n,,
"search for the file ""name_to_find"" in the home folder","find . -iname ""name_to_find"" | xargs -I {} grep '.*' {}","find Path -iname Regex | xargs -I {} grep Regex {}",n,n,n,n,n,n,,
"search for the file, filename.txt in the folder /home","find ""/home"" -name ""filename.txt""","find Path -name Regex",y,y,y,y,y,y,y,y
"search for the file, filename.txt in the folder /home","find ""/home"" -iname ""filename.txt""","find Path -iname Regex",n,n,n,n,n,n,,
"search for the file, filename.txt in the folder /home","find ""/home"" -type f -name ""filename.txt""","find Path -type f -name Regex",y,y,y,y,y,y,y,y
"Search for the regex $greppattern in all files with '.c' or '.h' extension under $searchpath with name pattern $filepat and show the matched line numbers, file names and matched lines","grep ""$greppattern"" ""$searchpath"" | cut -d ""*.c"" -f [number] | cut -d ""$filepat"" -f [number] | grep ""*.h"" | cut -f [number]","grep Regex File | cut -d Regex -f Number | cut -d Regex -f Number | grep Regex | cut -f Number",n,n,n,n,n,n,,
"Search for the regex $greppattern in all files with '.c' or '.h' extension under $searchpath with name pattern $filepat and show the matched line numbers, file names and matched lines","grep -n -e ""$greppattern"" -e ""*.h"" | cut -d ""*.c"" -f [number] | grep -e ""$searchpath"" -e ""$filepat""","grep -n -e Regex -e Regex | cut -d Regex -f Number | grep -e Regex -e Regex",n,n,n,n,n,n,,
"Search for the regex $greppattern in all files with '.c' or '.h' extension under $searchpath with name pattern $filepat and show the matched line numbers, file names and matched lines","grep -n -e ""$greppattern"" -e ""*.h"" | cut -d ""*.c"" -f [number] | cut -d ""$filepat"" -f [number] | cut -d ""$searchpath"" -f [number]","grep -n -e Regex -e Regex | cut -d Regex -f Number | cut -d Regex -f Number | cut -d Regex -f Number",n,n,n,n,n,n,,
"Search for the string 'magic' in all regular files under current directory tree and display long listing of them","find . -type f -exec grep -l ""magic"" {} +","find Path -type f -exec grep -l Regex {} +",n,n,n,n,n,n,,
"Search for the string 'magic' in all regular files under current directory tree and display long listing of them","find . -type f -exec grep -l ""magic"" {} \;","find Path -type f -exec grep -l Regex {} \;",n,n,n,n,n,n,,
"Search for the string 'magic' in all regular files under current directory tree and display long listing of them","find . -type f -exec grep ""magic"" {} \; -ls","find Path -type f -exec grep Regex {} \; -ls",y,y,y,y,y,y,,
"search for text files in the current folder which have write access to others","find . -name ""*"" -perm [permission] -print","find Path -name Regex -perm Permission -print",y,n,y,n,y,n,y,n
"search for text files in the current folder which have write access to others","find . -iname [regex] -follow","find Path -iname Regex -follow",n,n,n,n,n,n,,
"search for text files in the current folder which have write access to others","find . -xdev -name ""*""","find Path -xdev -name Regex",n,n,n,n,n,n,,
"search for the word ""foo"" in all the regular/normal files in the directory ""/path/to/dir""","find ""/path/to/dir"" -type f -exec grep ""foo"" {} \;","find Path -type f -exec grep Regex {} \;",y,y,y,n,y,y,y,y
"search for the word ""foo"" in all the regular/normal files in the directory ""/path/to/dir""","find ""/path/to/dir"" -type f | xargs -I {} grep ""foo"" {}","find Path -type f | xargs -I {} grep Regex {}",y,y,y,n,y,y,y,y
"search for the word ""foo"" in all the regular/normal files in the directory ""/path/to/dir""","find ""/path/to/dir"" -type f -exec grep ""foo"" {} \; -print","find Path -type f -exec grep Regex {} \; -print",y,y,y,n,y,y,y,y
"search for the word ""foo"" in all the regular/normal files with the name ""file-pattern"" in the directory ""/path/to/dir""","find ""/path/to/dir"" -name ""file-pattern"" -type f | xargs -I {} grep ""foo"" {}","find Path -name Regex -type f | xargs -I {} grep Regex {}",y,y,y,n,y,y,y,y
"search for the word ""foo"" in all the regular/normal files with the name ""file-pattern"" in the directory ""/path/to/dir""","find ""/path/to/dir"" -name ""file-pattern"" -type f -exec grep ""foo"" {} \;","find Path -name Regex -type f -exec grep Regex {} \;",y,y,y,n,y,y,y,y
"search for the word ""foo"" in all the regular/normal files with the name ""file-pattern"" in the directory ""/path/to/dir""","find ""/path/to/dir"" -name ""file-pattern"" -type f -print | xargs -I {} grep ""foo"" {}","find Path -name Regex -type f -print | xargs -I {} grep Regex {}",y,y,y,n,y,y,y,y
"search for the word text in all the python files in the current folder","find . -name ""*"" | xargs -I {} grep '.*' {}","find Path -name Regex | xargs -I {} grep Regex {}",n,n,y,n,n,n,n,n
"search for the word text in all the python files in the current folder","find . -name ""*"" | xargs -I {} grep -i '.*' {}","find Path -name Regex | xargs -I {} grep -i Regex {}",n,n,n,n,n,n,,
"search for the word text in all the python files in the current folder","find . -name ""*"" -exec grep -i '.*' {} \;","find Path -name Regex -exec grep -i Regex {} \;",n,n,n,n,n,n,,
"search in the current folder for the files that begin with ""myletter""","find . -name ""myletter""","find Path -name Regex",y,n,y,n,y,n,,
"search in the current folder for the files that begin with ""myletter""","find . -name ""*"" | xargs -I {} grep ""myletter"" {}","find Path -name Regex | xargs -I {} grep Regex {}",n,n,n,n,n,n,,
"search in the current folder for the files that begin with ""myletter""","find . -name ""myletter"" -print","find Path -name Regex -print",y,n,y,n,y,n,,
"Searches the manual page names and descriptions","apropos [regex]","apropos Regex",y,n,y,n,n,n,y,n
"Searches the manual page names and descriptions","cd $(grep '.*' [file] | cut -b [number] | cut -d [regex] -f [number] | cut -d [regex] -f [number] | rev)","cd $( grep Regex File | cut -b Number | cut -d Regex -f Number | cut -d Regex -f Number | rev )",n,n,n,n,n,n,,
"Searches the manual page names and descriptions","cd $(grep '.*' [file] | cut -f [number] -d [regex] | cut -d [regex] -f [number] | cut -d [regex] -f [number])","cd $( grep Regex File | cut -f Number -d Regex | cut -d Regex -f Number | cut -d Regex -f Number )",n,n,n,n,n,n,,
"Search the system for directories named ""needle""","find . -name ""needle"" -type d","find Path -name Regex -type d",y,n,y,n,y,n,y,y
"Search the system for directories named ""needle""","find . -type d -name ""needle""","find Path -type d -name Regex",y,n,y,n,y,n,,
"Search the system for directories named ""needle""","find . -iname ""needle"" -type d","find Path -iname Regex -type d",n,n,n,n,n,n,,
"Search the system for the file “testfile.txt” ignoring the case","find . -iname ""testfile.txt""","find Path -iname Regex",y,n,y,n,y,n,,
"Search the system for the file “testfile.txt” ignoring the case","find . -iname ""testfile.txt"" | xargs -I {} grep -i '.*' {}","find Path -iname Regex | xargs -I {} grep -i Regex {}",n,n,n,n,n,n,,
"Search the system for the file “testfile.txt” ignoring the case","find . \( -iname ""testfile.txt"" -or -iname [regex] \) -print","find Path \( -iname Regex -or -iname Regex \) -print",y,n,y,n,n,n,y,n
"Send 4 ping packets of size 2 to ""www.google.com"" on a Solaris machine","ping -c 2 -q ""www.google.com"" | tail -n 4","ping -c Quantity -q Regex | tail -n Quantity",n,n,n,n,n,n,,
"Send 4 ping packets of size 2 to ""www.google.com"" on a Solaris machine","ping -c 2 -q ""www.google.com"" | tail -n [quantity] | head -n 4","ping -c Quantity -q Regex | tail -n Quantity | head -n Quantity",n,n,n,n,n,n,,
"Send 4 ping packets of size 2 to ""www.google.com"" on a Solaris machine","ping -c 2 -q ""www.google.com"" | head -n 4","ping -c Quantity -q Regex | head -n Quantity",n,n,n,n,n,n,,
"Set 644 permission to all regular files under current directory","find . -type f -exec chmod 644 {} +","find Path -type f -exec chmod Permission {} +",y,y,y,y,y,y,y,y
"Set 644 permission to all regular files under current directory","find . -type f -exec chmod 644 {} \;","find Path -type f -exec chmod Permission {} \;",y,y,y,y,y,y,y,y
"Set 644 permission to all regular files under current directory","find . -type f -print0 | xargs -0 -I {} chmod 644 {}","find Path -type f -print0 | xargs -0 -I {} chmod Permission {}",y,y,y,y,y,y,y,y
"set a crontab to create or update the timestamp of ""washere2"" in the current directory every 30 minutes.","","",n,n,n,n,n,n,,
"set a crontab to create or update the timestamp of ""washere2"" in the current directory every 30 minutes.","","",n,n,n,n,n,n,,
"set a crontab to create or update the timestamp of ""washere2"" in the current directory every 30 minutes.","","",n,n,n,n,n,n,,
"Set the bash environmental variable ""PROMPT_COMMAND"" to save the output of the last executed command to variable ""LAST"" and file '/tmp/x""","echo ""PROMPT_COMMAND"" | rev | cut -d ""LAST"" -f [number] | rev | cut -d ""'/tmp/x"" -f [number] | rev","echo Regex | rev | cut -d Regex -f Number | rev | cut -d Regex -f Number | rev",n,n,n,n,n,n,,
"Set the bash environmental variable ""PROMPT_COMMAND"" to save the output of the last executed command to variable ""LAST"" and file '/tmp/x""","ping ""PROMPT_COMMAND"" | rev | cut -d ""LAST"" -f [number] | rev | cut -d ""'/tmp/x"" -f [number] | rev","ping Regex | rev | cut -d Regex -f Number | rev | cut -d Regex -f Number | rev",n,n,n,n,n,n,,
"Set the bash environmental variable ""PROMPT_COMMAND"" to save the output of the last executed command to variable ""LAST"" and file '/tmp/x""","echo ""PROMPT_COMMAND"" | rev | tr -d ""LAST"" | rev | cut -d ""'/tmp/x"" -f [number] | rev","echo Regex | rev | tr -d Regex | rev | cut -d Regex -f Number | rev",n,n,n,n,n,n,,
"Set permissions to 600 for regular files under media/","find ""media/"" -type f -exec chmod 600 {} \;","find Path -type f -exec chmod Permission {} \;",y,y,y,y,y,y,y,y
"Set permissions to 600 for regular files under media/","find ""media/"" -type f -exec chmod 600 {} +","find Path -type f -exec chmod Permission {} +",y,y,y,y,y,y,y,y
"Set permissions to 600 for regular files under media/","find ""media/"" -type f -print0 | xargs -0 -I {} chmod 600 {}","find Path -type f -print0 | xargs -0 -I {} chmod Permission {}",y,y,y,y,y,y,y,y
"Set permissions to ug=rw,o= for files inside the ./default/files tree","find ""./default/files"" -name ""o="" -exec chmod ug=rw {} \;","find Path -name Regex -exec chmod Permission {} \;",y,n,y,n,n,n,y,n
"Set permissions to ug=rw,o= for files inside the ./default/files tree","find ""./default/files"" -name ""o="" -print0 | xargs -0 -I {} chmod ug=rw {}","find Path -name Regex -print0 | xargs -0 -I {} chmod Permission {}",y,n,y,n,n,n,y,n
"Set permissions to ug=rw,o= for files inside the ./default/files tree","find ""./default/files"" -name ""o="" -type f -print0 | xargs -0 -I {} chmod ug=rw {}","find Path -name Regex -type f -print0 | xargs -0 -I {} chmod Permission {}",y,n,y,n,n,n,y,n
"Set the setup connection timeout to 3 seconds for connecting to ""user@ip"" via ssh","","",n,n,n,n,n,n,,
"Set the setup connection timeout to 3 seconds for connecting to ""user@ip"" via ssh","","",n,n,n,n,n,n,,
"Set the setup connection timeout to 3 seconds for connecting to ""user@ip"" via ssh","","",n,n,n,n,n,n,,
"Set timestamp of old_file.dat to specified timestamp.","touch -m ""old_file.dat"" [file]","touch -m File File",n,n,n,n,n,n,,
"Set timestamp of old_file.dat to specified timestamp.","touch ""old_file.dat""","touch File",n,n,n,n,n,n,,
"Set timestamp of old_file.dat to specified timestamp.","touch -d [regex] ""old_file.dat""","touch -d Regex File",y,n,y,n,n,n,y,n
"(GNU specific) Set variable LINE to full process info of process currently taking the most CPU time, squeezing multiple consecutive spaces into one.","top -b -n [quantity] | tail -n [quantity] | head -n [quantity]","top -b -n Quantity | tail -n Quantity | head -n Quantity",n,n,n,n,n,n,,
"(GNU specific) Set variable LINE to full process info of process currently taking the most CPU time, squeezing multiple consecutive spaces into one.","top -b -n [quantity] | cut -f [number] -d [regex]","top -b -n Quantity | cut -f Number -d Regex",n,n,n,n,n,n,,
"(GNU specific) Set variable LINE to full process info of process currently taking the most CPU time, squeezing multiple consecutive spaces into one.","top -b -n [quantity] | cut -c [number] | tail -n [quantity] | head -n [quantity]","top -b -n Quantity | cut -c Number | tail -n Quantity | head -n Quantity",n,n,n,n,n,n,,
"Show the number of lines for each PHP file in the current directory tree","find . -name ""*.php"" | xargs -I {} wc -l {}","find Path -name Regex | xargs -I {} wc -l {}",y,y,y,y,y,y,n,n
"Show the number of lines for each PHP file in the current directory tree","find . -name ""*.php"" -print0 | xargs -0 -I {} wc -l {}","find Path -name Regex -print0 | xargs -0 -I {} wc -l {}",y,y,y,y,y,y,n,n
"Show the number of lines for each PHP file in the current directory tree","find . -name ""*.php"" -print0 | xargs -0 -I {} wc {}","find Path -name Regex -print0 | xargs -0 -I {} wc {}",n,n,n,n,n,n,,
"Silently read $char number of symbols from file descriptor 4, without backslash escaping, and store received input in 'line' variable","cat ""$char"" | tr -s ""line"" | cut -d [regex] -f 4","cat File | tr -s Regex | cut -d Regex -f Number",n,n,n,n,n,n,,
"Silently read $char number of symbols from file descriptor 4, without backslash escaping, and store received input in 'line' variable","read -r -s ""$char"" 4 | cut -d ""line"" -f [number]","read -r -s Regex Regex | cut -d Regex -f Number",n,n,n,n,n,n,,
"Silently read $char number of symbols from file descriptor 4, without backslash escaping, and store received input in 'line' variable","cat ""$char"" | grep -v ""line"" | cut -d [regex] -f [number] | cut -d [regex] -f [number] | cut -d 4 -f [number]","cat File | grep -v Regex | cut -d Regex -f Number | cut -d Regex -f Number | cut -d Regex -f Number",n,n,n,n,n,n,,
"Sort all files/directories under current directory according to modification time and print only the recent 7 of them","find . -print0 | sort -z | head -n 7","find Path -print0 | sort -z | head -n Quantity",n,n,n,n,n,n,,
"Sort all files/directories under current directory according to modification time and print only the recent 7 of them","find . -exec ls -s {} \; | sort -n | tail - 7","find Path -exec ls -s {} \; | sort -n | tail - Quantity",n,n,n,n,n,n,,
"Sort all files/directories under current directory according to modification time and print only the recent 7 of them","find . -printf __SP__UNK | sort -n | tail - 7","find Path -printf __SP__UNK | sort -n | tail - Quantity",y,n,n,n,y,n,y,n
"Sort and display the file name and creation month of top 11 files in the entire file system (Sort in the order of month )","find . -type f -printf __SP__UNK | sort -n | head -n 11","find Path -type f -printf __SP__UNK | sort -n | head -n Quantity",y,n,y,n,y,n,y,y
"Sort and display the file name and creation month of top 11 files in the entire file system (Sort in the order of month )","find . -type f -printf __SP__UNK | sort | head -n 11","find Path -type f -printf __SP__UNK | sort | head -n Quantity",y,n,y,n,y,n,y,y
"Sort and display the file name and creation month of top 11 files in the entire file system (Sort in the order of month )","find . -type f -printf __SP__UNK | sort | head -n 11 | cut -f [number]","find Path -type f -printf __SP__UNK | sort | head -n Quantity | cut -f Number",y,n,y,n,n,n,y,y
"Split ""domains.xml"" into files of at most 50000 lines each with a numeric suffix of length 4 and prefix of ""domains_""","split -a 4 -d -l 50000 ""domains.xml"" ""domains_""","split -a Quantity -d -l Quantity File Regex",y,y,y,y,y,y,y,y
"Split ""domains.xml"" into files of at most 50000 lines each with a numeric suffix of length 4 and prefix of ""domains_""","split -l 50000 -d -a 4 ""domains.xml"" ""domains_""","split -l Quantity -d -a Quantity File Regex",y,y,y,y,y,y,y,y
"Split ""domains.xml"" into files of at most 50000 lines each with a numeric suffix of length 4 and prefix of ""domains_""","split --lines=50000 --numeric-suffixes --suffix-length=4 ""domains.xml"" ""domains_""","split --lines Quantity --numeric-suffixes --suffix-length Quantity File Regex",y,y,y,y,y,y,y,y
"Split ""file.txt"" into files of at most 1 MiB in size with a numeric suffix and prefix ""file""","split -b [size] -d ""file.txt"" 1 --additional-suffix=""file""","split -b Size -d File Regex --additional-suffix Regex",n,n,n,n,n,n,,
"Split ""file.txt"" into files of at most 1 MiB in size with a numeric suffix and prefix ""file""","split -b [size] -d -l 1 ""file"" ""file.txt""","split -b Size -d -l Quantity File Regex",n,n,n,n,n,n,,
"Split ""file.txt"" into files of at most 1 MiB in size with a numeric suffix and prefix ""file""","split -l 1 -d -l [quantity] ""file"" ""file.txt""","split -l Quantity -d -l Quantity File Regex",n,n,n,n,n,n,,
"Split ""filename"" into files of at most 200000 lines each","split -l 200000 ""filename""","split -l Quantity File",y,y,y,y,y,y,y,y
"Split ""filename"" into files of at most 200000 lines each","find . -name ""filename"" -type f -print0 | xargs -0 -n [quantity] -P [quantity] -I {} split -l 200000 {}","find Path -name Regex -type f -print0 | xargs -0 -n Quantity -P Quantity -I {} split -l Quantity {}",y,n,y,n,n,n,y,y
"Split ""filename"" into files of at most 200000 lines each","find . -name ""filename"" -print0 | xargs -0 -n [quantity] -P [quantity] -I {} split -l 200000 {}","find Path -name Regex -print0 | xargs -0 -n Quantity -P Quantity -I {} split -l Quantity {}",n,n,y,n,n,n,n,n
"split content all files file1..40000 into pieces per 1445 lines named as outputprefixNNN as digital prefix","cat [file] | split --lines=1445 --suffix-length=[quantity] ""file1..40000"" [regex]","cat File | split --lines Quantity --suffix-length Quantity File Regex",n,n,n,n,n,n,,
"split content all files file1..40000 into pieces per 1445 lines named as outputprefixNNN as digital prefix","cat ""file1..40000"" | split --lines=1445 --lines=[quantity]","cat File | split --lines Quantity --lines Quantity",n,n,n,n,n,n,,
"split content all files file1..40000 into pieces per 1445 lines named as outputprefixNNN as digital prefix","split --lines=1445 --numeric-suffixes --suffix-length=[quantity] ""file1..40000"" [regex]","split --lines Quantity --numeric-suffixes --suffix-length Quantity File Regex",n,n,n,n,n,n,,
"split file abc.txt into pieces per 1500000000 bytes named as ""abc.NNN""","split -b 1500000000c ""abc.txt"" ""abc.NNN""","split -b Size File Regex",n,n,n,n,y,n,n,n
"split file abc.txt into pieces per 1500000000 bytes named as ""abc.NNN""","split -C 1500000000c -d ""abc.txt"" ""abc.NNN""","split -C Size -d File Regex",n,n,n,n,n,n,,
"split file abc.txt into pieces per 1500000000 bytes named as ""abc.NNN""","tar --one-file-system -c -z -f ""abc.NNN"" | split -b 1500000000c ""abc.txt"" [regex]","tar --one-file-system -c -z -f File | split -b Size File Regex",n,n,n,n,n,n,,
"ssh into ""hostname"" as user ""buck""","echo ""buck"" | ssh ""hostname""","echo Regex | ssh Regex",n,n,n,n,n,n,,
"ssh into ""hostname"" as user ""buck""","ssh -p ""buck"" ""hostname""","ssh -p Regex Regex",n,n,n,n,n,n,,
"ssh into ""hostname"" as user ""buck""","","",n,n,n,n,n,n,,
"SSH into ""hostname"" on port 22 as user ""myName""","ssh 22 -p ""myName"" -p ""hostname""","ssh Regex -p Regex -p Regex",n,n,n,n,n,n,,
"SSH into ""hostname"" on port 22 as user ""myName""","ssh 22 -p ""myName"" -L ""hostname"" -N","ssh Regex -p Regex -L Regex -N",n,n,n,n,n,n,,
"SSH into ""hostname"" on port 22 as user ""myName""","ssh 22 -p ""myName"" -L ""hostname""","ssh Regex -p Regex -L Regex",n,n,n,n,n,n,,
"ssh into ""ssh.myhost.net"" as user ""myusername"" and run command ""mkdir -p $2""","ssh -S ""myusername"" -O ""ssh.myhost.net"" ""mkdir -p $2""","ssh -S Path -O Regex Regex",n,n,n,n,y,y,n,n
"ssh into ""ssh.myhost.net"" as user ""myusername"" and run command ""mkdir -p $2""","","",n,n,n,n,n,n,,
"ssh into ""ssh.myhost.net"" as user ""myusername"" and run command ""mkdir -p $2""","","",n,n,n,n,n,n,,
"ssh into localhost on port 10022","ssh -p [regex] 10022","ssh -p Regex Regex",y,n,y,n,y,n,,
"ssh into localhost on port 10022","ssh [regex] -p [regex] -o __SP__UNK -o __SP__UNK -o __SP__UNK -o __SP__UNK -o __SP__UNK -p 10022 -p [regex]","ssh Regex -p Regex -o __SP__UNK -o __SP__UNK -o __SP__UNK -o __SP__UNK -o __SP__UNK -p Regex -p Regex",n,n,n,n,n,n,,
"ssh into localhost on port 10022","ssh [regex] -p [regex] -o __SP__UNK -o __SP__UNK -o __SP__UNK -o __SP__UNK -p 10022 -p [regex]","ssh Regex -p Regex -o __SP__UNK -o __SP__UNK -o __SP__UNK -o __SP__UNK -p Regex -p Regex",n,n,n,n,n,n,,
"SSH into user@server and run command ${SSH_COMMAND}","ssh -S [path] -O ""user@server"" ""${SSH_COMMAND}""","ssh -S Path -O Regex Regex",n,n,n,n,n,n,,
"SSH into user@server and run command ${SSH_COMMAND}","ssh ""${SSH_COMMAND}"" -S ""user@server""","ssh Regex -S Path",n,n,n,n,n,n,,
"SSH into user@server and run command ${SSH_COMMAND}","ssh ""${SSH_COMMAND}"" | split -d -l [quantity] ""user@server"" [regex]","ssh Regex | split -d -l Quantity File Regex",n,n,n,n,n,n,,
"Strips last section from the path $pathname, and prints basename of the rest part.","echo ""$pathname"" | rev | cut -d [regex] -f [number] | rev","echo Regex | rev | cut -d Regex -f Number | rev",n,n,y,n,n,n,n,n
"Strips last section from the path $pathname, and prints basename of the rest part.","basename $(dirname ""$pathname"")","basename $( dirname Regex )",y,y,y,y,y,y,y,y
"Strips last section from the path $pathname, and prints basename of the rest part.","basename ""$pathname"" | cut -d [regex] -f [number]","basename Regex | cut -d Regex -f Number",n,n,n,n,n,n,,
"Test if ""file.tar.gz"" is corrupt","mount [regex] | grep ""file.tar.gz""","mount Regex | grep Regex",n,n,n,n,n,n,,
"Test if ""file.tar.gz"" is corrupt","mount -l -t __SP__UNK ""file.tar.gz""","mount -l -t __SP__UNK Regex",n,n,n,n,n,n,,
"Test if ""file.tar.gz"" is corrupt","mount ""file.tar.gz"" -o __SP__UNK","mount Regex -o __SP__UNK",n,n,n,n,n,n,,
"Unzip file ""$empty_variable""","zcat ""$empty_variable""","zcat Regex",n,n,y,y,n,n,n,n
"Unzip file ""$empty_variable""","zcat ""$empty_variable"" | xargs -I {} zcat {}","zcat Regex | xargs -I {} zcat {}",n,n,n,n,n,n,,
"Unzip file ""$empty_variable""","zcat [regex] | xargs -I {} tar -c -v -f ""$empty_variable"" {}","zcat Regex | xargs -I {} tar -c -v -f File {}",n,n,n,n,n,n,,
"(GNU specific) Use 'top' to monitor one process.","yes ""top"" | head -n [quantity]","yes Regex | head -n Quantity",n,n,n,n,n,n,,
"(GNU specific) Use 'top' to monitor one process.","yes | grep ""top""","yes | grep Regex",n,n,n,n,n,n,,
"(GNU specific) Use 'top' to monitor one process.","yes ""top"" | head - [quantity]","yes Regex | head - Quantity",n,n,n,n,n,n,,
"use find command to search for .png and .jpg files","find "".png"" . -name ""*.jpg""","find Path Path -name Regex",n,n,n,n,n,n,,
"use find command to search for .png and .jpg files","find "".png"" . | grep -E ""*.jpg""","find Path Path | grep -E Regex",y,n,y,n,n,n,y,n
"use find command to search for .png and .jpg files","find "".png"" -name ""*.jpg"" | xargs -I {} grep -E '.*' {}","find Path -name Regex | xargs -I {} grep -E Regex {}",n,n,n,n,n,n,,
"when using vi-insert keymap bind command ""\C-v{}\ei"" to key ""{""","bind ""\C-v{}\ei"" | grep ""{""","bind Regex | grep Regex",n,n,n,n,n,n,,
"when using vi-insert keymap bind command ""\C-v{}\ei"" to key ""{""","bind ""{"" | xargs -I {} echo ""\C-v{}\ei"" [regex] {}","bind Regex | xargs -I {} echo Regex Regex {}",n,n,n,n,n,n,,
"when using vi-insert keymap bind command ""\C-v{}\ei"" to key ""{""","bind ""{"" | xargs -I {} cp -a --target-directory=""\C-v{}\ei"" {}","bind Regex | xargs -I {} cp -a --target-directory Directory {}",n,n,n,n,n,n,,
