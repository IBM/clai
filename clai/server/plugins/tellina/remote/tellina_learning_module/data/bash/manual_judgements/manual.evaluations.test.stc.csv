description,prediction,template,correct template,correct command,correct template A,correct command A,correct template B,correct command B,correct template C,correct command C
"Add ""prefix_"" to every non-blank line in ""a.txt""","nl -s a.txt a.txt","nl -s Regex File",n,n,y,n,n,n,n,n
"Add ""prefix_"" to every non-blank line in ""a.txt""","nl -s prefix.txt a.txt","nl -s Regex File",n,n,y,n,n,n,n,n
"Add ""prefix_"" to every non-blank line in ""a.txt""","nl -s a.txt | cut -c 7-","nl -s Regex | cut -c Number",n,n,n,n,n,n,,
"Add the .abc suffix to the names of all *.txt regular files in the current directory tree","find . -type f -name ""*.txt"" -exec mv {} {}.abc \;","find Path -type f -name Regex -exec mv {} File \;",y,y,y,y,y,y,y,y
"Add the .abc suffix to the names of all *.txt regular files in the current directory tree","find . -type f -name ""*.txt"" -exec rename 's/\.abc/' {} \;","find Path -type f -name Regex -exec rename Regex {} \;",y,n,y,n,y,n,n,n
"Add the .abc suffix to the names of all *.txt regular files in the current directory tree","find . -type f -name ""*.txt"" -exec mv {} {}.txt \;","find Path -type f -name Regex -exec mv {} File \;",y,n,y,n,y,n,y,n
"Add cron lists from ""filename"" to list of cron jobs, giving errors for any lines that cannot be parsed by crontab.","crontab -l | grep ""filename""","crontab -l | grep Regex",n,n,n,n,n,n,,
"Add cron lists from ""filename"" to list of cron jobs, giving errors for any lines that cannot be parsed by crontab.","crontab -l -u filename | xargs -I {} ls -l {}","crontab -l -u Regex | xargs -I {} ls -l {}",n,n,n,n,n,n,,
"Add cron lists from ""filename"" to list of cron jobs, giving errors for any lines that cannot be parsed by crontab.","crontab -l | grep ""filename"" | crontab","crontab -l | grep Regex | crontab",n,n,n,n,n,n,,
"Archive ""/media/Incoming/music/"" to ""/media/10001/music/"" on host ""server"" and skip files that are newer in the destination, delete any files in the destination not in the source, and compress data during transmission","find /media/10001/music/ /media/10001/music/ -name ""*server*"" -exec rm {} \;","find Path Path -name Regex -exec rm {} \;",n,n,n,n,n,n,,
"Archive ""/media/Incoming/music/"" to ""/media/10001/music/"" on host ""server"" and skip files that are newer in the destination, delete any files in the destination not in the source, and compress data during transmission","shred -u /media/10001/music/ /media/10001/music/","shred -u File File",n,n,n,n,n,n,,
"Archive ""/media/Incoming/music/"" to ""/media/10001/music/"" on host ""server"" and skip files that are newer in the destination, delete any files in the destination not in the source, and compress data during transmission","find /media/10001/music/ -name ""*server*"" -exec rm {} \;","find Path -name Regex -exec rm {} \;",n,n,n,n,n,n,,
"Archive ""/path/to/copy"" on host ""remote.host"" as user ""user"" to ""/path/to/local/storage"" updating files with different checksums, showing human readable progress and statistics, and compressing data during transmission","find /path/to/local/storage -name ""remote.host"" -exec cp {} /path/to/local/storage \;","find Path -name Regex -exec cp {} File \;",n,n,n,n,n,n,,
"Archive ""/path/to/copy"" on host ""remote.host"" as user ""user"" to ""/path/to/local/storage"" updating files with different checksums, showing human readable progress and statistics, and compressing data during transmission","find /path/to/local/storage -user user -exec chown user remote.host /path/to/local/storage /path/to/local/storage /path/to/local/storage \;","find Path -user Regex -exec chown Regex File File File File \;",n,n,n,n,n,n,,
"Archive ""/path/to/copy"" on host ""remote.host"" as user ""user"" to ""/path/to/local/storage"" updating files with different checksums, showing human readable progress and statistics, and compressing data during transmission","find /path/to/local/storage -name ""remote.host"" -exec mv {} /path/to/local/storage \;","find Path -name Regex -exec mv {} File \;",n,n,n,n,n,n,,
"Archive ""/path/to/files"" on host ""remotemachine"" authentifying as user ""user"" and compressing data during transmission, copy symlinks as symlinks.","rsync -a -v -z -P /path/to/files user@remotemachine:/path/to/files","rsync -a -v -z -P File File",y,y,y,y,n,n,y,y
"Archive ""/path/to/files"" on host ""remotemachine"" authentifying as user ""user"" and compressing data during transmission, copy symlinks as symlinks.","rsync -a -v -z --progress /path/to/files user@remotemachine:/path/to/files","rsync -a -v -z --progress File File",y,y,y,y,n,n,y,y
"Archive ""/path/to/files"" on host ""remotemachine"" authentifying as user ""user"" and compressing data during transmission, copy symlinks as symlinks.","rsync -a -v -z --chmod=user@remotemachine:/path/to/files user@remotemachine:/path/to/files","rsync -a -v -z --chmod user@remotemachine:/path/to/files File",n,n,n,n,n,n,,
"Archive ""foo/bar/baz.c"" to ""remote:/tmp/"" preserving the relative path of ""foo/bar/baz.c""","rsync -a -v --exclude=foo/bar/baz.c remote:/tmp/","rsync -a -v --exclude Regex File",n,n,n,n,n,n,,
"Archive ""foo/bar/baz.c"" to ""remote:/tmp/"" preserving the relative path of ""foo/bar/baz.c""","rsync -a -v foo/bar/baz.c remote:/bar/baz.c","rsync -a -v File File",n,n,n,n,n,n,,
"Archive ""foo/bar/baz.c"" to ""remote:/tmp/"" preserving the relative path of ""foo/bar/baz.c""","rsync -a --relative foo/bar/baz.c remote:/tmp/","rsync -a --relative File File",y,y,y,y,y,y,y,y
"Archive ""myfile"" to ""/foo/bar/"" and create directory ""/foo/bar/"" if ""/foo/"" exists","rsync -a -v myfile /foo/bar/ /foo/bar/","rsync -a -v File File File",n,n,n,n,n,n,,
"Archive ""myfile"" to ""/foo/bar/"" and create directory ""/foo/bar/"" if ""/foo/"" exists","rsync -a --relative myfile /foo/bar/ /foo/","rsync -a --relative File File File",n,n,n,n,n,n,,
"Archive ""myfile"" to ""/foo/bar/"" and create directory ""/foo/bar/"" if ""/foo/"" exists","rsync -a -v myfile /foo/bar/stuff /foo/bar/","rsync -a -v File File File",n,n,n,n,n,n,,
"Archive all files beginning with .env or .bash in current directory to user's home directory on host ""app1"", preserving timestamps and skipping files that are newer on ""app1""","find . \( -name app1 -or -name app1 -or -name app1 \) -print","find Path \( -name Regex -or -name Regex -or -name Regex \) -print",n,n,n,n,n,n,,
"Archive all files beginning with .env or .bash in current directory to user's home directory on host ""app1"", preserving timestamps and skipping files that are newer on ""app1""","find ~/ -name app1 -exec tar -u -v -f app1 {} \;","find Path -name Regex -exec tar -u -v -f File {} \;",n,n,n,n,n,n,,
"Archive all files beginning with .env or .bash in current directory to user's home directory on host ""app1"", preserving timestamps and skipping files that are newer on ""app1""","find . \( -name app1 -or -name app1 \) -print -exec tar -u -v -f app1 {} \;","find Path \( -name Regex -or -name Regex \) -print -exec tar -u -v -f File {} \;",n,n,n,n,n,n,,
"Archive all files (not directories) in ""folder1"" to ""copy_of_folder1"" specifying to include files info.txt and data.zip","rsync -a -v -z folder1 copy_of_folder1 copy_of_folder1","rsync -a -v -z File File File",n,n,n,n,n,n,,
"Archive all files (not directories) in ""folder1"" to ""copy_of_folder1"" specifying to include files info.txt and data.zip","rsync -a -v --progress folder1 copy_of_folder1 copy_of_folder1","rsync -a -v --progress File File File",n,n,n,n,n,n,,
"Archive all files (not directories) in ""folder1"" to ""copy_of_folder1"" specifying to include files info.txt and data.zip","rsync -a -v folder1 copy_of_folder1 copy_of_folder1","rsync -a -v File File File",n,n,n,n,n,n,,
"Archive all files specified on standard input under ""/path/to/files"" to ""/path"" on host ""targethost"" as user ""user"" with escalated privileges","rsync -a -v -z /path/to/files user@targethost:/path","rsync -a -v -z File File",n,n,n,n,n,n,,
"Archive all files specified on standard input under ""/path/to/files"" to ""/path"" on host ""targethost"" as user ""user"" with escalated privileges","rsync -a -v -z --progress /path/to/files user@targethost:/path","rsync -a -v -z --progress File File",n,n,n,n,n,n,,
"Archive all files specified on standard input under ""/path/to/files"" to ""/path"" on host ""targethost"" as user ""user"" with escalated privileges","rsync -a -v --progress /path/to/files user@targethost:/path","rsync -a -v --progress File File",n,n,n,n,n,n,,
"Archive directory specified by variable ""i"" to ""/iscsi"" preserving relative paths.","mkdir -p $(dirname /iscsi)","mkdir -p $( dirname Regex )",n,n,n,n,n,n,,
"Archive directory specified by variable ""i"" to ""/iscsi"" preserving relative paths.","mkdir -p $(dirname $i)","mkdir -p $( dirname Regex )",n,n,n,n,n,n,,
"Archive directory specified by variable ""i"" to ""/iscsi"" preserving relative paths.","find /i -type d -print0 | xargs -0 -I {} mkdir /iscsi {}","find Path -type d -print0 | xargs -0 -I {} mkdir Directory {}",n,n,n,n,n,n,,
"Archive directory specified by variable ""myFolder"" to current directory.","mkdir $(pwd)","mkdir $( pwd )",n,n,n,n,n,n,,
"Archive directory specified by variable ""myFolder"" to current directory.","mkdir -p $(pwd -P)","mkdir -p $( pwd -P )",n,n,n,n,n,n,,
"Archive directory specified by variable ""myFolder"" to current directory.","find . -type d -print0 | xargs -0 -I {} mkdir {}/myFolder","find Path -type d -print0 | xargs -0 -I {} mkdir Directory",n,n,n,n,n,n,,
"Archive preserving permissions and ownership files in ""/var/www/"" on host ""user@10.1.1.2"" to local ""/var/www/""","rsync -a -v -z /var/www/ user@10.1.1.2:/var/www/","rsync -a -v -z File File",n,n,y,n,n,n,n,n
"Archive preserving permissions and ownership files in ""/var/www/"" on host ""user@10.1.1.2"" to local ""/var/www/""","rsync -a -v -z /var/www/ user@10.1.1.2","rsync -a -v -z File File",n,n,y,n,n,n,n,n
"Archive preserving permissions and ownership files in ""/var/www/"" on host ""user@10.1.1.2"" to local ""/var/www/""","rsync -a -v -z /var/www/ /var/www/","rsync -a -v -z File File",n,n,y,n,n,n,n,n
"Assigns MAC address 00:80:48:BA:d1:30 to interface eth0.","date -d :80:48:d:30 eth0","date -d Regex eth0",n,n,n,n,n,n,,
"Assigns MAC address 00:80:48:BA:d1:30 to interface eth0.","date -d :80:48:d1:30 eth0","date -d Regex eth0",n,n,n,n,n,n,,
"Assigns MAC address 00:80:48:BA:d1:30 to interface eth0.","date -d :80:48:BA:d:30 eth0","date -d Regex eth0",n,n,n,n,n,n,,
"Attempt to connect as root via ssh to host whose IP address or hostname is specified by environment variable IPADDRESS - this will normally fail because ssh servers normally don't accept root logins.","ping -c 1 $IPADDRESS-will | tr '[:__SP__UNK:]' '[:accept:]' | tr '[:__SP__UNK:]' '[:accept:]'","ping -c Quantity Regex | tr Regex Regex | tr Regex Regex",n,n,n,n,n,n,,
"Attempt to connect as root via ssh to host whose IP address or hostname is specified by environment variable IPADDRESS - this will normally fail because ssh servers normally don't accept root logins.","ping -c 1 $IPADDRESS-will | tr '[:__SP__UNK:]' '[:accept:]' | tr '[:__SP__UNK:]' '[:root:]'","ping -c Quantity Regex | tr Regex Regex | tr Regex Regex",n,n,n,n,n,n,,
"Attempt to connect as root via ssh to host whose IP address or hostname is specified by environment variable IPADDRESS - this will normally fail because ssh servers normally don't accept root logins.","ping -c 1 $IPADDRESS-will | tr '[:__SP__UNK:]' '[:root:]' | tr '[:__SP__UNK:]' '[:accept:]'","ping -c Quantity Regex | tr Regex Regex | tr Regex Regex",n,n,n,n,n,n,,
"bind ""\C-i"" to ""complete"" function","bind -p '\C-i'","bind -p Regex",n,n,n,n,n,n,,
"bind ""\C-i"" to ""complete"" function","bind -p ""\C-i""","bind -p Regex",n,n,n,n,n,n,,
"bind ""\C-i"" to ""complete"" function","bind '""\C-i""'","bind Regex",y,n,y,n,y,n,,
"Calculate md5 checksum of $KEY, take the 1st to 10th character, append them with the string '/tmp/command_cache.' and save the rsultant string to variable FILE","echo ""$KEYtaketake1"" | md5sum | cut -c 1-10 | tr '\n' '/tmp/command_cache.'","echo Regex | md5sum | cut -c Number | tr Regex Regex",n,n,n,n,n,n,,
"Calculate md5 checksum of $KEY, take the 1st to 10th character, append them with the string '/tmp/command_cache.' and save the rsultant string to variable FILE","echo -n ""$KEYtaketake1"" | md5sum | cut -c 1-10 | tr '\n' '/tmp/command_cache.'","echo -n Regex | md5sum | cut -c Number | tr Regex Regex",n,n,n,n,n,n,,
"Calculate md5 checksum of $KEY, take the 1st to 10th character, append them with the string '/tmp/command_cache.' and save the rsultant string to variable FILE","echo ""$KEYtaketake1"" | md5sum | cut -c 2- | tr '\n' '/tmp/command_cache.'","echo Regex | md5sum | cut -c Number | tr Regex Regex",n,n,n,n,n,n,,
"Calculate the md5 sum of the contents of the sorted list of files ""$FILES""","cat $FILES | md5sum","cat File | md5sum",n,n,n,n,n,n,,
"Calculate the md5 sum of the contents of the sorted list of files ""$FILES""","cat ""$FILES"" | md5sum","cat File | md5sum",n,n,n,n,n,n,,
"Calculate the md5 sum of the contents of the sorted list of files ""$FILES""","cat $FILES | md5sum | cut -f 1 -d "" ""","cat File | md5sum | cut -f Number -d Regex",n,n,n,n,n,n,,
"Calculate md5 sum of empty string","echo -n '' | md5","echo -n Regex | md5",n,n,n,n,n,n,,
"Calculate md5 sum of empty string","echo -n '' | md5sum","echo -n Regex | md5sum",y,y,y,y,y,y,y,y
"Calculate md5 sum of empty string","echo -n ""$5"" | md5sum","echo -n Regex | md5sum",y,n,y,n,y,n,y,
"Calculate the md5 sum of the list of files in the current directory","md5sum *.5","md5sum File",y,n,n,n,y,n,y,n
"Calculate the md5 sum of the list of files in the current directory","md5sum *.log","md5sum File",y,n,n,n,y,n,y,n
"Calculate the md5 sum of the list of files in the current directory","find . -exec md5sum {} \;","find Path -exec md5sum {} \;",n,n,n,n,n,n,,
"Change all files with no user under ""/var/www"" to have owner ""root"" and group ""apache""","chown root:root /var/www","chown Regex File",n,n,n,n,n,n,,
"Change all files with no user under ""/var/www"" to have owner ""root"" and group ""apache""","find /var/www -nouser -ok chown root {} \;","find Path -nouser -ok chown Regex {} \;",y,n,y,n,n,n,y,n
"Change all files with no user under ""/var/www"" to have owner ""root"" and group ""apache""","find /var/www -type f -print0 | xargs -0 -I {} chown root {}","find Path -type f -print0 | xargs -0 -I {} chown Regex {}",n,n,n,n,n,n,,
"change the extension of all the "".abc"" files in the folder ""/the/path"" to "".edefg"" and do not change in the sub directories","find /the/path -maxdepth 1 -name ""*.abc"" -maxdepth 1 -print0 | xargs -0 -I {} chown -R .edefg {}","find Path -maxdepth Quantity -name Regex -maxdepth Quantity -print0 | xargs -0 -I {} chown -R Regex {}",n,n,n,n,n,n,,
"change the extension of all the "".abc"" files in the folder ""/the/path"" to "".edefg"" and do not change in the sub directories","find /the/path -maxdepth 1 -name ""*.abc"" -maxdepth 1 -print0 | xargs -0 -I {} chown .edefg {}","find Path -maxdepth Quantity -name Regex -maxdepth Quantity -print0 | xargs -0 -I {} chown Regex {}",n,n,n,n,n,n,,
"change the extension of all the "".abc"" files in the folder ""/the/path"" to "".edefg"" and do not change in the sub directories","find /the/path -maxdepth 1 -name ""*.abc"" -maxdepth 1 -exec chown .edefg {} \;","find Path -maxdepth Quantity -name Regex -maxdepth Quantity -exec chown Regex {} \;",n,n,n,n,n,n,,
"change the group of all the files in the folder /u/netinst/ to staff","find /u/netinst/tostaff -type f -exec chgrp __SP__UNK {} \;","find Path -type f -exec chgrp Regex {} \;",y,n,y,n,y,n,y,n
"change the group of all the files in the folder /u/netinst/ to staff","find /u/netinst/to/tostaff -type f -exec chgrp __SP__UNK {} \;","find Path -type f -exec chgrp Regex {} \;",y,n,y,n,y,n,y,n
"change the group of all the files in the folder /u/netinst/ to staff","find /u/netinst/tostaff -exec chgrp __SP__UNK {} \;","find Path -exec chgrp Regex {} \;",y,n,y,n,n,n,y,n
"Changes group ownership of 'logdir' to 'loggroup'.","chgrp loggroup logdir","chgrp Regex File",y,y,y,y,y,y,,
"Changes group ownership of 'logdir' to 'loggroup'.","chgrp loggroup loggroup","chgrp Regex File",y,n,y,n,y,n,,
"Changes group ownership of 'logdir' to 'loggroup'.","chgrp loggroup logdir | xargs -n 1 -I {} chgrp loggroup {}","chgrp Regex File | xargs -n Quantity -I {} chgrp Regex {}",y,y,y,y,n,n,y,y
"Changes group ownership of 'public' and 'private' to 'god'.","chgrp private public","chgrp Regex File",y,n,n,n,y,n,y,n
"Changes group ownership of 'public' and 'private' to 'god'.","chgrp god public","chgrp Regex File",y,n,n,n,y,n,y,n
"Changes group ownership of 'public' and 'private' to 'god'.","chgrp private public | xargs -n 1 -I {} chown god {}","chgrp Regex File | xargs -n Quantity -I {} chown Regex {}",n,n,n,n,n,n,,
"Changes group ownership of 'shared' to 'Workers'.","chgrp Workers shared","chgrp Regex File",y,y,y,y,y,y,,
"Changes group ownership of 'shared' to 'Workers'.","chgrp Workers Workers","chgrp Regex File",y,n,y,n,y,n,,
"Changes group ownership of 'shared' to 'Workers'.","chgrp Workers shared | xargs -n 1 -I {} chgrp Workers {}","chgrp Regex File | xargs -n Quantity -I {} chgrp Regex {}",y,y,y,y,n,n,y,y
"change the owner of all the files in the file system which belong to the user with the uid 999","find / -user 999 -exec chown 999 {} \;","find Path -user Regex -exec chown Regex {} \;",y,n,y,n,y,n,,
"change the owner of all the files in the file system which belong to the user with the uid 999","find / -user 999 -exec chown -h 999 {} \;","find Path -user Regex -exec chown -h Regex {} \;",y,n,y,n,n,n,y,n
"change the owner of all the files in the file system which belong to the user with the uid 999","find / -user 999 -print -exec chown 999 {} \;","find Path -user Regex -print -exec chown Regex {} \;",y,n,y,n,y,n,,
"Change the ownership of ""/etc/udev/rules.d/51-android.rules"" to ""root""","chown root /etc/udev/rules.d/51-android.rules","chown Regex File",y,y,y,y,y,y,y,y
"Change the ownership of ""/etc/udev/rules.d/51-android.rules"" to ""root""","chown root /etc/udev/rules.d/51/51-android.rules","chown Regex File",y,n,y,n,y,n,y,
"Change the ownership of ""/etc/udev/rules.d/51-android.rules"" to ""root""","chown root /etc/udev/rules.d/51/51.rules","chown Regex File",y,n,y,n,y,n,y,
"Change the ownership of ""file.sh"" to ""root""","chown root file.sh","chown Regex File",y,y,y,y,y,y,,
"Change the ownership of ""file.sh"" to ""root""","chown root file.sh | xargs -I {} chown root {}","chown Regex File | xargs -I {} chown Regex {}",y,y,y,y,n,n,y,y
"Change the ownership of ""file.sh"" to ""root""","chown root file.sh | xargs -n 1 -I {} chown root {}","chown Regex File | xargs -n Quantity -I {} chown Regex {}",y,y,y,y,n,n,y,y
"Change the ownership of all aluno1's files in the current directory and below to aluno2","find . -name aluno1 -exec chown aluno2 {} \;","find Path -name Regex -exec chown Regex {} \;",n,n,n,n,n,n,,
"Change the ownership of all aluno1's files in the current directory and below to aluno2","find . -name aluno1 -exec chown -R aluno2 {} \;","find Path -name Regex -exec chown -R Regex {} \;",n,n,n,n,n,n,,
"Change the ownership of all aluno1's files in the current directory and below to aluno2","find . -name aluno1 | xargs -I {} chown aluno {}","find Path -name Regex | xargs -I {} chown Regex {}",n,n,n,n,n,n,,
"change the permissions of all the directories in the folder ""/path/to/someDirectory"" to 755","find /path/to/someDirectory -type d -exec chmod 755 {} +","find Path -type d -exec chmod Permission {} +",y,y,y,y,n,n,y,y
"change the permissions of all the directories in the folder ""/path/to/someDirectory"" to 755","find /path/to/someDirectory -type d -exec chmod 755 {} \;","find Path -type d -exec chmod Permission {} \;",y,y,y,y,n,n,y,y
"change the permissions of all the directories in the folder ""/path/to/someDirectory"" to 755","find /path/to/someDirectory -type d -print0 | xargs -0 -I {} chmod 755 {}","find Path -type d -print0 | xargs -0 -I {} chmod Permission {}",y,y,y,y,y,y,,
"change the permission of all the php files in the folder /var/www/ to 700","find /var/www/to700/ -name ""*.php"" -exec chmod 755 {} \; -exec chmod 644 {} \;","find Path -name Regex -exec chmod Permission {} \; -exec chmod Permission {} \;",y,n,y,n,n,n,y,n
"change the permission of all the php files in the folder /var/www/ to 700","find /var/www/to700/ -name ""*.php"" -exec chmod 755 {} +","find Path -name Regex -exec chmod Permission {} +",y,n,y,n,n,n,y,n
"change the permission of all the php files in the folder /var/www/ to 700","find /var/www/to700/ -name *.php -type f -exec chmod 644 {} +","find Path -name Regex -type f -exec chmod Permission {} +",y,n,y,n,n,n,y,n
"change the permissions of all regular/normal files in the current directory, print0 is used for handling files with newlines in their file name","find . -type f -print0 | xargs -0 -I {} chmod go+r {}","find Path -type f -print0 | xargs -0 -I {} chmod Permission {}",y,n,y,n,y,n,,
"change the permissions of all regular/normal files in the current directory, print0 is used for handling files with newlines in their file name","find . -type f -exec chmod a+x {} \;","find Path -type f -exec chmod Permission {} \;",n,n,n,n,n,n,,
"change the permissions of all regular/normal files in the current directory, print0 is used for handling files with newlines in their file name","find . -type f -exec chmod g+r {} \;","find Path -type f -exec chmod Permission {} \;",n,n,n,n,n,n,,
"Change permissions to 644 for all directories under and below /path/to/someDirectory/","find /path/to/someDirectory/ -type d -exec chmod 644 {} +","find Path -type d -exec chmod Permission {} +",y,y,y,y,y,y,y,y
"Change permissions to 644 for all directories under and below /path/to/someDirectory/","find /path/to/someDirectory/ -type d -exec chmod 644 {} \;","find Path -type d -exec chmod Permission {} \;",y,y,y,y,y,y,y,y
"Change permissions to 644 for all directories under and below /path/to/someDirectory/","find /path/to/someDirectory/ -type d -print0 | xargs -0 -I {} chmod 644 {}","find Path -type d -print0 | xargs -0 -I {} chmod Permission {}",y,y,y,y,y,y,y,y
"Change permission to 755 of all files/directories under current directory tree that have 777 permission","find . -type f -perm 0777 -print -exec chmod 755 {} \;","find Path -type f -perm Permission -print -exec chmod Permission {} \;",n,n,n,n,n,n,,
"Change permission to 755 of all files/directories under current directory tree that have 777 permission","find . -perm 777 -print -exec chmod 755 {} \;","find Path -perm Permission -print -exec chmod Permission {} \;",y,y,y,y,n,n,y,y
"Change permission to 755 of all files/directories under current directory tree that have 777 permission","find . -type f -perm 0777 -exec chmod 755 {} \;","find Path -type f -perm Permission -exec chmod Permission {} \;",n,n,n,n,y,n,n,n
"change the word ""GHBAG"" to ""stream-agg"" in all the file names in current folder which have the word ""-GHBAG-"" in their name","find . -name ""*-GHBAG-agg-*"" -exec chown stream-agg {} \;","find Path -name Regex -exec chown Regex {} \;",n,n,n,n,n,n,,
"change the word ""GHBAG"" to ""stream-agg"" in all the file names in current folder which have the word ""-GHBAG-"" in their name","find . -name '-GHBAG-*' -exec chown stream-agg-agg {} \;","find Path -name Regex -exec chown Regex {} \;",n,n,n,n,n,n,,
"change the word ""GHBAG"" to ""stream-agg"" in all the file names in current folder which have the word ""-GHBAG-"" in their name","find . -name ""*-GHBAG-agg-*"" -exec rename 's/-GHBAG-agg/' {} \;","find Path -name Regex -exec rename Regex {} \;",y,n,y,n,y,n,,
"Combine every two lines of standard input","nl","nl",n,n,n,n,n,n,,
"Combine every two lines of standard input","tr '[:2:]' '[:2:]' | tr '\n' '\n'","tr Regex Regex | tr Regex Regex",n,n,n,n,n,n,,
"Combine every two lines of standard input","tr '[:2:]' '[:2:]' | xargs -n 1 -I {} echo {}","tr Regex Regex | xargs -n Quantity -I {} echo {}",n,n,n,n,n,n,,
"Compare *.csv files in the current directory tree with their analogs stored in /some/other/path/ prompting before running `diff'","find . -name ""*.csv"" -exec diff {} /some/other/path/prompting/prompting \; -print","find Path -name Regex -exec diff {} File \; -print",n,n,n,n,n,n,,
"Compare *.csv files in the current directory tree with their analogs stored in /some/other/path/ prompting before running `diff'","find . -name '*.csv' -exec diff -u {} /some/other/path/prompting/prompting \;","find Path -name Regex -exec diff -u {} File \;",n,n,n,n,n,n,,
"Compare *.csv files in the current directory tree with their analogs stored in /some/other/path/ prompting before running `diff'","find . -name ""*.csv"" -exec diff {} /some/other/path/prompting/prompting {} +","find Path -name Regex -exec diff {} File {} +",n,n,n,n,n,n,,
"Compare files in ""/tmp/dir1"" and ""/tmp/dir2"", treating absent files as empty and all files as text","diff -N -a -u r /tmp/dir1 /tmp/dir2","diff -N -a -u Quantity File File",n,n,n,n,n,n,,
"Compare files in ""/tmp/dir1"" and ""/tmp/dir2"", treating absent files as empty and all files as text","diff -N -a -u r /tmp/dir2 /tmp/dir2","diff -N -a -u Quantity File File",n,n,n,n,n,n,,
"Compare files in ""/tmp/dir1"" and ""/tmp/dir2"", treating absent files as empty and all files as text","diff -N -a -u r tmp/dir1 /tmp/dir2","diff -N -a -u Quantity File File",n,n,n,n,n,n,,
"Compresses all files in a current folder (not recursively).","find . -exec compress {} \;","find Path -exec compress {} \;",n,n,n,n,n,n,,
"Compresses all files in a current folder (not recursively).","find . -type f -exec bzip2 {} \;","find Path -type f -exec bzip2 {} \;",n,n,n,n,n,n,,
"Compresses all files in a current folder (not recursively).","find . -type f -exec bzip2 {} +","find Path -type f -exec bzip2 {} +",n,n,n,n,n,n,,
"Compress all files in directory ""$PATH_TO_LOGS"" that were last modified more than ""$SOME_NUMBER_OF_DAYS"" days ago","find $PATH_TO_LOGS -mtime +0 -exec compress -r {} \;","find Path -mtime +Timespan -exec compress File {} \;",y,n,n,n,y,n,y,n
"Compress all files in directory ""$PATH_TO_LOGS"" that were last modified more than ""$SOME_NUMBER_OF_DAYS"" days ago","find $PATH_TO_LOGS -mtime +365 -exec compress -r {} \;","find Path -mtime +Timespan -exec compress File {} \;",y,n,n,n,y,n,y,n
"Compress all files in directory ""$PATH_TO_LOGS"" that were last modified more than ""$SOME_NUMBER_OF_DAYS"" days ago","find $PATH_TO_LOGS -mtime +365 -exec compress {} \;","find Path -mtime +Timespan -exec compress {} \;",n,n,n,n,y,n,n,n
"Compresses all files in the directory 'PATH_TO_FOLDER' without recursion and keeps uncompressed files from deletion.","find PATH_TO_FOLDER -type f -exec gzip -k {} \;","find Path -type f -exec gzip -k {} \;",n,n,n,n,n,n,,
"Compresses all files in the directory 'PATH_TO_FOLDER' without recursion and keeps uncompressed files from deletion.","find PATH_TO_FOLDER -type f -exec gzip {} \;","find Path -type f -exec gzip {} \;",n,n,n,n,n,n,,
"Compresses all files in the directory 'PATH_TO_FOLDER' without recursion and keeps uncompressed files from deletion.","find PATH_TO_FOLDER -type f -exec rm {} \;","find Path -type f -exec rm {} \;",n,n,n,n,n,n,,
"Compress regular files in the current directory tree that were last modified more than 7 days ago","find . -type f -mtime +7 -exec compress {} \;","find Path -type f -mtime +Timespan -exec compress {} \;",y,y,n,n,y,y,y,y
"Compress regular files in the current directory tree that were last modified more than 7 days ago","find . -type f -mtime +7","find Path -type f -mtime +Timespan",n,n,n,n,n,n,,
"Compress regular files in the current directory tree that were last modified more than 7 days ago","find . -type f -mtime +7 -exec compress -r {} \;","find Path -type f -mtime +Timespan -exec compress File {} \;",y,y,n,n,y,y,y,y
"Compresses with compression level 9 all files under the current folder but already compressed '*.bz2' files, performing in background.","find . -type f -not -name ""*.bz2"" -exec gzip -9 {} \;","find Path -type f -not -name Regex -exec gzip -9 {} \;",n,n,n,n,n,n,,
"Compresses with compression level 9 all files under the current folder but already compressed '*.bz2' files, performing in background.","find . -type f -name ""*.bz2"" -exec gzip -9 {} \;","find Path -type f -name Regex -exec gzip -9 {} \;",n,n,n,n,n,n,,
"Compresses with compression level 9 all files under the current folder but already compressed '*.bz2' files, performing in background.","find . -type f -name ""*.bz2"" -exec compress -f {} \;","find Path -type f -name Regex -exec compress -f {} \;",n,n,n,n,n,n,,
"Connect to host ""${HOSTNAME}"" as user ""${USERNAME}"" and execute ""${SCRIPT}"" non-interactively","ssh -i ${HOSTNAME}} ${SCRIPT} ${SCRIPT}","ssh -i File Regex command",n,n,n,n,n,n,,
"Connect to host ""${HOSTNAME}"" as user ""${USERNAME}"" and execute ""${SCRIPT}"" non-interactively","ssh -i ${HOSTNAME}} ${HOSTNAME} ${SCRIPT}","ssh -i File Regex command",n,n,n,n,n,n,,
"Connect to host ""${HOSTNAME}"" as user ""${USERNAME}"" and execute ""${SCRIPT}"" non-interactively","ssh -S ""${HOSTNAME}"" ""${USERNAME}""","ssh -S Path Regex",n,n,n,n,n,n,,
"Copy ""*.cc"", ""*.h"", and ""SConstruct"" to ""rsync://localhost:40001/bledge_ce"" using blocking IO","rsync -P -c *.cc *.cc --exclude=rsync:///localhost:40001/bledge_ce rsync:///localhost:40001/bledge_ce rsync:///localhost:40001/bledge_ce","rsync -P -c File File --exclude Regex File File",n,n,n,n,n,n,,
"Copy ""*.cc"", ""*.h"", and ""SConstruct"" to ""rsync://localhost:40001/bledge_ce"" using blocking IO","rsync --progress -c *.cc *.cc --exclude=rsync:///localhost:40001/bledge_ce rsync:///localhost:40001/bledge_ce rsync:///localhost:40001/bledge_ce","rsync --progress -c File File --exclude Regex File File",n,n,n,n,n,n,,
"Copy ""*.cc"", ""*.h"", and ""SConstruct"" to ""rsync://localhost:40001/bledge_ce"" using blocking IO","rsync -r -v -f *.cc rsync:///localhost:40001/bledge_ce rsync:///localhost:40001/bledge_ce","rsync -r -v -f Program File File",n,n,n,n,n,n,,
"Copies ${FILE} to COLLECT folder with unique name formatted like 'job_XXXXXXXXX'.","cp -n ""${FILE}"" job_XXXXXXXXX","cp -n File File",y,n,y,n,y,n,,
"Copies ${FILE} to COLLECT folder with unique name formatted like 'job_XXXXXXXXX'.","cp -n ${FILE} job_XXXXXXXXX","cp -n File File",y,n,y,n,y,n,,
"Copies ${FILE} to COLLECT folder with unique name formatted like 'job_XXXXXXXXX'.","cp -n ""${FILE}"" ${FILE}","cp -n File File",y,n,y,n,y,n,,
"Copy a file xyz.c to all the .c files present in the C directory and below","find c -name ""*.c"" -print0 | xargs -0 -I {} cp -t xyz.c {}","find Path -name Regex -print0 | xargs -0 -I {} cp -t Directory {}",n,n,n,n,n,n,,
"Copy a file xyz.c to all the .c files present in the C directory and below","find c -name ""*.c"" -exec cp {} xyz.c \;","find Path -name Regex -exec cp {} File \;",y,n,y,n,y,n,,
"Copy a file xyz.c to all the .c files present in the C directory and below","find c -name ""*.c"" -print0 | xargs -0 -I {} cp -a --target-directory=xyz.c {}","find Path -name Regex -print0 | xargs -0 -I {} cp -a --target-directory Directory {}",n,n,n,n,n,n,,
"Copy all *.data files under /source_path to /target_path","find /source_path/path -type f -name ""*.data"" -exec cp {} /target_path {} \;","find Path -type f -name Regex -exec cp {} File {} \;",y,n,y,n,y,y,y,n
"Copy all *.data files under /source_path to /target_path","find /source_path/path -name ""*.data"" -exec cp {} /target_path {} \;","find Path -name Regex -exec cp {} File {} \;",n,n,y,n,n,n,n,n
"Copy all *.data files under /source_path to /target_path","find /source_path /target_path -name ""*.data"" -exec cp {} /target_path {} \;","find Path Path -name Regex -exec cp {} File {} \;",n,n,y,n,n,n,n,n
"Copy all files (not directories) in ""/path/to/local/storage"" to ""/path/to/copy"" on host ""remote.host"" authenticating as user ""user""","cp /path/to/local/storage user@remote.host:/path/to/copy","cp File File",n,n,n,n,n,n,,
"Copy all files (not directories) in ""/path/to/local/storage"" to ""/path/to/copy"" on host ""remote.host"" authenticating as user ""user""","rsync -a -v /path/to/local/storage user@remote.host:/path/to/copy","rsync -a -v File File",n,n,n,n,n,n,,
"Copy all files (not directories) in ""/path/to/local/storage"" to ""/path/to/copy"" on host ""remote.host"" authenticating as user ""user""","rsync -a -v --progress /path/to/local/storage user@remote.host:/path/to/copy","rsync -a -v --progress File File",n,n,n,n,n,n,,
"copy all the files with the extension "".type"" from one folder to a target directory","find ./ -type f -name ""*.type"" -exec cp {} /tmp \;","find Path -type f -name Regex -exec cp {} File \;",y,n,y,n,y,n,,
"copy all the files with the extension "".type"" from one folder to a target directory","find ./ -type f -name ""*.type"" -exec cp {} /tmp/ \;","find Path -type f -name Regex -exec cp {} File \;",y,n,y,n,y,n,,
"copy all the files with the extension "".type"" from one folder to a target directory","find . -name ""*.type"" -exec cp {} /tmp/ \;","find Path -name Regex -exec cp {} File \;",n,n,y,n,n,n,n,n
"Copy directory structure from directory 'olddir' to 'newdir'","find olddir -type d -exec mkdir -p newdir {} +","find Path -type d -exec mkdir -p Directory {} +",n,n,y,n,n,n,n,n
"Copy directory structure from directory 'olddir' to 'newdir'","find olddir -type d | xargs -I {} cp --target-directory=newdir {}","find Path -type d | xargs -I {} cp --target-directory Directory {}",n,n,n,n,n,n,,
"Copy directory structure from directory 'olddir' to 'newdir'","find olddir -type d -print0 | xargs -0 -I {} cp -t newdir {}","find Path -type d -print0 | xargs -0 -I {} cp -t Directory {}",n,n,n,n,n,n,,
"Copy file in current directory of local host to host ""remote"", connecting as ssh user matching current local username, and copying the file in home directory on remote host - enable compression during transfer.","cp -r -f $(basename $0)","cp -r -f $( basename Regex )",n,n,n,n,n,n,,
"Copy file in current directory of local host to host ""remote"", connecting as ssh user matching current local username, and copying the file in home directory on remote host - enable compression during transfer.","","",n,n,n,n,n,n,n,
"Copy file in current directory of local host to host ""remote"", connecting as ssh user matching current local username, and copying the file in home directory on remote host - enable compression during transfer.","","",n,n,n,n,n,n,n,
"Copy the owner and group from ""file.txt"" to ""$tempfile""","chown $tempfile.txt file.txt","chown Regex File",n,n,n,n,n,n,,
"Copy the owner and group from ""file.txt"" to ""$tempfile""","chown $tempfile:$tempfile file.txt","chown Regex File",n,n,n,n,n,n,,
"Copy the owner and group from ""file.txt"" to ""$tempfile""","chown --reference=file.txt file.txt","chown --reference File Regex",y,n,y,n,n,n,y,n
"Counts all lines in $i file.","cat $i | wc -l","cat File | wc -l",y,y,y,y,y,y,,
"Counts all lines in $i file.","cat ""$i"" | wc -l","cat File | wc -l",y,y,y,y,y,y,,
"Counts all lines in $i file.","wc -l $i | wc -l","wc -l File | wc -l",n,n,n,n,n,n,,
"Count all the lines of all php files in current directory recursively","find . -name '*.php' | xargs -I {} wc -l {}","find Path -name Regex | xargs -I {} wc -l {}",n,n,y,y,n,n,n,n
"Count all the lines of all php files in current directory recursively","find . -name ""*.php"" | xargs -I {} wc -l {}","find Path -name Regex | xargs -I {} wc -l {}",n,n,y,y,n,n,n,n
"Count all the lines of all php files in current directory recursively","find . -name '*.php' -print0 | xargs -0 -I {} wc -l {}","find Path -name Regex -print0 | xargs -0 -I {} wc -l {}",n,n,y,y,n,n,n,n
"Counts lines in each *.php file.","wc -l *.php","wc -l File",n,n,y,y,n,n,n,n
"Counts lines in each *.php file.","cat *.php | wc -l","cat File | wc -l",n,n,n,n,n,n,,
"Counts lines in each *.php file.","wc -l $(find . -name ""*.php"" | xargs -I {} wc -l {})","wc -l $( find Path -name Regex | xargs -I {} wc -l {} )",n,n,n,n,n,n,,
"Count the number of directories under directory '/directory/' non-recursively","find /directory/' -name '*.[__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK]","find Path",n,n,n,n,n,n,,
"Count the number of directories under directory '/directory/' non-recursively","find /directory/' -name '*.[non][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK]","find Path",n,n,n,n,n,n,,
"Count the number of directories under directory '/directory/' non-recursively","find /directory/' -name '*.[__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][[]","find Path",n,n,n,n,n,n,,
"Count the number of files in the /usr/ports directory tree whose names begin with 'pkg-plist' and which contain 'dirrmtry'","find /usr/ports/ -name pkg-plist\* | wc -l","find Path -name Regex | wc -l",n,n,y,n,n,n,n,n
"Count the number of files in the /usr/ports directory tree whose names begin with 'pkg-plist' and which contain 'dirrmtry'","find /usr/ports/ -name pkg-plist\* -exec grep -l dirrmtry {} \; | wc -l","find Path -name Regex -exec grep -l Regex {} \; | wc -l",n,n,n,n,y,y,n,n
"Count the number of files in the /usr/ports directory tree whose names begin with 'pkg-plist' and which contain 'dirrmtry'","find /usr/ports/ -name pkg-plist\* -exec grep -l dirrmtry {} \; -exec wc -l {} \;","find Path -name Regex -exec grep -l Regex {} \; -exec wc -l {} \;",n,n,n,n,n,n,,
"Count the number of open files for PID ""$PYTHONPID"" every 2 seconds","cat $PYTHONPID | wc -l","cat File | wc -l",n,n,n,n,n,n,,
"Count the number of open files for PID ""$PYTHONPID"" every 2 seconds","find . -name ""$PYTHONPID"" -exec wc -l {} \; | wc -l","find Path -name Regex -exec wc -l {} \; | wc -l",n,n,n,n,n,n,,
"Count the number of open files for PID ""$PYTHONPID"" every 2 seconds","find . -name ""$PYTHONPID"" -exec wc -l {} \;","find Path -name Regex -exec wc -l {} \;",n,n,n,n,n,n,,
"Counts number of processors and saves in variable NUMCPU.","wc -l | wc -l","wc -l | wc -l",n,n,n,n,n,n,,
"Counts number of processors and saves in variable NUMCPU.","who | wc -l","who | wc -l",n,n,n,n,n,n,,
"Counts number of processors and saves in variable NUMCPU.","wc -l | grep ""__SP__UNK"" | wc -l","wc -l | grep Regex | wc -l",n,n,n,n,n,n,,
"Count the number of regular files with case insensitive name pattern $srchfor under 'teste2' directory tree","find teste2 -type f -iname ""$srchfor"" | wc -l","find Path -type f -iname Regex | wc -l",y,y,y,y,y,y,,
"Count the number of regular files with case insensitive name pattern $srchfor under 'teste2' directory tree","find teste2 -type f -iname ""$srchfor"" -printf ""%f\n"" | wc -l","find Path -type f -iname Regex -printf ""%f\n"" | wc -l",y,y,y,y,y,y,,
"Count the number of regular files with case insensitive name pattern $srchfor under 'teste2' directory tree","find teste2 -type f -iname ""$srchfor"" -exec wc -l {} \;","find Path -type f -iname Regex -exec wc -l {} \;",n,n,n,n,n,n,,
"Create 1000 files each file having a number from 1 to 1000 named ""file000"" to ""file999""","find . -name ""file000"" -exec touch {} \;","find Path -name Regex -exec touch {} \;",n,n,n,n,n,n,,
"Create 1000 files each file having a number from 1 to 1000 named ""file000"" to ""file999""","find . -type f -exec ln -s {} file000 \; | tee file999","find Path -type f -exec ln -s {} Regex \; | tee File",n,n,n,n,n,n,,
"Create 1000 files each file having a number from 1 to 1000 named ""file000"" to ""file999""","find . -name ""file000"" -exec ln -s file000 {} \;","find Path -name Regex -exec ln -s File {} \;",n,n,n,n,n,n,,
"Creates 5-letter random file name and saves it in 'rand_str' variable.","bzip2 -d -c rand_letter","bzip2 -d -c File",n,n,n,n,n,n,,
"Creates 5-letter random file name and saves it in 'rand_str' variable.","md5sum rand_letter","md5sum File",n,n,n,n,n,n,,
"Creates 5-letter random file name and saves it in 'rand_str' variable.","echo ""rand_letter"" | rev | cut -d ""/"" -f 2- | rev | cut -d ""/"" -f 2- | rev | cut -d ""/"" -f 2- | rev","echo Regex | rev | cut -d Regex -f Number | rev | cut -d Regex -f Number | rev | cut -d Regex -f Number | rev",n,n,n,n,n,n,,
"create a compressed archive ""compressFileName.tar.gz"" with verbose output","tar -c -z -f compressFileName.tar.gz folder","tar -c -z -f File File",n,n,n,n,n,n,,
"create a compressed archive ""compressFileName.tar.gz"" with verbose output","tar -c -z -f - compressFileName.tar.gz folder","tar -c -z -f File File File",n,n,n,n,n,n,,
"create a compressed archive ""compressFileName.tar.gz"" with verbose output","tar -c -z -v -f compressFileName.tar.gz folder","tar -c -z -v -f File File",y,n,y,n,n,n,y,y
"Create a compressed archive named 'my_directory.tar.gz' with files inside directory 'my_directory' without including the directory entry 'my_directory' itself","tar -t -v -f my_directory.tar.gz my_directory.tar.gz | tar -x -f - -C my_directory","tar -t -v -f File File | tar -x -f File -C Directory",n,n,n,n,n,n,,
"Create a compressed archive named 'my_directory.tar.gz' with files inside directory 'my_directory' without including the directory entry 'my_directory' itself","tar -t -v -f my_directory.tar.gz my_directory.tar.gz","tar -t -v -f File File",n,n,n,n,n,n,,
"Create a compressed archive named 'my_directory.tar.gz' with files inside directory 'my_directory' without including the directory entry 'my_directory' itself","tar -t -v -f my_directory.tar.gz my_directory.tar.gz | tar -x -v -f -","tar -t -v -f File File | tar -x -v -f File",n,n,n,n,n,n,,
"Create a rsa key with comment specified by variable APP and passphrase specified y SSHKEYPASS.","ssh -Y comment@app","ssh -Y Regex",n,n,n,n,n,n,,
"Create a rsa key with comment specified by variable APP and passphrase specified y SSHKEYPASS.","ssh -t comment:app","ssh -t Regex",n,n,n,n,n,n,,
"Create a rsa key with comment specified by variable APP and passphrase specified y SSHKEYPASS.","ssh -Y comment:app","ssh -Y Regex",n,n,n,n,n,n,,
"Create a ssh key with no passphrase and store it in ""outfile"".","ssh outfile@passphrase","ssh Regex",n,n,n,n,n,n,,
"Create a ssh key with no passphrase and store it in ""outfile"".","","",n,n,n,n,n,n,n,
"Create a ssh key with no passphrase and store it in ""outfile"".","","",n,n,n,n,n,n,n,
"Create a symolic link in ""/usr/local/bin/"" to ""/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl""","ln -s /Applications/local/bin/ /Applications/local/bin/","ln -s File Regex",y,n,y,n,y,n,,
"Create a symolic link in ""/usr/local/bin/"" to ""/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl""","ln -s /usr/local/bin/ /Applications/local/bin/","ln -s File Regex",y,n,y,n,y,n,,
"Create a symolic link in ""/usr/local/bin/"" to ""/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl""","ln -s /Applications/Sublime/bin/ /Applications/local/bin/","ln -s File Regex",y,n,y,n,y,n,,
"Create a symbolic link in the current directory to ""$file""","ln -s ""$file""","ln -s File",y,y,y,y,y,y,,
"Create a symbolic link in the current directory to ""$file""","ln -s $file","ln -s File",y,y,y,y,y,y,,
"Create a symbolic link in the current directory to ""$file""","ln -s $file *","ln -s File Regex",n,n,n,n,n,n,,
"Create a symbolic link in target directory ""~/newlinks"" to ""$source""","ln -s ""$source"" ""~/newlinks""","ln -s File Regex",y,y,y,y,y,y,,
"Create a symbolic link in target directory ""~/newlinks"" to ""$source""","ln -s ""$source"" ""$source""","ln -s File Regex",y,n,y,n,y,n,,
"Create a symbolic link in target directory ""~/newlinks"" to ""$source""","ln -s ""$source"" ""~/source""","ln -s File Regex",y,n,y,n,y,n,,
"Create a symbolic link named "".profile"" to ""git-stuff/home/profile"" without dereferencing "".profile""","ln -s .profile git-stuff/home/profile","ln -s File Regex",n,y,n,n,n,y,y,y
"Create a symbolic link named "".profile"" to ""git-stuff/home/profile"" without dereferencing "".profile""","ln -s .profile .profile git-stuff/home/profile","ln -s File Regex File",n,y,n,n,n,y,y,y
"Create a symbolic link named "".profile"" to ""git-stuff/home/profile"" without dereferencing "".profile""","ln -s git-stuff git-stuff/home/profile","ln -s File Regex",n,y,n,n,n,y,y,y
"Create a symbolic link named ""/usr/bin/my-editor"" to ""/usr/share/my-editor/my-editor-executable"" and attemp to hard link directories","ln -s /usr/bin/my-editor-executable /usr/bin/my-editor /usr/share/my-editor-executable","ln -s File Regex File",n,n,n,n,n,n,,
"Create a symbolic link named ""/usr/bin/my-editor"" to ""/usr/share/my-editor/my-editor-executable"" and attemp to hard link directories","ln -s /usr/bin/my-editor-executable /usr/share/my-editor-executable /usr/bin/my-editor","ln -s File Regex File",n,n,n,n,n,n,,
"Create a symbolic link named ""/usr/bin/my-editor"" to ""/usr/share/my-editor/my-editor-executable"" and attemp to hard link directories","ln -s /usr/bin/my-editor-executable /usr/share/my-editor-executable /usr/share/my-editor-executable","ln -s File Regex File",n,n,n,n,n,n,,
"Create a symbolic link named ""/usr/local/bin/subl"" to ""/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl""","ln -s /usr/local/bin/subl /usr/local/bin/subl /Applications/local/bin/subl /usr/local/bin/subl","ln -s File Regex File File",n,n,n,n,n,n,,
"Create a symbolic link named ""/usr/local/bin/subl"" to ""/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl""","ln -s /usr/local/bin/subl /usr/local/bin/subl /usr/local/bin/subl /usr/local/bin/subl","ln -s File Regex File File",n,n,n,n,n,n,,
"Create a symbolic link named ""/usr/local/bin/subl"" to ""/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl""","ln -s /usr/local/bin/subl /usr/local/bin/subl /usr/local/bin/subl","ln -s File Regex File",n,n,n,n,n,n,,
"Create a symbolc link named ""public_html"" to ""current/app/webroot"" under the current working directory","ln -s current_html $(pwd)","ln -s File $( pwd )",y,n,y,n,y,n,,
"Create a symbolc link named ""public_html"" to ""current/app/webroot"" under the current working directory","ln -s current_html $(pwd -P)","ln -s File $( pwd -P )",y,n,y,n,y,n,,
"Create a symbolc link named ""public_html"" to ""current/app/webroot"" under the current working directory","ln -s ""public_html"" $(pwd -P)","ln -s File $( pwd -P )",y,n,y,n,y,n,,
"Create a symbolic link named ""~/bin/subl"" to ""/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl""","ln -s /Applications/Sublime Text.app/Contents/SharedSupport/bin/subl /Applications/Sublime/subl /Applications/Sublime/subl","ln -s File Regex File File",n,n,n,n,n,n,,
"Create a symbolic link named ""~/bin/subl"" to ""/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl""","ln -s /Applications/Sublime Text.app/Contents/SharedSupport/bin/subl /Applications/Sublime/subl /Applications/Sublime/subl /Applications/Sublime/subl","ln -s File Regex File File File",n,n,n,n,n,n,,
"Create a symbolic link named ""~/bin/subl"" to ""/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl""","ln -s /Applications/Sublime Text.app/Contents/SharedSupport/bin/subl /Applications/Sublime/subl ~/bin/subl","ln -s File Regex File File",n,n,n,n,n,n,,
"Create a symbolic link named the basename of ""$file"" to ""$file""","ln -s ""$file"" ""$file""","ln -s File Regex",n,n,n,n,n,n,,
"Create a symbolic link named the basename of ""$file"" to ""$file""","ln -s $(readlink -e ""$file"")","ln -s $( readlink -e File )",n,n,n,n,n,n,,
"Create a symbolic link named the basename of ""$file"" to ""$file""","ln -s -f ""$file"" ""$file""","ln -s -f File Regex",n,n,n,n,n,n,,
"create a symbolic link with absolute path ""/cygdrive/c/Program Files"" to file ""/cygdrive/c/ProgramFiles""","ln -s /cygdrive/c/Program Files /cygdrive/c/Program","ln -s File Regex File",n,n,n,n,n,n,,
"create a symbolic link with absolute path ""/cygdrive/c/Program Files"" to file ""/cygdrive/c/ProgramFiles""","ln -s /cygdrive/c/Program Files /cygdrive/c/ProgramFiles","ln -s File Regex File",n,n,n,n,n,n,,
"create a symbolic link with absolute path ""/cygdrive/c/Program Files"" to file ""/cygdrive/c/ProgramFiles""","ln -s ""/cygdrive/c/Program Files"" /cygdrive/c/ProgramFiles","ln -s File Regex",y,n,y,n,y,y,y,n
"Create a tar file containing all the files in ~/Library folder that contain spaces in their names","find ~/Library -name '* *' -print0 | xargs -0 -I {} tar -c -v -f ~/Library/{} {}","find Path -name Regex -print0 | xargs -0 -I {} tar -c -v -f File {}",n,n,n,n,n,n,,
"Create a tar file containing all the files in ~/Library folder that contain spaces in their names","find ~/Library -name '* *' -exec tar -u -f ~/Library/{} \;","find Path -name Regex -exec tar -u -f File \;",n,n,n,n,n,n,,
"Create a tar file containing all the files in ~/Library folder that contain spaces in their names","find ~/Library/ -name '* *' -exec tar -u -f ~/Library/{} \;","find Path -name Regex -exec tar -u -f File \;",n,n,n,n,n,n,,
"Create an archive named newArch from the contents of ./test directory","tar -c -z -v -f ./test ./test","tar -c -z -v -f File File",y,n,y,n,n,n,y,n
"Create an archive named newArch from the contents of ./test directory","mkdir -p ./test","mkdir -p Directory",n,n,n,n,n,n,,
"Create an archive named newArch from the contents of ./test directory","tar -c -z -f ./test ./test","tar -c -z -f File File",y,n,y,n,n,n,y,n
"Create the directory '.npm-packages' in the user's home directory($HOME)","mkdir ~/.npm-packages","mkdir Directory",y,y,y,y,y,y,,
"Create the directory '.npm-packages' in the user's home directory($HOME)","find ~/ -name '.npm-packages' -prune -or -type d -exec mkdir ~/.npm-packages {} \;","find Path -name Regex -prune -or -type d -exec mkdir Directory {} \;",n,n,n,n,n,n,,
"Create the directory '.npm-packages' in the user's home directory($HOME)","find ~/ -name '.npm-packages' -prune -or -type d -exec mkdir ~/.npm-packages/{} \;","find Path -name Regex -prune -or -type d -exec mkdir Directory \;",n,n,n,n,n,n,,
"create directory /tmp/foo","mkdir /tmp/foo","mkdir Directory",y,y,y,y,y,y,,
"create directory /tmp/foo","find /tmp/foo -path /tmp/foo -prune -or -path /tmp/foo -prune -or -path /tmp/foo -prune -or -path '/tmp/foo' -prune -or -path '/tmp/foo' -print","find Path -path Regex -prune -or -path Regex -prune -or -path Regex -prune -or -path Regex -prune -or -path Regex -print",n,n,n,n,n,n,,
"create directory /tmp/foo","find /tmp/foo -path /tmp/foo -prune -or -path /tmp/foo -prune -or -path /tmp/foo -prune -or -path /tmp/foo -prune -or -path /tmp/foo -prune -or -path /tmp/","find Path -path Regex -prune -or -path Regex -prune -or -path Regex -prune -or -path Regex -prune -or -path Regex -prune -or -path Regex",n,n,n,n,n,n,,
"Create directory dir2","mkdir dir2","mkdir Directory",y,y,y,y,y,y,,
"Create directory dir2","mkdir dir2 | xargs -n 1 -I {} mkdir dir2 {}","mkdir Directory | xargs -n Quantity -I {} mkdir Directory {}",n,n,y,y,n,n,n,n
"Create directory dir2","mkdir -p dir2","mkdir -p Directory",y,y,y,y,n,n,y,y
"create symbolic links in directory ""/usr/local/symlinks "" to all files located in directiry ""incoming"" and that have been modified earlier then 5 days and owned by user ""nr""","find /usr/local/symlinks -type f -mtime +5 -exec ln -s {} /usr/local/symlinks \;","find Path -type f -mtime +Timespan -exec ln -s {} Regex \;",n,n,n,n,n,n,,
"create symbolic links in directory ""/usr/local/symlinks "" to all files located in directiry ""incoming"" and that have been modified earlier then 5 days and owned by user ""nr""","find /usr/local/symlinks -type f -mtime +5 -exec ln -s {} /usr/local/symlinks \;","find Path -type f -mtime +Timespan -exec ln -s {} Regex \;",n,n,n,n,n,n,,
"create symbolic links in directory ""/usr/local/symlinks "" to all files located in directiry ""incoming"" and that have been modified earlier then 5 days and owned by user ""nr""","find /usr/local/symlinks -type f -mtime 5 -exec ln -s {} /usr/local/symlinks \;","find Path -type f -mtime Timespan -exec ln -s {} Regex \;",n,n,n,n,n,n,,
"Create tar archive ""dirall.tar"" and copy all files from directory tree /tmp/a1 to it","find /tmp/a1 -name ""dirall.tar"" -exec tar -c -v -f dirall.tar {} \;","find Path -name Regex -exec tar -c -v -f File {} \;",n,n,n,n,n,n,,
"Create tar archive ""dirall.tar"" and copy all files from directory tree /tmp/a1 to it","find /tmp/a1 -exec tar -u -v -f dirall.tar {} \;","find Path -exec tar -u -v -f File {} \;",y,y,y,y,n,n,y,y
"Create tar archive ""dirall.tar"" and copy all files from directory tree /tmp/a1 to it","find /tmp/a1 -iname ""dirall.tar"" -exec tar -c -v -f dirall.tar {} \;","find Path -iname Regex -exec tar -c -v -f File {} \;",n,n,n,n,n,n,,
"Create tar archive ""foo.tar"" and copy all files from directory tree /tmp/a1 to it","find /tmp/a1 -exec tar -u -v -f foo.tar {} \;","find Path -exec tar -u -v -f File {} \;",y,y,y,y,n,n,y,y
"Create tar archive ""foo.tar"" and copy all files from directory tree /tmp/a1 to it","find /tmp/a1 -name ""foo.tar"" -exec tar -c -v -f foo.tar {} \;","find Path -name Regex -exec tar -c -v -f File {} \;",n,n,n,n,n,n,,
"Create tar archive ""foo.tar"" and copy all files from directory tree /tmp/a1 to it","find /tmp/a1 -exec tar -c -v -f foo.tar {} \;","find Path -exec tar -c -v -f File {} \;",n,n,n,n,n,n,,
"Creates temporary file in a TMPDIR folder with name like tmp.XXXXXXXXXX.","mktemp -t tmp.XXXXXXXXXX","mktemp -t Regex",y,y,y,y,y,y,,
"Creates temporary file in a TMPDIR folder with name like tmp.XXXXXXXXXX.","mktemp -t ""tmp.XXXXXXXXXX""","mktemp -t Regex",y,y,y,y,y,y,,
"Creates temporary file in a TMPDIR folder with name like tmp.XXXXXXXXXX.","mktemp tmp.XXXXXXXXXX","mktemp Regex",y,y,y,y,y,y,,
"Delete all __temp__* files/directories under current directory tree","find . -name ""__temp__*"" -exec rm {} \;","find Path -name Regex -exec rm {} \;",n,n,n,n,n,n,,
"Delete all __temp__* files/directories under current directory tree","find . -name __temp__* -exec rm {} \;","find Path -name Regex -exec rm {} \;",n,n,n,n,n,n,,
"Delete all __temp__* files/directories under current directory tree","find . -name '__temp__*' -delete","find Path -name Regex -delete",n,n,y,y,n,n,n,n
"delete all the broken symbolic links from the folder /usr/ports/packages","find /usr/ports/packages -type l -delete","find Path -type l -delete",n,n,n,n,n,n,,
"delete all the broken symbolic links from the folder /usr/ports/packages","find -L /usr/ports/packages -type l -delete","find -L Path -type l -delete",y,y,y,y,n,n,y,y
"delete all the broken symbolic links from the folder /usr/ports/packages","find /usr/ports/packages -type l -exec rm {} \;","find Path -type l -exec rm {} \;",n,n,n,n,n,n,,
"Delete all directories in the TBD directory that were modified more than 1 day ago","find TBD -mindepth 1 -type d -mtime +1 -exec rm -r -f {} \;","find Path -mindepth Quantity -type d -mtime +Timespan -exec rm -r -f {} \;",y,y,y,y,y,y,,
"Delete all directories in the TBD directory that were modified more than 1 day ago","find TBD -mindepth 1 -type d -mtime +1 -delete","find Path -mindepth Quantity -type d -mtime +Timespan -delete",n,n,y,y,n,n,n,n
"Delete all directories in the TBD directory that were modified more than 1 day ago","find TBD -type d -mtime +1 -exec rm -r -f {} \;","find Path -type d -mtime +Timespan -exec rm -r -f {} \;",y,y,y,y,y,y,,
"Delete all files/directories with node number $inum under current directory tree","find . -inum $inum -exec rm {} \;","find Path -inum Quantity -exec rm {} \;",n,n,n,n,y,y,n,n
"Delete all files/directories with node number $inum under current directory tree","find . -name ""$inum"" -exec rm {} \;","find Path -name Regex -exec rm {} \;",n,n,n,n,n,n,,
"Delete all files/directories with node number $inum under current directory tree","find . -inum node$inum -exec rm {} \;","find Path -inum Quantity -exec rm {} \;",n,n,n,n,y,n,n,n
"Delete all files in the TBD directory that were modified more than 1 day ago","find TBD -mtime +1 -exec rm {} \;","find Path -mtime +Timespan -exec rm {} \;",n,n,y,y,n,n,n,n
"Delete all files in the TBD directory that were modified more than 1 day ago","find TBD -mtime +1 -delete","find Path -mtime +Timespan -delete",n,n,y,y,n,n,n,n
"Delete all files in the TBD directory that were modified more than 1 day ago","find TBD \; -mtime +1 -exec rm {} \;","find Path Path -mtime +Timespan -exec rm {} \;",n,n,n,n,n,n,,
"Delete all files (files, directories, links, pipes...) named 'core' under current directory","find . -name core -exec rm {} \;","find Path -name Regex -exec rm {} \;",n,n,n,n,n,n,,
"Delete all files (files, directories, links, pipes...) named 'core' under current directory","find . -name ""core"" -exec rm {} \;","find Path -name Regex -exec rm {} \;",n,n,n,n,n,n,,
"Delete all files (files, directories, links, pipes...) named 'core' under current directory","find . -name ""core"" -exec rm -f {} \;","find Path -name Regex -exec rm -f {} \;",n,n,n,n,y,y,n,n
"Delete all files with '.old' extension under current directory tree","find . -name ""*.old"" -exec rm {} \;","find Path -name Regex -exec rm {} \;",y,y,y,y,y,y,,
"Delete all files with '.old' extension under current directory tree","find . -name ""*.old"" -delete","find Path -name Regex -delete",y,y,y,y,y,y,,
"Delete all files with '.old' extension under current directory tree","find . -type f -name ""*.old"" -exec rm -f {} \;","find Path -type f -name Regex -exec rm -f {} \;",y,y,y,y,y,y,,
"delete all the normal/regular files in the current folder","find . -type f -exec rm -f {} \;","find Path -type f -exec rm -f {} \;",y,y,y,y,y,y,,
"delete all the normal/regular files in the current folder","find . -type f -delete","find Path -type f -delete",y,y,y,y,y,y,,
"delete all the normal/regular files in the current folder","find . -type f -print0 | xargs -0 -I {} rm {}","find Path -type f -print0 | xargs -0 -I {} rm {}",y,y,y,y,y,y,,
"Delete all regular files under current directory","find . -type f -exec rm -f {} \;","find Path -type f -exec rm -f {} \;",y,y,y,y,y,y,,
"Delete all regular files under current directory","find . -type f -print0 | xargs -0 -I {} rm {}","find Path -type f -print0 | xargs -0 -I {} rm {}",y,y,y,y,y,y,,
"Delete all regular files under current directory","find . -type f -print0 | xargs -0 -I {} rm -r -f {}","find Path -type f -print0 | xargs -0 -I {} rm -r -f {}",y,y,y,y,y,y,,
"delete all text files from current folder","find . -name ""*.txt"" -delete","find Path -name Regex -delete",y,y,y,y,y,y,,
"delete all text files from current folder","find . -name ""*.txt"" -exec rm {} \;","find Path -name Regex -exec rm {} \;",y,y,y,y,y,y,,
"delete all text files from current folder","find . -name ""*.txt"" -exec rm -f {} \;","find Path -name Regex -exec rm -f {} \;",y,y,y,y,y,y,,
"Delete files under $LOCATION that match $REQUIRED_FILES in their names and were modified more than 1 day ago","find $LOCATION -name $REQUIRED_FILES -mtime +1 -delete","find Path -name Regex -mtime +Timespan -delete",n,n,y,y,n,n,n,n
"Delete files under $LOCATION that match $REQUIRED_FILES in their names and were modified more than 1 day ago","find $LOCATION -name $REQUIRED_FILES -mtime +1 -exec rm {} \;","find Path -name Regex -mtime +Timespan -exec rm {} \;",y,y,y,y,y,y,,
"Delete files under $LOCATION that match $REQUIRED_FILES in their names and were modified more than 1 day ago","find $LOCATION -name $REQUIRED_FILES -type f -mtime +1 -exec rm {} \;","find Path -name Regex -type f -mtime +Timespan -exec rm {} \;",y,y,y,y,y,y,,
"Delete in the background all files in /var/tmp/stuff1 and below that have not been modified in over 90 days","find /var/tmp/stuff1 -mtime +90 -exec rm {} +","find Path -mtime +Timespan -exec rm {} +",n,n,n,n,n,n,,
"Delete in the background all files in /var/tmp/stuff1 and below that have not been modified in over 90 days","find /var/tmp/stuff1 -mtime +90 -exec rm -f {} \;","find Path -mtime +Timespan -exec rm -f {} \;",n,n,n,n,n,n,,
"Delete in the background all files in /var/tmp/stuff1 and below that have not been modified in over 90 days","find /var/tmp/stuff1 -mtime +90 -exec rm {} \;","find Path -mtime +Timespan -exec rm {} \;",n,n,n,n,n,n,,
"display the three largest files by size in current folder","find . -type f -exec ls -s {} \; | sort -n -r | head - 3","find Path -type f -exec ls -s {} \; | sort -n -r | head - Quantity",n,n,n,n,n,n,,
"display the three largest files by size in current folder","find . -type f -exec ls -s {} \; | sort -n -r | head -n 3","find Path -type f -exec ls -s {} \; | sort -n -r | head -n Quantity",y,y,y,y,y,y,,
"display the three largest files by size in current folder","find . -type f -exec ls -s {} \; | sort -n -r -k 5 | head -n 3","find Path -type f -exec ls -s {} \; | sort -n -r -k Number | head -n Quantity",y,n,y,n,y,y,n,n
"display the three smallest files by size in a folder.","find /tmp -type f -exec ls -s {} \; | sort -n -r | head - 3","find Path -type f -exec ls -s {} \; | sort -n -r | head - Quantity",n,n,n,n,n,n,,
"display the three smallest files by size in a folder.","find /tmp -type f -exec ls -s {} \; | sort -n -k 2 | head - 3","find Path -type f -exec ls -s {} \; | sort -n -k Number | head - Quantity",n,n,n,n,n,n,,
"display the three smallest files by size in a folder.","find /home/tecmint/Downloads/ -type f -printf ""%s %p\n"" | sort -n | head - 3","find Path -type f -printf ""%s %p\n"" | sort -n | head - Quantity",n,n,n,n,n,n,,
"Display a binary file as a sequence of hex codes","find . -name ""filename including space"" -exec echo {} \;","find Path -name Regex -exec echo {} \;",n,n,n,n,n,n,,
"Display a binary file as a sequence of hex codes","find / -name ""*.mp3"" -printf ""%h\n""","find Path -name Regex -printf ""%h\n""",n,n,n,n,n,n,,
"Display a binary file as a sequence of hex codes","find / -name ""*.mp3"" -exec echo {} \;","find Path -name Regex -exec echo {} \;",n,n,n,n,n,n,,
"dispaly a long listig of all the files in the current folder which are bigger than 100KB","find . -size +100k -ls","find Path -size +Size -ls",y,y,y,y,y,y,,
"dispaly a long listig of all the files in the current folder which are bigger than 100KB","find . -size +100k -exec ls -l -h {} \;","find Path -size +Size -exec ls -l -h {} \;",y,y,y,y,y,y,,
"dispaly a long listig of all the files in the current folder which are bigger than 100KB","find . -size +100k -exec ls -l -h {} +","find Path -size +Size -exec ls -l -h {} +",y,y,y,y,y,y,,
"display a long listing of all the log files in the current folder which are bigger than 1MB","find . -size +1000k -exec ls -l {} \;","find Path -size +Size -exec ls -l {} \;",n,n,n,n,y,y,n,n
"display a long listing of all the log files in the current folder which are bigger than 1MB","find . -size +1000k -exec ls -l {} \; -exec ls -l {} \;","find Path -size +Size -exec ls -l {} \; -exec ls -l {} \;",n,n,n,n,n,n,,
"display a long listing of all the log files in the current folder which are bigger than 1MB","find . -size +1000k -exec ls -l {} \; -print","find Path -size +Size -exec ls -l {} \; -print",n,n,n,n,n,n,,
"display all the .sh scripts in the folder /usr","find /usr -name ""*.sh""","find Path -name Regex",y,y,y,y,y,y,,
"display all the .sh scripts in the folder /usr","find /usr -type f -name ""*.sh""","find Path -type f -name Regex",y,y,y,y,y,y,,
"display all the .sh scripts in the folder /usr","find /usr -name *.sh","find Path -name Regex",y,y,y,y,y,y,,
"display all the directories in the current folder which are atleast one level deep","find . -mindepth deep -type d","find Path -mindepth Quantity -type d",y,n,n,n,y,n,y,n
"display all the directories in the current folder which are atleast one level deep","find . -mindepth level -type d","find Path -mindepth Quantity -type d",y,n,n,n,y,n,y,n
"display all the directories in the current folder which are atleast one level deep","find . -mindepth 1 -type d","find Path -mindepth Quantity -type d",y,y,y,y,y,y,y,
"display all the directories in the current folder which start with processor followed by digit and ends with .1 or .2","find . -name ""[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9].2""","find Path -name Regex",n,n,y,n,n,n,n,n
"display all the directories in the current folder which start with processor followed by digit and ends with .1 or .2","find . -name ""[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]\0.2""","find Path -name Regex",n,n,y,n,n,n,n,n
"display all the directories in the current folder which start with processor followed by digit and ends with .1 or .2","find . -name '*.[ch]' | xargs -I {} grep -E '^use ' {}","find Path -name Regex | xargs -I {} grep -E Regex {}",n,n,n,n,n,n,,
"display all directories in vim folder do not search in sub directories","find /home -maxdepth 1 -type d","find Path -maxdepth Quantity -type d",y,n,y,n,y,n,,
"display all directories in vim folder do not search in sub directories","find /tmp -maxdepth 1 -type d","find Path -maxdepth Quantity -type d",y,n,y,n,y,n,,
"display all directories in vim folder do not search in sub directories","find /home/__SP__UNK -maxdepth 1 -type d","find Path -maxdepth Quantity -type d",y,n,y,n,y,n,,
"display all the files along with their group name in the folder /home which do not belong to the group test","find /home ! -group test","find Path ! -group Regex",n,n,n,n,n,n,,
"display all the files along with their group name in the folder /home which do not belong to the group test","find /home -not -group test","find Path -not -group Regex",n,n,n,n,n,n,,
"display all the files along with their group name in the folder /home which do not belong to the group test","find /home -group test","find Path -group Regex",n,n,n,n,n,n,,
"display all files  expect directories in the current folder","find . -name ""*.js""","find Path -name Regex",n,n,n,n,n,n,,
"display all files  expect directories in the current folder","find . -name ""*.expect""","find Path -name Regex",n,n,n,n,n,n,,
"display all files  expect directories in the current folder","find . -type d -name expect","find Path -type d -name Regex",n,n,n,n,n,n,,
"Display all files in a folder","find /etc -print","find Path -print",y,y,y,n,y,y,y,y
"Display all files in a folder","find /etc","find Path",y,y,y,n,y,y,y,y
"Display all files in a folder","find /etc -exec ls {} \;","find Path -exec ls {} \;",n,n,y,n,n,n,n,n
"display all the files in the current folder excluding the file states_to_csv.pl and those that are present in the directories whose name starts with "".git""","find . ! -name ""states_to_csv.pl"" -not -name ""*.git""","find Path ! -name Regex -not -name Regex",n,n,n,n,n,n,,
"display all the files in the current folder excluding the file states_to_csv.pl and those that are present in the directories whose name starts with "".git""","find . ! -name ""states_to_csv.pl"" -not -name "".git""","find Path ! -name Regex -not -name Regex",n,n,n,n,n,n,,
"display all the files in the current folder excluding the file states_to_csv.pl and those that are present in the directories whose name starts with "".git""","find . \( -name states_to_csv.pl -or -name ""*.git"" \) -print","find Path \( -name Regex -or -name Regex \) -print",n,n,n,n,n,n,,
"display all the files in the current folder excluding those that are present in the sub directory aa and display those files that start with the word ""file""","find . -name aa -prune -or -name file -print","find Path -name Regex -prune -or -name Regex -print",y,y,y,n,n,y,y,y
"display all the files in the current folder excluding those that are present in the sub directory aa and display those files that start with the word ""file""","find . -name aa -prune -or -print","find Path -name Regex -prune -or -print",n,y,n,n,n,y,y,y
"display all the files in the current folder excluding those that are present in the sub directory aa and display those files that start with the word ""file""","find . \( -name aa -or -name file \) -print","find Path \( -name Regex -or -name Regex \) -print",n,n,n,n,n,n,,
"display all the files in the current folder which have been modified in one hour ago","find . -mtime -1","find Path -mtime -Timespan",y,n,y,n,n,n,y,n
"display all the files in the current folder which have been modified in one hour ago","find . -mtime 1","find Path -mtime Timespan",y,n,y,y,n,n,y,n
"display all the files in the current folder which have been modified in one hour ago","find . -name '???????????????????????????????????????????????????'","find Path -name Regex",n,n,n,n,n,n,,
"display all the files in the current folder which contains form feed (^L) and does not contain NULL","find . ! -name ""*feed*""","find Path ! -name Regex",n,n,n,n,n,n,,
"display all the files in the current folder which contains form feed (^L) and does not contain NULL","find . -name ""*feed*""","find Path -name Regex",n,n,n,n,n,n,,
"display all the files in the current folder which contains form feed (^L) and does not contain NULL","find . \( -name ""*feed"" -or -name ""*.null"" \)","find Path \( -name Regex -or -name Regex \)",n,n,n,n,n,n,,
"display all files in the entire file system excluding the directories /proc,/sys,/dev and those files which are writable and which are not symbolic links and which are not sockets and which do not have the sticky bit set","find / -not \( ! -perm /proc/sys/dev ! -perm -o+w \)","find Path -not \( ! -perm Permission ! -perm -Permission \)",n,n,n,n,n,n,,
"display all files in the entire file system excluding the directories /proc,/sys,/dev and those files which are writable and which are not symbolic links and which are not sockets and which do not have the sticky bit set","find / -not \( -fstype /proc/sys/dev ! -perm -o+w \)","find Path -not \( -fstype /proc/sys/dev ! -perm -Permission \)",n,n,n,n,n,n,,
"display all files in the entire file system excluding the directories /proc,/sys,/dev and those files which are writable and which are not symbolic links and which are not sockets and which do not have the sticky bit set","find / -fstype /proc/sys/dev ! -perm -022","find Path -fstype /proc/sys/dev ! -perm -Permission",n,n,n,n,n,n,,
"display all files in the entire file system excluding those that are in the transfer directory","find / -name ""*.txt""","find Path -name Regex",n,n,n,n,n,n,,
"display all files in the entire file system excluding those that are in the transfer directory","find / ! -name ""*.txt""","find Path ! -name Regex",n,n,n,n,n,n,,
"display all files in the entire file system excluding those that are in the transfer directory","find / -name ""*.txt"" -print","find Path -name Regex -print",n,n,n,n,n,n,,
"display all the files in the folder /mp3-collection which are bigger than 10MB or which start with the name ""Metallica""","find /mp3-collection -size +10000k","find Path -size +Size",n,n,n,n,n,n,,
"display all the files in the folder /mp3-collection which are bigger than 10MB or which start with the name ""Metallica""","find /mp3-collection -size +10M -print","find Path -size +Size -print",n,n,n,n,n,n,,
"display all the files in the folder /mp3-collection which are bigger than 10MB or which start with the name ""Metallica""","find /mp3-collection -size +10M","find Path -size +Size",n,n,n,n,n,n,,
"display all files in the folder bar only in the path /foo/bar/myfile (no output is generated)","find bar -path /foo/bar/myfile","find Path -path Regex",y,y,y,y,y,y,,
"display all files in the folder bar only in the path /foo/bar/myfile (no output is generated)","find bar -path '/foo/bar/myfile'","find Path -path Regex",y,y,y,y,y,y,,
"display all files in the folder bar only in the path /foo/bar/myfile (no output is generated)","find /foo/bar/myfile -name '*.js'","find Path -name Regex",n,n,n,n,n,n,,
"display all file in the home folder except "".c"" files","find ~ ! -name ""*.c"" -print","find Path ! -name Regex -print",y,y,y,y,y,y,,
"display all file in the home folder except "".c"" files","find $HOME ! -name .c","find Path ! -name Regex",y,n,y,n,y,n,,
"display all file in the home folder except "".c"" files","find $HOME -not -name \*.c -print","find Path -not -name Regex -print",y,y,y,y,y,y,,
"display all the hidden directories in the directory ""/dir/to/search/""","find /dir/to/search/ -type d -name "".*"" -print","find Path -type d -name Regex -print",y,y,y,y,y,y,,
"display all the hidden directories in the directory ""/dir/to/search/""","find /dir/to/search/ -name "".*"" -type d","find Path -name Regex -type d",y,y,y,y,y,y,,
"display all the hidden directories in the directory ""/dir/to/search/""","find /dir/to/search/ -type d -iname "".*"" -print","find Path -type d -iname Regex -print",y,y,y,y,y,y,,
"display all the html files in the current folder excluding search in the paths ./foo, ./bar.","find . -path './foo./bar' -prune -or -name '*.html' -print","find Path -path Regex -prune -or -name Regex -print",n,n,n,n,y,y,n,n
"display all the html files in the current folder excluding search in the paths ./foo, ./bar.","find . -path './foo./bar' -prune -or -name '*.html'","find Path -path Regex -prune -or -name Regex",n,n,n,n,y,y,n,n
"display all the html files in the current folder excluding search in the paths ./foo, ./bar.","find . -path ""./foo./bar"" -prune -or -name ""*.html"" -print","find Path -path Regex -prune -or -name Regex -print",n,n,n,n,y,y,n,n
"display all the jars in the current folder","find . -name ""*.jars""","find Path -name Regex",y,n,y,n,n,n,y,n
"display all the jars in the current folder","find . -type f -name ""*.jars""","find Path -type f -name Regex",y,n,y,n,n,n,y,n
"display all the jars in the current folder","find . -name ""Makefile""","find Path -name Regex",y,n,y,n,n,n,y,n
"display all mp3 files in the file system which have not been accessed in the last 24 hours","find / -atime +mp -iname ""*.mp3""","find Path -atime +Timespan -iname Regex",n,n,n,n,n,n,,
"display all mp3 files in the file system which have not been accessed in the last 24 hours","find / -atime +mp -name ""*.mp3"" -print","find Path -atime +Timespan -name Regex -print",n,n,n,n,n,n,,
"display all mp3 files in the file system which have not been accessed in the last 24 hours","find / -atime +mp -name ""*.mp3""","find Path -atime +Timespan -name Regex",n,n,n,n,n,n,,
"display all the php files in the current folder which do not have the permission 644","find . -type f -name ""*.php"" ! -perm -444","find Path -type f -name Regex ! -perm -Permission",y,n,y,n,y,n,,
"display all the php files in the current folder which do not have the permission 644","find . -type f ! -perm -444","find Path -type f ! -perm -Permission",n,n,n,n,n,n,,
"display all the php files in the current folder which do not have the permission 644","find . -type f -name ""*.php"" ! -perm -111","find Path -type f -name Regex ! -perm -Permission",y,n,y,n,y,n,,
"display all php,xml and phtml files in current folder","find . -name \*.php -type f","find Path -name Regex -type f",n,n,n,n,n,n,,
"display all php,xml and phtml files in current folder","find . -name \*.php -type f -exec file {} \;","find Path -name Regex -type f -exec file {} \;",n,n,n,n,n,n,,
"display all php,xml and phtml files in current folder","find . -name \*.php -type f -exec echo {} \;","find Path -name Regex -type f -exec echo {} \;",n,n,n,n,n,n,,
"display all the regular/normal files in the /root folder which are bigger than 500MB","find /root -size +500M -type f","find Path -size +Size -type f",y,y,y,y,y,y,,
"display all the regular/normal files in the /root folder which are bigger than 500MB","find /root -type f -size +500M","find Path -type f -size +Size",y,y,y,y,y,y,,
"display all the regular/normal files in the /root folder which are bigger than 500MB","find /root/ -size +500M -type f","find Path -size +Size -type f",y,y,y,y,y,y,,
"display all the regular files in current folder excluding all the directories and all the sub directories having ""normal"" in their name","find . -type d -name ""*normal*"" ! -name ""normal*"" -print","find Path -type d -name Regex ! -name Regex -print",n,n,n,n,n,n,,
"display all the regular files in current folder excluding all the directories and all the sub directories having ""normal"" in their name","find . -type d -name ""*normal*"" ! -name ""normal*""","find Path -type d -name Regex ! -name Regex",n,n,n,n,n,n,,
"display all the regular files in current folder excluding all the directories and all the sub directories having ""normal"" in their name","find . -type d -name ""*normal*"" ! -path ""normal/*"" ! -name ""normal*""","find Path -type d -name Regex ! -path Regex ! -name Regex",n,n,n,n,n,n,,
"display all the regular files in the current folder which have the permission 777","find . -type f -perm 0777 -print","find Path -type f -perm Permission -print",y,y,y,y,y,y,,
"display all the regular files in the current folder which have the permission 777","find . -type f -perm 0777","find Path -type f -perm Permission",y,y,y,y,y,y,,
"display all the regular files in the current folder which have the permission 777","find . -type f -perm 777","find Path -type f -perm Permission",y,y,y,y,y,y,,
"display all regular files in current folder which have spaces in their name","find . -name ""* *"" -type f","find Path -name Regex -type f",y,y,y,y,y,y,,
"display all regular files in current folder which have spaces in their name","find . -type f -name ""* *""","find Path -type f -name Regex",y,y,y,y,y,y,,
"display all regular files in current folder which have spaces in their name","find . -name '* *' -type f","find Path -name Regex -type f",y,y,y,y,y,y,,
"display all regular files in the folder image-folder","find image-fold -type f","find Path -type f",y,y,y,n,y,y,y,y
"display all regular files in the folder image-folder","find image -type f \( -name ""image-fold"" -or -type f \) -exec ls -l {} \;","find Path -type f \( -name Regex -or -type f \) -exec ls -l {} \;",n,n,y,n,n,n,n,n
"display all regular files in the folder image-folder","find image -type f \( -name ""image-fold"" -or -name ""*"" \)","find Path -type f \( -name Regex -or -name Regex \)",y,n,y,n,y,n,,
"display all regular/normal files in temp folder and display the filename along with file size","find /tmp -type f -printf ""%f\n""","find Path -type f -printf ""%f\n""",y,n,y,n,n,n,y,n
"display all regular/normal files in temp folder and display the filename along with file size","find /tmp -type f -printf ""%f %s\n""","find Path -type f -printf ""%f %s\n""",y,y,y,y,n,n,y,y
"display all regular/normal files in temp folder and display the filename along with file size","find /tmp -type f -printf '%f\n'","find Path -type f -printf '%f\n'",y,n,y,n,n,n,y,n
"display all shell scripts in current folder","find . -name ""*.sh""","find Path -name Regex",y,y,y,y,y,y,,
"display all shell scripts in current folder","find . -type f -name ""*.sh""","find Path -type f -name Regex",y,y,y,y,y,y,,
"display all shell scripts in current folder","find . -type f \( -name ""*.sh"" -or -name ""*.sh"" \)","find Path -type f \( -name Regex -or -name Regex \)",y,y,y,y,y,y,,
"display all the text files and hidden files in the home folder","find ~/ -name '*.txt'","find Path -name Regex",n,n,n,n,n,n,,
"display all the text files and hidden files in the home folder","find /home -name ""*.txt""","find Path -name Regex",n,n,n,n,n,n,,
"display all the text files and hidden files in the home folder","find $HOME -name '*.txt'","find Path -name Regex",n,n,n,n,n,n,,
"display all text files in the folder /tmp/1","find /tmp/1 -name ""*.txt""","find Path -name Regex",y,y,y,y,n,n,y,y
"display all text files in the folder /tmp/1","find /tmp/1 -name ""*.txt"" -print","find Path -name Regex -print",y,y,y,y,n,n,y,y
"display all text files in the folder /tmp/1","find /tmp/1 -iname ""*.txt""","find Path -iname Regex",y,y,y,y,y,y,,
"display the count of all the normal/ regular files in the current directory","find . -type f | wc -l","find Path -type f | wc -l",y,y,y,y,y,y,,
"display the count of all the normal/ regular files in the current directory","find . -type f -print0 | xargs -0 -L 1 -I {} wc -l {}","find Path -type f -print0 | xargs -0 -L Quantity -I {} wc -l {}",n,n,n,n,n,n,,
"display the count of all the normal/ regular files in the current directory","find . -type f -print0 | xargs -0 -I {} wc -l {}","find Path -type f -print0 | xargs -0 -I {} wc -l {}",n,n,n,n,n,n,,
"Display differences between file1 and file2 side-by-side.","diff -y file file1 file2","diff -y File File File",n,n,n,n,n,n,,
"Display differences between file1 and file2 side-by-side.","diff -y file1 file2","diff -y File File",y,y,y,y,y,y,,
"Display differences between file1 and file2 side-by-side.","diff -y 1 file1 file2","diff -y File File File",n,n,n,n,n,n,,
"Display each line in file.txt backwards","cat file.txt | sort | uniq","cat File | sort | uniq",n,n,n,n,n,n,,
"Display each line in file.txt backwards","cat file.txt | xargs -n 1 -I {} cat {}","cat File | xargs -n Quantity -I {} cat {}",n,n,n,n,n,n,,
"Display each line in file.txt backwards","cat file.txt | rev","cat File | rev",y,y,y,y,y,y,,
"display files ending with "".ext"" in current folder excluding those that are present in the list list.txt","find . -type f -name ""*.ext"" ! -path ""./list.txt"" ! -name ""list.txt"" -print","find Path -type f -name Regex ! -path Regex ! -name Regex -print",n,n,n,n,n,n,,
"display files ending with "".ext"" in current folder excluding those that are present in the list list.txt","find . \( -name list.ext -or -name list.txt -or -name '*.txt' \) -print","find Path \( -name Regex -or -name Regex -or -name Regex \) -print",n,n,n,n,n,n,,
"display files ending with "".ext"" in current folder excluding those that are present in the list list.txt","find . -type f -name ""*.ext"" ! -path ""./list.txt"" ! -name ""list.txt""","find Path -type f -name Regex ! -path Regex ! -name Regex",n,n,n,n,n,n,,
"Displays information about all network interfaces in system, including inactive ones.","find / -type f -exec echo {} \;","find Path -type f -exec echo {} \;",n,n,n,n,n,n,,
"Displays information about all network interfaces in system, including inactive ones.","find / -type f -printf ""%s %p\n"" | sort -n | tail -n 1","find Path -type f -printf ""%s %p\n"" | sort -n | tail -n Quantity",n,n,n,n,n,n,,
"Displays information about all network interfaces in system, including inactive ones.","find / -type f -printf ""%s %p\n"" | sort -n | cut -d "" "" -f 1,2 | tr '\n' '\n'","find Path -type f -printf ""%s %p\n"" | sort -n | cut -d Regex -f Number | tr Regex Regex",n,n,n,n,n,n,,
"(GNU specific) Display information about number of processes in various states.","ps -e -f | grep various | wc -l","ps -e -f | grep Regex | wc -l",n,n,n,n,n,n,,
"(GNU specific) Display information about number of processes in various states.","ps -e -f | grep states | wc -l","ps -e -f | grep Regex | wc -l",n,n,n,n,n,n,,
"(GNU specific) Display information about number of processes in various states.","ps -e -f | grep various","ps -e -f | grep Regex",n,n,y,n,n,n,n,n
"display long listing of all the empty files in the current folder","find . -empty -exec ls {} \;","find Path -empty -exec ls {} \;",n,n,n,n,n,n,,
"display long listing of all the empty files in the current folder","find . -empty -exec ls -l {} \;","find Path -empty -exec ls -l {} \;",y,y,y,y,y,y,,
"display long listing of all the empty files in the current folder","find . -empty -exec ls {} +","find Path -empty -exec ls {} +",n,n,n,n,n,n,,
"Display machine architecture, ie. x86_64","uname -m","uname -m",y,y,y,y,y,y,,
"Display machine architecture, ie. x86_64","","",n,n,n,n,n,n,n,
"Display machine architecture, ie. x86_64","","",n,n,n,n,n,n,n,
"Display only mimetype of myfile.txt, without the filename.","cat myfile.txt | rev | cut -d / -f 1 | rev","cat File | rev | cut -d Regex -f Number | rev",n,n,n,n,n,n,,
"Display only mimetype of myfile.txt, without the filename.","cat myfile.txt | rev | cut -d ' ' -f 1 | rev","cat File | rev | cut -d Regex -f Number | rev",n,n,n,n,n,n,,
"Display only mimetype of myfile.txt, without the filename.","cat myfile.txt | rev | cut -d . -f 1-2 | rev","cat File | rev | cut -d Regex -f Number | rev",n,n,n,n,n,n,,
"Display standard input as a table with ""${tab}"" separators","column -s ""${tab}""","column -s Regex",y,y,n,n,y,y,y,y
"Display standard input as a table with ""${tab}"" separators","cat ${tab} | od -c","cat File | od -c",n,n,n,n,n,n,,
"Display standard input as a table with ""${tab}"" separators","od -c ""${tab}""","od -c File",n,n,n,n,n,n,,
"download content from ""http://example.com/textfile.txt"" and output to ""textfile.txt""","curl http://example.com/textfile.txt | tee textfile.txt","curl Regex | tee File",y,y,y,y,n,n,y,y
"download content from ""http://example.com/textfile.txt"" and output to ""textfile.txt""","curl http://example.com/textfile/textfile.txt | tee textfile.txt","curl Regex | tee File",y,n,y,n,n,n,y,n
"download content from ""http://example.com/textfile.txt"" and output to ""textfile.txt""","curl http://example.com/textfile/textfile.txt | tee -a textfile.txt","curl Regex | tee -a File",n,n,n,n,n,n,,
"download contents of a website ""http://example.com/""","curl -L http://example.com/","curl Regex Regex",n,n,y,y,n,n,n,n
"download contents of a website ""http://example.com/""","curl -L http://example.com/ | tee http://example.com/","curl Regex Regex | tee File",y,n,y,n,n,n,y,n
"download contents of a website ""http://example.com/""","curl http://example.com/ | tee http://example.com/","curl Regex | tee File",y,n,y,n,n,n,y,n
"download file  ""https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh"" and execute it","curl https://raw.githubusercontent.com/creationix/nvm.com/creationix/nvm.com/creationix/nvm0/install.0/install.sh | sh","curl Regex | sh",y,n,y,n,y,n,,
"download file  ""https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh"" and execute it","curl https://raw.githubusercontent.com/creationix/nvm.com/creationix/nvm.com/creationix/nvm0/install/install.sh | sh","curl Regex | sh",y,n,y,n,y,n,,
"download file  ""https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh"" and execute it","curl https://raw.githubusercontent.com/creationix/nvm.com/creationix/nvm/v0/creationix.0/install.sh | sh","curl Regex | sh",y,n,y,n,y,n,,
"Enables shell option 'direxpand'.","shopt -s direxpand","shopt -s direxpand",y,y,y,y,y,y,,
"Enables shell option 'direxpand'.","shopt -s direxpand | xargs -I {} rename 's/shopt/direxpand/shopt/direxpand/' {}","shopt -s direxpand | xargs -I {} rename Regex {}",n,n,n,n,n,n,,
"Enables shell option 'direxpand'.","shopt -s direxpand | xargs -I {} rename 's/shopt/direxpand/direxpand/' {}","shopt -s direxpand | xargs -I {} rename Regex {}",n,n,n,n,n,n,,
"Enables shell option 'histappend'.","shopt -s histappend","shopt -s histappend",y,y,y,y,y,y,,
"Enables shell option 'histappend'.","shopt -s histappend | xargs -I {} rename 's/shopt/histappend/shopt/histappend/' {}","shopt -s histappend | xargs -I {} rename Regex {}",n,n,n,n,n,n,,
"Enables shell option 'histappend'.","shopt -s histappend | xargs -I {} rename 's/shopt/histappend/histappend/' {}","shopt -s histappend | xargs -I {} rename Regex {}",n,n,n,n,n,n,,
"ERROR - need to add -a or -r for recursive copy","find ./ -type f -exec grep ""-a-r"" {} \; -exec mv {} -a-r \;","find Path -type f -exec grep Regex {} \; -exec mv {} File \;",n,n,n,n,n,n,,
"ERROR - need to add -a or -r for recursive copy","find ./ -type f -exec grep ""-a-r"" {} \; -exec cp {}or-r {} \;","find Path -type f -exec grep Regex {} \; -exec cp File {} \;",n,n,n,n,n,n,,
"ERROR - need to add -a or -r for recursive copy","find . | xargs -I {} grep ""-a-r"" {}","find Path | xargs -I {} grep Regex {}",n,n,n,n,n,n,,
"Execute `somecommand' on each file from the current directory tree with the environment variable f set to the filename","find . -type f -exec echo somecommand {} \; -exec echo somecommand {} \; -exec echo {} \; -exec echo {} \; -exec echo {} \;","find Path -type f -exec echo Regex {} \; -exec echo Regex {} \; -exec echo {} \; -exec echo {} \; -exec echo {} \;",n,n,n,n,n,n,,
"Execute `somecommand' on each file from the current directory tree with the environment variable f set to the filename","find . -type f -print0 | xargs -0 -I {} file {} | xargs -n 1 -I {} cp somecommand {}","find Path -type f -print0 | xargs -0 -I {} file {} | xargs -n Quantity -I {} cp File {}",n,n,n,n,n,n,,
"Execute `somecommand' on each file from the current directory tree with the environment variable f set to the filename","find . -type f -exec echo somecommand {} \; -exec echo {} \; -exec echo {} \; -exec echo {} \; -exec echo {} \;","find Path -type f -exec echo Regex {} \; -exec echo {} \; -exec echo {} \; -exec echo {} \; -exec echo {} \;",n,n,n,n,n,n,,
"Execute all arguments to a shell script and write the output to console and ""$FILE""","chmod a+x $FILE","chmod Permission File",n,n,n,n,n,n,,
"Execute all arguments to a shell script and write the output to console and ""$FILE""","find ""$FILE"" -type d -exec basename {} \; | tee $FILE","find Path -type d -exec basename {} \; | tee File",n,n,n,n,n,n,,
"Execute all arguments to a shell script and write the output to console and ""$FILE""","find ""$FILE"" -type d -print0 | tee -a $FILE | tee -a $FILE","find Path -type d -print0 | tee -a File | tee -a File",n,n,n,n,n,n,,
"Execute command ""$cmd_str"" on host ""$SERVER"" as user ""$USER""","ssh $USER $cmd_str","ssh Regex command",y,n,y,n,y,n,,
"Execute command ""$cmd_str"" on host ""$SERVER"" as user ""$USER""","echo ""$cmd_str"" | ssh ""$USER""","echo Regex | ssh Regex",y,n,n,n,y,n,y,n
"Execute command ""$cmd_str"" on host ""$SERVER"" as user ""$USER""","echo ""$cmd_str"" | ssh $USER","echo Regex | ssh Regex",y,n,n,n,y,n,y,n
"Expand bash array ""myargs"" as arguments to ""mv""","echo ""myargs"" | ssh mv","echo Regex | ssh Regex",n,n,n,n,n,n,,
"Expand bash array ""myargs"" as arguments to ""mv""","echo ""myargs"" | ssh mv-mv","echo Regex | ssh Regex",n,n,n,n,n,n,,
"Expand bash array ""myargs"" as arguments to ""mv""","echo ""myargs"" | ssh myargs@mv","echo Regex | ssh Regex",n,n,n,n,n,n,,
"Extract all gzip-compressed files from tar archives beginning with 'myfiles_split.tgz_*'","tar -x -v -f myfiles_split.tgz_* myfiles_split.tgz_*","tar -x -v -f File File",n,n,n,n,n,n,,
"Extract all gzip-compressed files from tar archives beginning with 'myfiles_split.tgz_*'","tar -x -f myfiles_split.tgz_* myfiles_split.tgz_*","tar -x -f File File",y,y,n,n,y,y,y,y
"Extract all gzip-compressed files from tar archives beginning with 'myfiles_split.tgz_*'","tar -x -v -f myfiles_split.tgz_* 'myfiles_split.tgz_*'","tar -x -v -f File File",n,n,n,n,n,n,,
"Extract any line in sorted file ""A"" that does not appear in ""B"", ""C"", or ""D""","","",n,n,n,n,n,n,n,
"Extract any line in sorted file ""A"" that does not appear in ""B"", ""C"", or ""D""","","",n,n,n,n,n,n,n,
"Extract any line in sorted file ""A"" that does not appear in ""B"", ""C"", or ""D""","","",n,n,n,n,n,n,n,
"Filter out current date in current time zone from the GMT+30 and GMT+20 representations of current date and show the last one","date --rfc-3339=+%Y+%m+%s","date --rfc-3339 +%Y+%m+%s",n,n,n,n,n,n,,
"Filter out current date in current time zone from the GMT+30 and GMT+20 representations of current date and show the last one","date --rfc-3339=+%Y+%m+%m+%s","date --rfc-3339 +%Y+%m+%m+%s",n,n,n,n,n,n,,
"Filter out current date in current time zone from the GMT+30 and GMT+20 representations of current date and show the last one","date --rfc-3339=+%s","date --rfc-3339 +%s",n,n,n,n,n,n,,
"Finds $a pattern in a $b string, and returns exit code 0 if found, suppressing any visible output.","echo ""$b"" | grep -o ""$b"" | tr '\n' '\n'","echo Regex | grep -o Regex | tr Regex Regex",n,n,n,n,n,n,,
"Finds $a pattern in a $b string, and returns exit code 0 if found, suppressing any visible output.","echo ""$b"" | grep -o ""$b"" | tr '\n' '[:visible:]' | tr '\n' '\n'","echo Regex | grep -o Regex | tr Regex Regex | tr Regex Regex",n,n,n,n,n,n,,
"Finds $a pattern in a $b string, and returns exit code 0 if found, suppressing any visible output.","echo ""$b"" | grep -o ""$b"" | tr '\n' '\n' | grep -v $a | tr '\n' '\n'","echo Regex | grep -o Regex | tr Regex Regex | grep -v Regex | tr Regex Regex",n,n,n,n,n,n,,
"Find *.c and *.h files under the current directory tree skipping hidden directories and files","find . \( -name '*.c' -or -name '*.h' -or -name '*.h' \) -print","find Path \( -name Regex -or -name Regex -or -name Regex \) -print",n,n,n,n,n,n,,
"Find *.c and *.h files under the current directory tree skipping hidden directories and files","find . \( -name '*.c' -or -name '*.h' -or -name '*.h' -or -name '*.h' \) -print","find Path \( -name Regex -or -name Regex -or -name Regex -or -name Regex \) -print",n,n,n,n,n,n,,
"Find *.c and *.h files under the current directory tree skipping hidden directories and files","find .","find Path",n,n,n,n,n,n,,
"Find *.jpg screenshots that are bigger than 500k","find . -type f -size +500k -name ""*.jpg""","find Path -type f -size +Size -name Regex",y,y,y,y,n,n,y,y
"Find *.jpg screenshots that are bigger than 500k","find . -type f -size +500k -iname ""*.jpg""","find Path -type f -size +Size -iname Regex",y,y,y,y,n,n,y,y
"Find *.jpg screenshots that are bigger than 500k","find . -type f -name ""*.jpg"" -size +500k -print","find Path -type f -name Regex -size +Size -print",y,y,y,y,n,n,y,y
"Find .cpp files that differs in subdirectories PATH1 and PATH2.","find . -path path1 -path path2 -prune -or -name '*.cpp' -exec dirname {} \;","find Path -path Regex -path Regex -prune -or -name Regex -exec dirname {} \;",n,n,n,n,n,n,,
"Find .cpp files that differs in subdirectories PATH1 and PATH2.","find . -path path1 -path path2 -prune -or -name '*.cpp' -exec echo {} \;","find Path -path Regex -path Regex -prune -or -name Regex -exec echo {} \;",n,n,n,n,n,n,,
"Find .cpp files that differs in subdirectories PATH1 and PATH2.","find . -path path1 -path path2 -prune -or -name '*.cpp' -print","find Path -path Regex -path Regex -prune -or -name Regex -print",n,n,n,n,n,n,,
"Find a directory named 'project.images' case insensitively in the entire filesystem and show it in long listing format","find / -type d -iname ""project.images"" -ls","find Path -type d -iname Regex -ls",y,y,y,y,y,y,,
"Find a directory named 'project.images' case insensitively in the entire filesystem and show it in long listing format","find / -type d -name ""project.images"" -ls","find Path -type d -name Regex -ls",n,n,y,n,n,n,n,n
"Find a directory named 'project.images' case insensitively in the entire filesystem and show it in long listing format","find / -type d -iname ""project.images""","find Path -type d -iname Regex",n,n,n,n,y,y,n,n
"find all the "".jpg"" files in current folder and display their count","find . -name ""*.jpg"" | wc -l","find Path -name Regex | wc -l",y,y,y,y,y,y,,
"find all the "".jpg"" files in current folder and display their count","find ./ -name ""*.jpg"" | wc -l","find Path -name Regex | wc -l",y,y,y,y,y,y,,
"find all the "".jpg"" files in current folder and display their count","find . -name \*.jpg -exec wc -l {} +","find Path -name Regex -exec wc -l {} +",n,n,n,n,n,n,,
"Find all *.cgi (case insensitive) files/directories under current directory and change their permission to 755","chmod 755 $(find . -name *.cgi)","chmod Permission $( find Path -name Regex )",n,n,y,y,n,n,n,n
"Find all *.cgi (case insensitive) files/directories under current directory and change their permission to 755","chmod 755 $(find . -name ""*.cgi"")","chmod Permission $( find Path -name Regex )",n,n,y,y,n,n,n,n
"Find all *.cgi (case insensitive) files/directories under current directory and change their permission to 755","chmod 755 $(find . -name '*.cgi')","chmod Permission $( find Path -name Regex )",n,n,y,y,n,n,n,n
"Find all *.epub, *.mobi, *.chm, *.rtf, *.lit and *.djvu files/directories under current directory","find . \( -name '*.epub*' -or -name '*.djvu' -or -name '*.djvu' \) -print","find Path \( -name Regex -or -name Regex -or -name Regex \) -print",n,n,n,n,n,n,,
"Find all *.epub, *.mobi, *.chm, *.rtf, *.lit and *.djvu files/directories under current directory","find . \( -name '*.epub*' -or -name '*.djvu' -or -name '*.djvu' -or -name '*.djvu' \) -print","find Path \( -name Regex -or -name Regex -or -name Regex -or -name Regex \) -print",n,n,n,n,n,n,,
"Find all *.epub, *.mobi, *.chm, *.rtf, *.lit and *.djvu files/directories under current directory","find . -name '*.epub*' -or -name '*.djvu'","find Path -name Regex -or -name Regex",n,n,n,n,n,n,,
"find all *.java files/directories under current directory","find . -name ""*.java""","find Path -name Regex",y,y,y,y,y,y,,
"find all *.java files/directories under current directory","find . -name \*.java","find Path -name Regex",y,y,y,y,y,y,,
"find all *.java files/directories under current directory","find . -name *.java","find Path -name Regex",y,y,y,y,y,y,,
"Find all *.java files in the current directory tree","find . -name ""*.java""","find Path -name Regex",y,y,y,y,y,y,,
"Find all *.java files in the current directory tree","find . -name *.java","find Path -name Regex",y,y,y,y,y,y,,
"Find all *.java files in the current directory tree","find . -name \*.java","find Path -name Regex",y,y,y,y,y,y,,
"Find all *.mp4 files under /foo/bar and move them to /some/path","find /foo/bar -name '*.mp4' -exec mv -t /some/path {} +","find Path -name Regex -exec mv -t Directory {} +",y,y,y,y,y,y,,
"Find all *.mp4 files under /foo/bar and move them to /some/path","find /foo/bar -name '*.mp4' -print0 | xargs -0 -I {} mv {} /some/path","find Path -name Regex -print0 | xargs -0 -I {} mv {} File",y,y,y,y,y,y,,
"Find all *.mp4 files under /foo/bar and move them to /some/path","find /foo/bar -name '*.mp4' -print0 | xargs -0 -I {} mv -t /some/path {} +","find Path -name Regex -print0 | xargs -0 -I {} mv -t Directory {} +",y,y,y,y,n,n,y,y
"Find all *.ps files under $STARTDIR","find ""$STARTDIR"" -name ""*.ps""","find Path -name Regex",y,y,y,y,y,y,,
"Find all *.ps files under $STARTDIR","find $STARTDIR -name '*.ps'","find Path -name Regex",y,y,y,y,y,y,,
"Find all *.ps files under $STARTDIR","find ""$STARTDIR"" -type f -name ""*.ps""","find Path -type f -name Regex",y,y,y,y,y,y,,
"Find all *.rpm files/directories under current directory","find . -name *.rpm","find Path -name Regex",y,y,y,y,y,y,,
"Find all *.rpm files/directories under current directory","find . -name \*.rpm","find Path -name Regex",y,y,y,y,y,y,,
"Find all *.rpm files/directories under current directory","find . -name ""*.rpm""","find Path -name Regex",y,y,y,y,y,y,,
"Find all *.txt files under the current directory whose names are not ""File.txt""","find . -name ""*.txt"" -not -name ""File.txt""","find Path -name Regex -not -name Regex",y,y,y,y,n,n,y,y
"Find all *.txt files under the current directory whose names are not ""File.txt""","find . -name ""*.txt"" ! -name File.txt -print","find Path -name Regex ! -name Regex -print",y,y,y,y,n,n,y,y
"Find all *.txt files under the current directory whose names are not ""File.txt""","find . -name ""*.txt"" ! -name ""File.txt"" -print","find Path -name Regex ! -name Regex -print",y,y,y,y,n,n,y,y
"Find all *shp* directories under current directory and move their contents to ../shp_all/","find . -name ""*shp*"" -exec mv {} ../shp_all/ \;","find Path -name Regex -exec mv {} File \;",n,n,n,n,n,n,,
"Find all *shp* directories under current directory and move their contents to ../shp_all/","find . -name ""*shp*"" -execdir mv {} ../shp_all/ \;","find Path -name Regex -execdir mv {} File \;",n,n,n,n,n,n,,
"Find all *shp* directories under current directory and move their contents to ../shp_all/","find . -name '*shp*' -exec mv -t ../shp_all/ {} +","find Path -name Regex -exec mv -t Directory {} +",n,n,n,n,n,n,,
"Find all .c and .C files in the current directory tree that contain ""main("" and copy them to directory test1/","find . \( -name '*.c' -or -name '*.C' \) -exec cp {} test1 \;","find Path \( -name Regex -or -name Regex \) -exec cp {} File \;",n,n,n,n,n,n,,
"Find all .c and .C files in the current directory tree that contain ""main("" and copy them to directory test1/","find . \( -name ""*.c"" -or -name ""*.c"" \) -exec cp {} test1 \;","find Path \( -name Regex -or -name Regex \) -exec cp {} File \;",n,n,n,n,n,n,,
"Find all .c and .C files in the current directory tree that contain ""main("" and copy them to directory test1/","find . -name ""*.c"" -exec cp {} test1 \;","find Path -name Regex -exec cp {} File \;",n,n,n,n,n,n,,
"Find all .gz archives in the /path/to/dir directory tree","find /path/to/dir -name ""*.gz""","find Path -name Regex",y,y,y,y,n,n,y,y
"Find all .gz archives in the /path/to/dir directory tree","find /path/to/dir -name '*.gz'","find Path -name Regex",y,y,y,y,n,n,y,y
"Find all .gz archives in the /path/to/dir directory tree","find /path/to/dir -name '*.gz' -print0","find Path -name Regex -print0",y,y,y,y,n,n,y,y
"Find all .js files in the current directory tree that do not contain a whitespace","find . -name ""*.js"" ! -name ""*.js""","find Path -name Regex ! -name Regex",y,n,y,n,n,n,y,y
"Find all .js files in the current directory tree that do not contain a whitespace","find . -name ""*.js"" -not -name ""*.js""","find Path -name Regex -not -name Regex",y,n,y,n,n,n,y,y
"Find all .js files in the current directory tree that do not contain a whitespace","find . -type f -name ""*.js"" ! -name ""*.js""","find Path -type f -name Regex ! -name Regex",y,y,y,n,y,y,y,y
"Find all .mp3 files with more then 10MB and delete them from root directory .","find / -name *.mp3 -size +10M -exec rm {} \;","find Path -name Regex -size +Size -exec rm {} \;",n,n,y,y,n,n,n,n
"Find all .mp3 files with more then 10MB and delete them from root directory .","find / -type f -name *.mp3 -size +10M -exec rm {} \;","find Path -type f -name Regex -size +Size -exec rm {} \;",y,y,y,y,y,y,,
"Find all .mp3 files with more then 10MB and delete them from root directory .","find / -name *.mp3 -size +10M -exec rm -r -f {} \;","find Path -name Regex -size +Size -exec rm -r -f {} \;",y,n,y,y,n,n,y,n
"Find all 777 permission files/directories under current directory tree","find . -perm 777 -print","find Path -perm Permission -print",y,y,y,y,y,y,,
"Find all 777 permission files/directories under current directory tree","find . -perm 777 -type f -print","find Path -perm Permission -type f -print",n,n,n,n,n,n,,
"Find all 777 permission files/directories under current directory tree","find . -perm 777 -exec chmod g+r {} \;","find Path -perm Permission -exec chmod Permission {} \;",n,n,n,n,n,n,,
"Find all broken symlinks in maximum 1 level down the $path directory","find ""$path"" -maxdepth 1 -type l","find Path -maxdepth Quantity -type l",n,n,n,n,n,n,,
"Find all broken symlinks in maximum 1 level down the $path directory","find $path -maxdepth 1 -type l","find Path -maxdepth Quantity -type l",n,n,n,n,n,n,,
"Find all broken symlinks in maximum 1 level down the $path directory","find ""$path"" -maxdepth 2 -type l","find Path -maxdepth Quantity -type l",n,n,n,n,n,n,,
"find all directories in the current directory","find . -type d","find Path -type d",y,y,y,y,y,y,,
"find all directories in the current directory","find . -type d -print","find Path -type d -print",y,y,y,y,y,y,,
"find all directories in the current directory","find . -type d -exec ls -d -l -r -t {} \; | xargs -n 1 -I {} find . -type d -print | xargs -I {} find . -type d -print | xargs -I {} find . -type d -print","find Path -type d -exec ls -d -l -r -t {} \; | xargs -n Quantity -I {} find Path -type d -print | xargs -I {} find Path -type d -print | xargs -I {} find Path -type d -print",n,n,n,n,n,n,,
"Find all directories in maximum 2 levels down the /tmp/test directory","find /tmp/test -maxdepth 2 -type d","find Path -maxdepth Quantity -type d",y,y,y,y,y,y,,
"Find all directories in maximum 2 levels down the /tmp/test directory","find /tmp/test -mindepth 2 -maxdepth 2 -type d","find Path -mindepth Quantity -maxdepth Quantity -type d",y,n,y,n,n,n,y,n
"Find all directories in maximum 2 levels down the /tmp/test directory","find /tmp/test -maxdepth 2 -type d | xargs -I {} dirname {}","find Path -maxdepth Quantity -type d | xargs -I {} dirname {}",n,n,n,n,y,n,n,n
"Find all directories starting from / that have permissions 777","find / -type d -perm 0777","find Path -type d -perm Permission",y,y,y,y,y,y,,
"Find all directories starting from / that have permissions 777","find / -type d -perm 777","find Path -type d -perm Permission",y,y,y,y,y,y,,
"Find all directories starting from / that have permissions 777","find /that -type d -perm 0777 -print","find Path -type d -perm Permission -print",y,n,y,n,y,n,,
"Find all directories that start with stat","find . -type d -name stat","find Path -type d -name Regex",y,n,y,n,n,n,y,n
"Find all directories that start with stat","find . -name stat -type d","find Path -name Regex -type d",y,n,y,n,n,n,y,n
"Find all directories that start with stat","find . -name 'stat???????????????????????????????????????????????*'","find Path -name Regex",n,n,n,n,n,n,,
"Find all directories under $x directory and set read-write-execute permission for owner and group and no permission for other for those directories","find $x -type d -exec chmod ug=rwx,o= {} \;","find Path -type d -exec chmod Permission {} \;",y,y,y,y,y,y,y,
"Find all directories under $x directory and set read-write-execute permission for owner and group and no permission for other for those directories","find ""$x"" -type d -exec chmod ug=rwx,o= {} \;","find Path -type d -exec chmod Permission {} \;",y,y,y,y,y,y,y,
"Find all directories under $x directory and set read-write-execute permission for owner and group and no permission for other for those directories","find $x -type d -exec chmod ug=rw,o= {} \;","find Path -type d -exec chmod Permission {} \;",y,n,y,n,y,y,y,n
"Find all directories under 'project' directory without going into subdirectories that do not match the POSIX egrep regex $PATTERN in their paths and are not empty","find project -type d ! -path ""$PATTERN"" ! -path ""$PATTERN"" ! -path ""$PATTERN"" ! -path ""$PATTERN"" ! -path ""$PATTERN"" ! -name ""$PATTERN"" -print","find Path -type d ! -path Regex ! -path Regex ! -path Regex ! -path Regex ! -path Regex ! -name Regex -print",n,n,n,n,n,n,,
"Find all directories under 'project' directory without going into subdirectories that do not match the POSIX egrep regex $PATTERN in their paths and are not empty","find project -mindepth 1 -maxdepth 1 -type d | grep ""$PATTERN"" | grep -v ""$PATTERN""","find Path -mindepth Quantity -maxdepth Quantity -type d | grep Regex | grep -v Regex",n,n,n,n,n,n,,
"Find all directories under 'project' directory without going into subdirectories that do not match the POSIX egrep regex $PATTERN in their paths and are not empty","find project -maxdepth 1 -type d ! -path ""$PATTERN"" ! -path ""$PATTERN"" ! -path ""$PATTERN"" ! -path ""$PATTERN"" ! -path ""$PATTERN"" ! -name ""$PATTERN"" -print","find Path -maxdepth Quantity -type d ! -path Regex ! -path Regex ! -path Regex ! -path Regex ! -path Regex ! -name Regex -print",n,n,n,n,n,n,,
"Find all directories under /directory-path and change their permission to 2755","find /directory-path -type d -exec chmod 2755 {} +","find Path -type d -exec chmod Permission {} +",y,y,y,y,y,y,,
"Find all directories under /directory-path and change their permission to 2755","find /directory-path -type d -exec chmod 2755 {} \;","find Path -type d -exec chmod Permission {} \;",y,y,y,y,y,y,,
"Find all directories under /directory-path and change their permission to 2755","find /directory-path -type d -print0 | xargs -0 -I {} chmod 2755 {}","find Path -type d -print0 | xargs -0 -I {} chmod Permission {}",y,y,y,y,y,y,,
"Find all directories under minimum 1 level down the current directory excluding  directories (along with their contents) that start with a . (dot) in their names","find . -mindepth 1 -maxdepth 1 -type d -name '???????????????????????????????????????????'","find Path -mindepth Quantity -maxdepth Quantity -type d -name Regex",n,n,n,n,n,n,,
"Find all directories under minimum 1 level down the current directory excluding  directories (along with their contents) that start with a . (dot) in their names","find . -mindepth 1 -maxdepth 1 -type d -name '????????????????????????????????????????????'","find Path -mindepth Quantity -maxdepth Quantity -type d -name Regex",n,n,n,n,n,n,,
"Find all directories under minimum 1 level down the current directory excluding  directories (along with their contents) that start with a . (dot) in their names","find . -mindepth 1 -maxdepth 1 -type d -name '??????????????????????????????????????????'","find Path -mindepth Quantity -maxdepth Quantity -type d -name Regex",n,n,n,n,n,n,,
"find all the empty directories in current folder and delete them","find . -type d -empty -delete","find Path -type d -empty -delete",y,y,y,y,y,y,,
"find all the empty directories in current folder and delete them","find . -type d -empty -exec rm {} \;","find Path -type d -empty -exec rm {} \;",n,n,n,n,n,n,,
"find all the empty directories in current folder and delete them","find . -type d -empty -exec rm -r -f {} \;","find Path -type d -empty -exec rm -r -f {} \;",y,y,y,y,y,y,,
"Find all empty directories in the current one and delete them","find . -type d -empty -delete","find Path -type d -empty -delete",y,y,y,y,y,y,,
"Find all empty directories in the current one and delete them","find . -type d -empty -exec rm {} \;","find Path -type d -empty -exec rm {} \;",n,n,n,n,n,n,,
"Find all empty directories in the current one and delete them","find . -type d -empty -exec rm -r -f {} \;","find Path -type d -empty -exec rm -r -f {} \;",y,y,y,y,y,y,,
"find all the empty in the current folder do not search in sub directories","find . -maxdepth 1 -type d -empty","find Path -maxdepth Quantity -type d -empty",y,y,y,y,y,y,,
"find all the empty in the current folder do not search in sub directories","find . -maxdepth 1 -mindepth 1 -type d","find Path -maxdepth Quantity -mindepth Quantity -type d",n,n,n,n,n,n,,
"find all the empty in the current folder do not search in sub directories","find . -maxdepth 1 -name ""*.conf""","find Path -maxdepth Quantity -name Regex",n,n,n,n,n,n,,
"Find all executable files under the current directory and below","find . -perm -111","find Path -perm -Permission",y,y,y,y,y,y,,
"Find all executable files under the current directory and below","find . -perm /a=x","find Path -perm Permission",y,y,y,y,y,y,,
"Find all executable files under the current directory and below","find . -perm -100 -print","find Path -perm -Permission -print",y,n,y,n,y,n,,
"Find all files/directories named 'photoA.jpg' under current directory tree","find . -name photoA.jpg","find Path -name Regex",y,y,y,y,y,y,,
"Find all files/directories named 'photoA.jpg' under current directory tree","find . -name ""photoA.jpg""","find Path -name Regex",y,y,y,y,y,y,,
"Find all files/directories named 'photoA.jpg' under current directory tree","find . -iname ""photoA.jpg""","find Path -iname Regex",n,n,n,n,n,n,,
"Find all files/directories named modules under current directory and list them twice","find . -name modules -exec ls -l {} \;","find Path -name Regex -exec ls -l {} \;",n,n,n,n,n,n,,
"Find all files/directories named modules under current directory and list them twice","find . -name modules","find Path -name Regex",n,n,n,n,n,n,,
"Find all files/directories named modules under current directory and list them twice","find . -name modules -exec ls -l {} \;","find Path -name Regex -exec ls -l {} \;",n,n,n,n,n,n,,
"Find all files/directories owned by user 'michel' under current directory","find . -user michel","find Path -user Regex",y,y,y,y,y,y,,
"Find all files/directories owned by user 'michel' under current directory","find . -user michel | xargs -I {} file {}","find Path -user Regex | xargs -I {} file {}",n,n,y,y,n,n,n,n
"Find all files/directories owned by user 'michel' under current directory","find . -user michel -exec ls -l {} \;","find Path -user Regex -exec ls -l {} \;",n,n,n,n,n,n,,
"Find all files/directories that are not newer than Jul 01 by modification time","find . ! -newer ""jul""","find Path ! -newer File",n,n,n,n,n,n,,
"Find all files/directories that are not newer than Jul 01 by modification time","find . ! -newer ""jul01""","find Path ! -newer File",n,n,n,n,n,n,,
"Find all files/directories that are not newer than Jul 01 by modification time","find /path ! -newer /tmp/timestamp","find Path ! -newer File",n,n,n,n,n,n,,
"Find all files/directories that are owned by user 'eric' under current directory tree","find . -user eric","find Path -user Regex",y,y,y,y,y,y,,
"Find all files/directories that are owned by user 'eric' under current directory tree","find . -user eric | xargs -I {} file {}","find Path -user Regex | xargs -I {} file {}",n,n,y,y,n,n,n,n
"Find all files/directories that are owned by user 'eric' under current directory tree","find . -user eric | xargs -I {} ls -l {}","find Path -user Regex | xargs -I {} ls -l {}",n,n,n,n,n,n,,
"Find all files/directories under $1 which have at least execute permission for their owner and set execute permission for group for these files/directories","find $1 -perm -u+rwx -exec chmod g+w {} \;","find Path -perm -Permission -exec chmod Permission {} \;",y,n,y,n,y,n,y,
"Find all files/directories under $1 which have at least execute permission for their owner and set execute permission for group for these files/directories","find $1 -perm -__SP__UNK -exec chmod g+w {} \;","find Path -perm -Permission -exec chmod Permission {} \;",y,n,n,n,y,n,y,n
"Find all files/directories under $1 which have at least execute permission for their owner and set execute permission for group for these files/directories","find $1 -perm +111 -exec chmod a+rwx {} \;","find Path -perm +Permission -exec chmod Permission {} \;",y,n,y,n,y,n,,
"Find all files/directories under $1 which have at least read permission for their owner and set read permission for group for these files/directories","find $1 -perm -u+rw -exec chmod g+r {} \;","find Path -perm -Permission -exec chmod Permission {} \;",y,n,y,n,y,n,,
"Find all files/directories under $1 which have at least read permission for their owner and set read permission for group for these files/directories","find $1 -perm -u+rw -exec chmod g+w {} \;","find Path -perm -Permission -exec chmod Permission {} \;",y,n,y,n,y,n,,
"Find all files/directories under $1 which have at least read permission for their owner and set read permission for group for these files/directories","find ""$1"" -perm -u+rw -exec chmod g+r {} \;","find Path -perm -Permission -exec chmod Permission {} \;",y,n,y,n,y,n,,
"Find all files/directories under '/usr' directory tree that have been modified exactly 5 minutes ago","find /usr -mmin 5","find Path -mmin Quantity",y,y,y,y,y,y,,
"Find all files/directories under '/usr' directory tree that have been modified exactly 5 minutes ago","find /usr -mmin -5","find Path -mmin -Quantity",y,n,y,n,y,n,,
"Find all files/directories under '/usr' directory tree that have been modified exactly 5 minutes ago","find /usr -mmin 5 -print","find Path -mmin Quantity -print",y,y,y,y,y,y,,
"Find all files/directories under '/usr/share/doc' directory tree whose name start with 'README'","find /usr/share/doc -name 'README*'","find Path -name Regex",y,y,y,y,y,y,,
"Find all files/directories under '/usr/share/doc' directory tree whose name start with 'README'","find /usr/share/doc -name ""README""","find Path -name Regex",y,n,y,n,y,n,,
"Find all files/directories under '/usr/share/doc' directory tree whose name start with 'README'","find /usr/share/doc -name 'README'","find Path -name Regex",y,n,y,n,y,n,,
"Find all files/directories under /non-existent/directory directory with ~/bin/find","find /non-existent/directory -name '~find'","find Path -name Regex",n,n,y,n,n,n,n,n
"Find all files/directories under /non-existent/directory directory with ~/bin/find","find /non-existent/directory -path ~find","find Path -path Regex",n,n,y,n,n,n,n,n
"Find all files/directories under /non-existent/directory directory with ~/bin/find","find /non-existent/directory -name ""~find""","find Path -name Regex",n,n,y,n,n,n,n,n
"Find all files/directories under /var/www/some/subset and change their owner and group to www-data","find /var/www/some/subset/subset -print0 | xargs -0 -I {} chown -R www-data {}","find Path -print0 | xargs -0 -I {} chown -R Regex {}",y,n,y,n,n,n,y,n
"Find all files/directories under /var/www/some/subset and change their owner and group to www-data","find /var/www/some/subset -print0 | xargs -0 -I {} chown -R www-data {}","find Path -print0 | xargs -0 -I {} chown -R Regex {}",y,n,y,n,n,n,y,n
"Find all files/directories under /var/www/some/subset and change their owner and group to www-data","find /var/www/some/subset/subset -print0 | xargs -0 -I {} chown www-data {}","find Path -print0 | xargs -0 -I {} chown Regex {}",y,n,y,n,y,n,,
"Find all files/directories under current directory and put the output into full_backup_dir variable","find . -print | xargs -I {} echo full_backup_dir {}","find Path -print | xargs -I {} echo Regex {}",n,n,n,n,n,n,,
"Find all files/directories under current directory and put the output into full_backup_dir variable","find . -print | xargs -I {} echo full_backup_dir {}","find Path -print | xargs -I {} echo Regex {}",n,n,n,n,n,n,,
"Find all files/directories under current directory and put the output into full_backup_dir variable","find . -exec echo {} _backup_dir \;","find Path -exec echo {} Regex \;",n,n,n,n,n,n,,
"Find all files/directories under current directory that are 10MB in size","find . -size 10M","find Path -size Size",y,y,y,y,y,y,,
"Find all files/directories under current directory that are 10MB in size","find . -name '10???????????????????????????????????????????????*'","find Path -name Regex",n,n,n,n,n,n,,
"Find all files/directories under current directory that are 10MB in size","find . -name '10????????????????????????????????????????????????*'","find Path -name Regex",n,n,n,n,n,n,,
"Find all files/directories under current directory that were modified exactly 30 minutes ago","find . -mmin 30 -print","find Path -mmin Quantity -print",y,y,y,y,y,y,,
"Find all files/directories under current directory that were modified exactly 30 minutes ago","find . -mmin 30","find Path -mmin Quantity",y,y,y,y,y,y,,
"Find all files/directories under current directory that were modified exactly 30 minutes ago","find . -mmin 30 -printf ""%Y %m %__SP__UNK %__SP__UNK %__SP__UNK %__SP__UNK %__SP__UNK %__SP__UNK %__SP__UNK %__SP__UNK %__SP__UNK %__SP__UNK %__SP__UNK %__SP__UNK %__SP__UNK\n""","find Path -mmin Quantity -printf ""%Y %m %__SP__UNK %__SP__UNK %__SP__UNK %__SP__UNK %__SP__UNK %__SP__UNK %__SP__UNK %__SP__UNK %__SP__UNK %__SP__UNK %__SP__UNK %__SP__UNK %__SP__UNK\n""",y,n,y,n,y,n,,
"Find all files/directories under current directory tree that belong to the group 'compta'","find . -group compta","find Path -group Regex",y,y,y,y,y,y,,
"Find all files/directories under current directory tree that belong to the group 'compta'","find ./ -group compta","find Path -group Regex",y,y,y,y,y,y,,
"Find all files/directories under current directory tree that belong to the group 'compta'","find . -group compta | xargs -I {} grep ""compta"" {}","find Path -group Regex | xargs -I {} grep Regex {}",n,n,n,n,n,n,,
"Find all files/directories under minimum 1 level down the $FOLDER directory and sort them","find ""$FOLDER"" -mindepth 1 -maxdepth 1","find Path -mindepth Quantity -maxdepth Quantity",n,n,n,n,n,n,,
"Find all files/directories under minimum 1 level down the $FOLDER directory and sort them","find ""$FOLDER"" -mindepth 1 -maxdepth 1 -type f","find Path -mindepth Quantity -maxdepth Quantity -type f",n,n,n,n,n,n,,
"Find all files/directories under minimum 1 level down the $FOLDER directory and sort them","find ""$FOLDER"" -mindepth 1 -maxdepth 1 -type f | sort","find Path -mindepth Quantity -maxdepth Quantity -type f | sort",n,n,n,n,n,n,,
"Find all files/directories with '.pdf' extension excluding 'pdfs' directory and all of its contents","find / -name *.pdf -exec cat {} \;","find Path -name Regex -exec cat {} \;",n,n,n,n,n,n,,
"Find all files/directories with '.pdf' extension excluding 'pdfs' directory and all of its contents","find / ! -name ""*.pdf"" -print","find Path ! -name Regex -print",n,n,n,n,n,n,,
"Find all files/directories with '.pdf' extension excluding 'pdfs' directory and all of its contents","find / -name *.pdf -print | xargs -I {} cat {}","find Path -name Regex -print | xargs -I {} cat {}",n,n,n,n,n,n,,
"Find all files/directories with user id 120 under current directory tree","find . -user 120","find Path -user Regex",y,y,y,y,y,y,,
"Find all files/directories with user id 120 under current directory tree","find . -name ""120""","find Path -name Regex",n,n,n,n,n,n,,
"Find all files/directories with user id 120 under current directory tree","find . -print0 | xargs -0 -I {} grep ""120"" {}","find Path -print0 | xargs -0 -I {} grep Regex {}",n,n,n,n,n,n,,
"find all files ending with ""js.compiled"" in current folder","find . -name ""*js.compiled""","find Path -name Regex",y,y,y,y,y,y,,
"find all files ending with ""js.compiled"" in current folder","find . -name ""*.compiled""","find Path -name Regex",y,n,y,n,y,n,,
"find all files ending with ""js.compiled"" in current folder","find . -name '*js.compiled'","find Path -name Regex",y,y,y,y,y,y,,
"find all files ending with ""js.compiled"" in current folder and rename them.","find . -name ""*js.compiled"" -exec mv {} .compiled \;","find Path -name Regex -exec mv {} File \;",y,n,y,n,n,n,y,n
"find all files ending with ""js.compiled"" in current folder and rename them.","find . -name ""*js.compiled"" | xargs -I {} mv {} {}.compiled","find Path -name Regex | xargs -I {} mv {} File",y,n,y,n,n,n,y,n
"find all files ending with ""js.compiled"" in current folder and rename them.","find . -name ""*.compiled"" -exec mv {} .compiled \;","find Path -name Regex -exec mv {} File \;",y,n,y,n,n,n,y,n
"find all the files from root folder which have nogroup or noname and dispaly their details.","find / \( -name 'nogroup*' -or -name '*.nname' \) -print","find Path \( -name Regex -or -name Regex \) -print",n,n,n,n,n,n,,
"find all the files from root folder which have nogroup or noname and dispaly their details.","find / \( -name nogroup* -or -name nogroup* \) -print","find Path \( -name Regex -or -name Regex \) -print",n,n,n,n,n,n,,
"find all the files from root folder which have nogroup or noname and dispaly their details.","find / \( -name 'nogroup*' -or -name 'cache*' \) -print","find Path \( -name Regex -or -name Regex \) -print",n,n,n,n,n,n,,
"Find all files in /home/kos and below whose names end in "".tmp""","find /home/kos -name ""*.tmp""","find Path -name Regex",y,y,y,y,y,y,,
"Find all files in /home/kos and below whose names end in "".tmp""","find /home/kos -name '*.tmp'","find Path -name Regex",y,y,y,y,y,y,,
"Find all files in /home/kos and below whose names end in "".tmp""","find /home/kos -name \*.tmp","find Path -name Regex",y,y,y,y,y,y,,
"Find all files in /tmp whose names begin with the current user's name followed by "".""","find /tmp -name ""[__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK]*""","find Path -name Regex",y,n,y,n,n,n,y,n
"Find all files in /tmp whose names begin with the current user's name followed by "".""","find /tmp -name '[__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK]*'","find Path -name Regex",y,n,y,n,n,n,y,n
"Find all files in /tmp whose names begin with the current user's name followed by "".""","find /tmp -name ""[__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK]*""","find Path -name Regex",y,n,y,n,n,n,y,n
"find all the files in the /usr folder that have been modified after the file /usr/FirstFile.","find /usr -newer /usr/FirstFile","find Path -newer File",y,y,y,y,y,y,,
"find all the files in the /usr folder that have been modified after the file /usr/FirstFile.","find /usr -newer /usr/FirstFile -print","find Path -newer File -print",y,y,y,y,y,y,,
"find all the files in the /usr folder that have been modified after the file /usr/FirstFile.","find /usr/FirstFile -newer /usr/FirstFile","find Path -newer File",y,n,y,n,y,n,,
"Find all files in and below all subdirectories of the current directory","find . -mindepth 1","find Path -mindepth Quantity",y,y,y,y,y,y,,
"Find all files in and below all subdirectories of the current directory","find . -mindepth 1 -maxdepth 1","find Path -mindepth Quantity -maxdepth Quantity",n,n,n,n,n,n,,
"Find all files in and below all subdirectories of the current directory","find . -mindepth 1 -print","find Path -mindepth Quantity -print",y,y,y,y,y,y,,
"Find all files in and below the home directory that have been modified in the last 90 minutes","find ~ -mmin -90","find Path -mmin -Quantity",y,y,y,y,y,y,,
"Find all files in and below the home directory that have been modified in the last 90 minutes","find ~/ -mmin -90","find Path -mmin -Quantity",y,y,y,y,y,y,,
"Find all files in and below the home directory that have been modified in the last 90 minutes","find $HOME -mmin -90","find Path -mmin -Quantity",y,y,y,y,y,y,,
"find all the files in the current directory and search for the word ""pw0"" in them.","find . -exec grep -i ""pw0"" {} \;","find Path -exec grep -i Regex {} \;",n,n,n,n,y,y,n,n
"find all the files in the current directory and search for the word ""pw0"" in them.","find . -exec grep ""pw0"" {} \;","find Path -exec grep Regex {} \;",n,n,y,n,n,n,n,n
"find all the files in the current directory and search for the word ""pw0"" in them.","find . | xargs -I {} grep ""pw0"" {}","find Path | xargs -I {} grep Regex {}",n,n,y,n,n,n,n,n
"Find all files in the current directory recursively that were last modified more than 5 days ago","find . -mtime +5","find Path -mtime +Timespan",y,y,y,y,y,y,,
"Find all files in the current directory recursively that were last modified more than 5 days ago","find . -name '??????????????????????????????????????????????????'","find Path -name Regex",n,n,n,n,n,n,,
"Find all files in the current directory recursively that were last modified more than 5 days ago","find . -name '???????????????????????????????????????????????????'","find Path -name Regex",n,n,n,n,n,n,,
"Find all files in the current directory recursively with ""linkin park"" in their names and copy them to /Users/tommye/Desktop/LP","find . -name ""*linkin park*"" -exec cp {} /Users/tommye/Desktop/LP \;","find Path -name Regex -exec cp {} File \;",y,y,y,y,y,y,,
"Find all files in the current directory recursively with ""linkin park"" in their names and copy them to /Users/tommye/Desktop/LP","find . -iname ""*linkin park*"" -exec cp {} /Users/tommye/Desktop/LP \;","find Path -iname Regex -exec cp {} File \;",n,n,n,n,n,n,,
"Find all files in the current directory recursively with ""linkin park"" in their names and copy them to /Users/tommye/Desktop/LP","find . -name '*linkin park*' -exec cp -r {} /Users/tommye/Desktop/LP \;","find Path -name Regex -exec cp -r {} File \;",y,y,y,y,n,n,y,y
"find all files in the current directory that are less than 1 byte size","find . -size -1c","find Path -size -Size",y,y,y,y,y,y,,
"find all files in the current directory that are less than 1 byte size","find . -size -1b","find Path -size -Size",y,n,y,n,y,n,,
"find all files in the current directory that are less than 1 byte size","find . -size -1c -print","find Path -size -Size -print",y,y,y,y,y,y,,
"Find all files in current directory that were modified less than 1 day ago excluding hidden files  and archive them and put the output into the variable file_changed","find . \( -name file1 -or -name file_changed \) -print0 | xargs -0 -I {} tar -c -z -v -f file_changed {}","find Path \( -name Regex -or -name Regex \) -print0 | xargs -0 -I {} tar -c -z -v -f File {}",n,n,n,n,n,n,,
"Find all files in current directory that were modified less than 1 day ago excluding hidden files  and archive them and put the output into the variable file_changed","find . -not -path '*/\.*' -mtime -1 -print0 | xargs -0 -I {} tar -c -v -f file_changed {}","find Path -not -path Regex -mtime -Timespan -print0 | xargs -0 -I {} tar -c -v -f File {}",n,n,n,n,n,n,,
"Find all files in current directory that were modified less than 1 day ago excluding hidden files  and archive them and put the output into the variable file_changed","find . -not \( -name file1 -or -name file_changed \) -print0 | xargs -0 -I {} tar -c -z -v -f file_changed {}","find Path -not \( -name Regex -or -name Regex \) -print0 | xargs -0 -I {} tar -c -z -v -f File {}",n,n,n,n,n,n,,
"find all the files in the current directory that have the word ""lib"" in them","find . -name ""*lib*"" -exec grep ""lib"" {} \;","find Path -name Regex -exec grep Regex {} \;",n,n,n,n,n,n,,
"find all the files in the current directory that have the word ""lib"" in them","find . -name ""*lib*"" -print","find Path -name Regex -print",n,n,n,n,n,n,,
"find all the files in the current directory that have the word ""lib"" in them","find . -name '*lib*' -exec grep 'lib' {} \;","find Path -name Regex -exec grep Regex {} \;",n,n,n,n,n,n,,
"find all the files in the current directory whose size is equal to exactly 126MB.","find . -size 126M","find Path -size Size",y,y,y,y,y,y,,
"find all the files in the current directory whose size is equal to exactly 126MB.","find . -size 126c","find Path -size Size",y,n,y,n,y,n,,
"find all the files in the current directory whose size is equal to exactly 126MB.","find . -size +126M","find Path -size +Size",y,n,y,n,n,n,y,y
"find all the files in current folder ending with ""ini"" and search for a word in all these files","find . -name \*.ini -print0 | xargs -0 -I {} grep -i -l '^use ' {}","find Path -name Regex -print0 | xargs -0 -I {} grep -i -l Regex {}",n,n,n,n,n,n,,
"find all the files in current folder ending with ""ini"" and search for a word in all these files","find . -name \*.ini -print0 | xargs -0 -I {} grep -i -l '^use' {}","find Path -name Regex -print0 | xargs -0 -I {} grep -i -l Regex {}",n,n,n,n,n,n,,
"find all the files in current folder ending with ""ini"" and search for a word in all these files","find . -name \*.ini -print0 | xargs -0 -I {} grep -i ""ini"" {}","find Path -name Regex -print0 | xargs -0 -I {} grep -i Regex {}",n,n,n,n,n,n,,
"find all the files in the current folder that are modified after the modification date of a file","find . -newer file","find Path -newer File",y,y,y,n,y,y,y,y
"find all the files in the current folder that are modified after the modification date of a file","find . -newermt ""Feb __SP__UNK""","find Path -newermt Regex",n,n,n,n,n,n,,
"find all the files in the current folder that are modified after the modification date of a file","find . -newermt ""__SP__UNK __SP__UNK __SP__UNK"" ! -newermt ""Feb __SP__UNK""","find Path -newermt Regex ! -newermt Regex",n,n,n,n,n,n,,
"find all files in current folder which are more than 300MB","find . -size +300M","find Path -size +Size",y,y,y,y,y,y,,
"find all files in current folder which are more than 300MB","find ./ -size +300M","find Path -size +Size",y,y,y,y,y,y,,
"find all files in current folder which are more than 300MB","find . | xargs -I {} find {} -size +10M -print | xargs -I {} find {} -size +300M -print","find Path | xargs -I {} find {} -size +Size -print | xargs -I {} find {} -size +Size -print",y,y,y,y,n,n,y,y
"find all the files in the current folder which are readable","find . -writable","find Path Path",n,n,n,n,y,n,n,n
"find all the files in the current folder which are readable","find . -readable","find Path Path",y,y,y,y,y,y,n,
"find all the files in the current folder which are readable","find . -name '???????????????????????????????????*'","find Path -name Regex",n,n,n,n,n,n,,
"find all files in the current folder which have not been changed in the last 48 hours","find . -mtime +10 -print","find Path -mtime +Timespan -print",y,n,y,n,n,n,y,n
"find all files in the current folder which have not been changed in the last 48 hours","find . -mtime +7 -print","find Path -mtime +Timespan -print",y,n,y,n,n,n,y,n
"find all files in the current folder which have not been changed in the last 48 hours","find . -ctime +10 -print","find Path -ctime +Timespan -print",y,n,y,n,y,n,,
"find all files in the file system which are modified after the file /tmp/checkpoint","find / -newer /tmp/checkpoint","find Path -newer File",y,y,y,y,y,y,,
"find all files in the file system which are modified after the file /tmp/checkpoint","find / -newer /tmp/checkpoint -print","find Path -newer File -print",y,y,y,y,y,y,,
"find all files in the file system which are modified after the file /tmp/checkpoint","find / -newer /tmp/checkpoint -exec find /tmp/checkpoint -print \; | xargs -I {} find /tmp/checkpoint -print | xargs -I {} find /tmp/checkpoint -print {}","find Path -newer File -exec find Path -print \; | xargs -I {} find Path -print | xargs -I {} find Path -print {}",n,n,n,n,n,n,,
"find all the files in the file system which hae set uid enabled and save them to /root/suid.txt and those which have size greater than 100MB save them to /root/big.txt","find / -xdev -name ""*.txt"" -size +100M -exec mv {} /root/big.txt \;","find Path -xdev -name Regex -size +Size -exec mv {} File \;",n,n,n,n,n,n,,
"find all the files in the file system which hae set uid enabled and save them to /root/suid.txt and those which have size greater than 100MB save them to /root/big.txt","find / -group /root/suid.txt -size +100M -exec mv {} /root/big.txt \;","find Path -group Regex -size +Size -exec mv {} File \;",n,n,n,n,n,n,,
"find all the files in the file system which hae set uid enabled and save them to /root/suid.txt and those which have size greater than 100MB save them to /root/big.txt","find / -xdev -samefile /root/suid.txt -size +100M -exec mv {} /root/big.txt \;","find Path -xdev -samefile Regex -size +Size -exec mv {} File \;",n,n,n,n,n,n,,
"find all the files in the folder /home which are exactly of size 10MB","find /home -size 10","find Path -size Size",y,n,y,n,y,n,,
"find all the files in the folder /home which are exactly of size 10MB","find /home -size 10M","find Path -size Size",y,y,y,y,y,y,,
"find all the files in the folder /home which are exactly of size 10MB","find /home -size 10 -print","find Path -size Size -print",y,n,y,n,y,n,,
"Find all files in maximum 2 levels down the current directory","find . -maxdepth 2 -type f","find Path -maxdepth Quantity -type f",y,y,y,y,y,y,,
"Find all files in maximum 2 levels down the current directory","find . -maxdepth 2 -name '*.2'","find Path -maxdepth Quantity -name Regex",y,n,y,n,n,n,y,n
"Find all files in maximum 2 levels down the current directory","find . -maxdepth 2 -name ""*.2""","find Path -maxdepth Quantity -name Regex",y,n,y,n,n,n,y,n
"Finds all files like ""mylog*.log"" newer than $2 and archives them with bzip2.","find $2 -name mylog*.log | xargs -I {} tar -c -v -z -f mylog*.log {}","find Path -name Regex | xargs -I {} tar -c -v -z -f File {}",n,n,n,n,n,n,,
"Finds all files like ""mylog*.log"" newer than $2 and archives them with bzip2.","find $2 -name mylog*.log | xargs -I {} tar -c -v -f mylog*.log {}","find Path -name Regex | xargs -I {} tar -c -v -f File {}",n,n,n,n,n,n,,
"Finds all files like ""mylog*.log"" newer than $2 and archives them with bzip2.","find ""mylog*.log"" -not \( -name ""mylog*.log"" -or -name ""mylog*.log"" \) -exec tar -u -v -f ""$2"" {} \;","find Path -not \( -name Regex -or -name Regex \) -exec tar -u -v -f File {} \;",n,n,n,n,n,n,,
"Find all files name passwd in the root directory and all its sub-directories.","find / -name passwd","find Path -name Regex",y,y,y,y,y,y,,
"Find all files name passwd in the root directory and all its sub-directories.","find / -iname passwd","find Path -iname Regex",n,n,n,n,n,n,,
"Find all files name passwd in the root directory and all its sub-directories.","find / \( -name passwd -print -or -name ""passwd"" -or -name ""passwd"" \)","find Path \( -name Regex -print -or -name Regex -or -name Regex \)",y,y,y,y,y,y,,
"find all the files starting with ""config"" in the folder Symfony","find Symfony -name config","find Path -name Regex",y,n,y,n,y,n,,
"find all the files starting with ""config"" in the folder Symfony","find Symfony -name ""config""","find Path -name Regex",y,n,y,n,y,n,,
"find all the files starting with ""config"" in the folder Symfony","find Symfony -iname ""config""","find Path -iname Regex",y,n,n,n,y,n,y,n
"find all the files that are modified in the last 1 day","find . -daystart -mtime -1","find Path -daystart -mtime -Timespan",y,y,n,n,y,y,y,y
"find all the files that are modified in the last 1 day","find . -mtime -1","find Path -mtime -Timespan",y,y,y,y,y,y,,
"find all the files that are modified in the last 1 day","find . -name ""??????????????????????????????????????????????? 1""","find Path -name Regex",n,n,n,n,n,n,,
"find all the files that have been changed today","find . -type f -ctime -1","find Path -type f -ctime -Timespan",y,n,y,n,n,n,y,y
"find all the files that have been changed today","find . -type f -ctime -0","find Path -type f -ctime -Timespan",y,n,y,y,n,n,y,n
"find all the files that have been changed today","find . -ctime -1 -print","find Path -ctime -Timespan -print",y,n,y,n,n,n,y,y
"find all files that have been used more than two days since their status was last changed","find . -type f -ctime +2","find Path -type f -ctime +Timespan",n,n,n,n,n,n,,
"find all files that have been used more than two days since their status was last changed","find . -ctime +2","find Path -ctime +Timespan",n,n,n,n,n,n,,
"find all files that have been used more than two days since their status was last changed","find /etc/ -ctime +2","find Path -ctime +Timespan",n,n,n,n,n,n,,
"Find all files that belongs to group Developer under /home directory","find /home -group Developer","find Path -group Regex",y,y,y,y,y,y,,
"Find all files that belongs to group Developer under /home directory","find /home -group Developer | xargs -I {} chown :Developer {}","find Path -group Regex | xargs -I {} chown Regex {}",n,n,n,n,n,n,,
"Find all files that belongs to group Developer under /home directory","find /home -group Developer | xargs -I {} chown Developer {}","find Path -group Regex | xargs -I {} chown Regex {}",n,n,n,n,n,n,,
"Find all files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory without descending into other partitions","find / -maxdepth 1 -xdev -type f -exec grep -i -l stringtofind {} \;","find Path -maxdepth Quantity -xdev -type f -exec grep -i -l Regex {} \;",y,y,y,y,y,y,,
"Find all files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory without descending into other partitions","find / -maxdepth 1 -xdev -iname ""*stringtofind*""","find Path -maxdepth Quantity -xdev -iname Regex",n,n,n,n,n,n,,
"Find all files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory without descending into other partitions","find / -maxdepth 1 -xdev -type f -exec grep -l -i stringtofind {} \;","find Path -maxdepth Quantity -xdev -type f -exec grep -l -i Regex {} \;",y,y,y,y,y,y,,
"Find all files under $source_dir that match the regex .*\.\(avi\|wmv\|flv\|mp4\) in their paths and print them with null character as the delimiter","find $source_dir -type f -regex ""$source_dir"" -print0 | xargs -0 -n 1 -P 8 -I {} echo {}","find Path -type f -regex Regex -print0 | xargs -0 -n Quantity -P Quantity -I {} echo {}",y,n,n,n,y,n,y,y
"Find all files under $source_dir that match the regex .*\.\(avi\|wmv\|flv\|mp4\) in their paths and print them with null character as the delimiter","find $source_dir -type f -regex ""$source_dir"" -print0 | xargs -0 -p -I {} echo {}","find Path -type f -regex Regex -print0 | xargs -0 -p -I {} echo {}",n,n,n,n,n,n,,
"Find all files under $source_dir that match the regex .*\.\(avi\|wmv\|flv\|mp4\) in their paths and print them with null character as the delimiter","find $source_dir -name "".*\.\"" -print0 | xargs -0 -I {} grep -c "".*\.\"" {}","find Path -name Regex {}",n,n,n,n,n,n,,
"Find all files under ${searchpath} that match the regex '""${string1}"".*""${string2}"".*""${string3}""' (${string1} ... won't be expanded) in their contents","find ""${searchpath}}"" -name ""${string}}"" -type f -exec grep ""${string}3}"" {} \; -print","find Path -name Regex -type f -exec grep Regex {} \; -print",n,n,n,n,n,n,,
"Find all files under ${searchpath} that match the regex '""${string1}"".*""${string2}"".*""${string3}""' (${string1} ... won't be expanded) in their contents","find ""${searchpath}}"" -name ""${string}}"" -type f -exec grep ""${string1}3}"" {} \; -print","find Path -name Regex -type f -exec grep Regex {} \; -print",n,n,n,n,n,n,,
"Find all files under ${searchpath} that match the regex '""${string1}"".*""${string2}"".*""${string3}""' (${string1} ... won't be expanded) in their contents","find ""${searchpath}}"" -name ""${string}}"" -type f -exec grep ""${string1}}.*"" {} \; -print","find Path -name Regex -type f -exec grep Regex {} \; -print",n,n,n,n,n,n,,
"Find all files under and below the current working directory with the word California in the file (case insensitive), and count the number of lines in the output","find . -type f -exec grep -l California {} \; | wc -l","find Path -type f -exec grep -l Regex {} \; | wc -l",n,n,y,n,n,n,n,n
"Find all files under and below the current working directory with the word California in the file (case insensitive), and count the number of lines in the output","find . -type f -exec grep -H -n 'California' {} \; | wc -l","find Path -type f -exec grep -H -n Regex {} \; | wc -l",n,n,n,n,n,n,,
"Find all files under and below the current working directory with the word California in the file (case insensitive), and count the number of lines in the output","find . -type f -exec grep California {} \; | wc -l","find Path -type f -exec grep Regex {} \; | wc -l",n,n,n,n,y,y,n,n
"Find all files under current directory","find . -type f","find Path -type f",y,y,y,y,y,y,,
"Find all files under current directory","find . -type f | xargs -I {} find . -type f -print | xargs -I {} find . -type f -print | xargs -I {} find . -type f -print | xargs -I {} find . -print | xargs -I {}","find Path -type f | xargs -I {} find Path -type f -print | xargs -I {} find Path -type f -print | xargs -I {} find Path -type f -print | xargs -I {} find Path -print | xargs -I {}",n,n,n,n,n,n,,
"Find all files under current directory","find . -type f -print0 | xargs -0 -I {} find . -type f -print | xargs -I {} find . -type f -print | xargs -I {} find . -type f -print | xargs -I {} ls -l {}","find Path -type f -print0 | xargs -0 -I {} find Path -type f -print | xargs -I {} find Path -type f -print | xargs -I {} find Path -type f -print | xargs -I {} ls -l {}",n,n,n,n,n,n,,
"Find all files under current directory and set read-write permission for owner and group and no permission for other for those directories","find . -type d -exec chmod ug=rwx,o= {} \;","find Path -type d -exec chmod Permission {} \;",n,n,n,n,n,n,,
"Find all files under current directory and set read-write permission for owner and group and no permission for other for those directories","find . -type d -exec chmod u=rwx,g=rx,o= {} \;","find Path -type d -exec chmod Permission {} \;",n,n,n,n,n,n,,
"Find all files under current directory and set read-write permission for owner and group and no permission for other for those directories","find . -type d -exec chmod ug=rw,o= {} \;","find Path -type d -exec chmod Permission {} \;",n,n,n,n,n,n,,
"Find all files under the current directory whose filenames are not ""file.txt"", ignoring the case","find . -iname ""file.txt""","find Path -iname Regex",n,n,n,n,n,n,,
"Find all files under the current directory whose filenames are not ""file.txt"", ignoring the case","find . -iname 'file.txt' ! -iname '*.txt'","find Path -iname Regex ! -iname Regex",y,n,y,n,n,n,y,n
"Find all files under the current directory whose filenames are not ""file.txt"", ignoring the case","find . -iname 'file.txt' -not -iname '*.txt'","find Path -iname Regex -not -iname Regex",y,n,y,n,n,n,y,n
"Find all files under media/ directory and change their permission to 600","find media/ -type f -exec chmod 600 {} \;","find Path -type f -exec chmod Permission {} \;",y,y,y,y,y,y,,
"Find all files under media/ directory and change their permission to 600","find media/ -exec chmod 600 {} \;","find Path -exec chmod Permission {} \;",y,y,y,y,n,n,y,y
"Find all files under media/ directory and change their permission to 600","find media/ -type f -print0 | xargs -0 -I {} chmod 600 {}","find Path -type f -print0 | xargs -0 -I {} chmod Permission {}",y,y,y,y,y,y,,
"Find all files whose permission are 777","find . -type f -perm 0777 -print","find Path -type f -perm Permission -print",y,y,y,y,y,y,,
"Find all files whose permission are 777","find / -perm 777","find Path -perm Permission",y,y,y,y,n,n,y,y
"Find all files whose permission are 777","find / -type f -perm 0777 -print","find Path -type f -perm Permission -print",y,y,y,y,y,y,,
"Find all files with '.conf' extension under '/etc' directory tree that have been modified in the last 30 minutes","find /etc -name ""*.conf"" -mmin -30","find Path -name Regex -mmin -Quantity",y,y,y,y,y,y,,
"Find all files with '.conf' extension under '/etc' directory tree that have been modified in the last 30 minutes","find /etc -type f -mmin -30","find Path -type f -mmin -Quantity",n,n,n,n,n,n,,
"Find all files with '.conf' extension under '/etc' directory tree that have been modified in the last 30 minutes","find /etc -type f -mmin -30 -name ""*.conf""","find Path -type f -mmin -Quantity -name Regex",y,y,y,y,y,y,,
"Find all files with '.txt' extension under '/home/my_dir' dirctory tree and display the number of lines in these files","find /home/my_dir -name ""*.txt"" | xargs -I {} wc -l {}","find Path -name Regex | xargs -I {} wc -l {}",n,n,y,y,n,n,n,n
"Find all files with '.txt' extension under '/home/my_dir' dirctory tree and display the number of lines in these files","find /home/my_dir -name '*.txt' | xargs -I {} wc -l {}","find Path -name Regex | xargs -I {} wc -l {}",n,n,y,y,n,n,n,n
"Find all files with '.txt' extension under '/home/my_dir' dirctory tree and display the number of lines in these files","find /home/my_dir -name ""*.txt"" -exec wc -l {} +","find Path -name Regex -exec wc -l {} +",n,n,y,y,n,n,n,n
"Find all fonts (in '/usr/local/fonts') that belong to the user 'warwick'","find / -user warwick -print","find Path -user Regex -print",y,n,y,n,y,n,,
"Find all fonts (in '/usr/local/fonts') that belong to the user 'warwick'","find / -user warwick","find Path -user Regex",y,n,y,n,y,n,,
"Find all fonts (in '/usr/local/fonts') that belong to the user 'warwick'","find / -user warwick -exec echo {} \;","find Path -user Regex -exec echo {} \;",y,n,y,n,y,n,,
"find all the jpg files in current folder and sort them","find . -name \*.jpg -type f -exec sort {} \;","find Path -name Regex -type f -exec sort {} \;",n,n,n,n,n,n,,
"find all the jpg files in current folder and sort them","find . -name \*.jpg -type f -exec sort -n {} \;","find Path -name Regex -type f -exec sort -n {} \;",n,n,n,n,n,n,,
"find all the jpg files in current folder and sort them","find . -name ""*.jpg"" | sort","find Path -name Regex | sort",y,y,y,y,n,n,y,y
"find all of the files that are readable","find / -perm -__SP__UNK","find Path -perm -Permission",n,n,n,n,n,n,y,
"find all of the files that are readable","find / -perm -u+s","find Path -perm -Permission",y,n,y,n,n,n,y,n
"find all of the files that are readable","find / -perm -u+s -print","find Path -perm -Permission -print",y,n,y,n,n,n,y,n
"find all the ogg files in the current directory which have the word ""monfichier"" in their name","find . -iname ""*.ogg"" -exec grep ""monfichier"" {} \;","find Path -iname Regex -exec grep Regex {} \;",n,n,n,n,n,n,,
"find all the ogg files in the current directory which have the word ""monfichier"" in their name","find . -iname ""*.ogg"" -exec grep -i ""monfichier"" {} \;","find Path -iname Regex -exec grep -i Regex {} \;",n,n,n,n,n,n,,
"find all the ogg files in the current directory which have the word ""monfichier"" in their name","find . -iname '*.ogg' -iname '*.ogg'","find Path -iname Regex -iname Regex",y,n,y,n,n,n,y,n
"find all the perl files in /var/www","find /var/www -name *.pl","find Path -name Regex",y,n,y,y,n,n,y,n
"find all the perl files in /var/www","find /var/www -name *.perl","find Path -name Regex",y,n,y,n,n,n,y,n
"find all the perl files in /var/www","find /var/www -name '*.pl'","find Path -name Regex",y,y,y,y,n,n,y,y
"Finds all php processes running in system.","find / -type f -name ""*.php""","find Path -type f -name Regex",n,n,n,n,n,n,,
"Finds all php processes running in system.","find / -type f -iname ""*.php""","find Path -type f -iname Regex",n,n,n,n,n,n,,
"Finds all php processes running in system.","find / -type c -name ""*.php""","find Path -type c -name Regex",n,n,n,n,n,n,,
"find all the png files in the current folder which begin with the word image","find . -name '*.png' | xargs -I {} grep 'image' {}","find Path -name Regex | xargs -I {} grep Regex {}",n,n,n,n,n,n,,
"find all the png files in the current folder which begin with the word image","find . -name '*.png' -print0 | xargs -0 -I {} grep 'image' {}","find Path -name Regex -print0 | xargs -0 -I {} grep Regex {}",n,n,n,n,n,n,,
"find all the png files in the current folder which begin with the word image","find . -name '*.png' -print | xargs -I {} grep 'image' {}","find Path -name Regex -print | xargs -I {} grep Regex {}",n,n,n,n,n,n,,
"Find all README's in /usr/share","find /usr/share -name 'README*'","find Path -name Regex",y,y,y,y,y,n,y,y
"Find all README's in /usr/share","find /usr/share -name ""Makefile"" -type f","find Path -name Regex -type f",y,n,y,n,y,n,,
"Find all README's in /usr/share","find /usr/share -name README","find Path -name Regex",y,y,y,y,y,y,y,
"Find all regular files in current directory and /home/www directory","find . /home/www -type f","find Path Path -type f",y,y,y,y,y,y,,
"Find all regular files in current directory and /home/www directory","find /home/www -type f","find Path -type f",n,n,n,n,n,n,,
"Find all regular files in current directory and /home/www directory","find . -type f -print | xargs -n 1 -I {} find . -type f -print | xargs -I {} find . -type f -print | xargs -I {} find . -type f -print | xargs -I {} ls -l {}","find Path -type f -print | xargs -n Quantity -I {} find Path -type f -print | xargs -I {} find Path -type f -print | xargs -I {} find Path -type f -print | xargs -I {} ls -l {}",n,n,n,n,n,n,,
"Find all regular files in the current directory tree and count them","find . -type f | wc -l","find Path -type f | wc -l",y,y,y,y,y,y,,
"Find all regular files in the current directory tree and count them","find . -type f -exec wc -l {} +","find Path -type f -exec wc -l {} +",n,n,n,n,n,n,,
"Find all regular files in the current directory tree and count them","find ./ -type f -exec wc -l \{\} \;","find Path -type f -exec wc -l File \;",n,n,n,n,n,n,,
"Find all regular files named postgis-2.0.0 under current directory","find . -type f -name ""postgis-2.0.0""","find Path -type f -name Regex",y,y,y,y,y,y,,
"Find all regular files named postgis-2.0.0 under current directory","find . -type f -name postgis-2.0.0","find Path -type f -name Regex",y,y,y,y,y,y,,
"Find all regular files named postgis-2.0.0 under current directory","find . -type f \( -name ""postgis-2.0.0"" -or -name ""postgis-2.0.0"" \)","find Path -type f \( -name Regex -or -name Regex \)",y,y,y,y,y,y,,
"Find all regular files that reside in the current directory tree and were last modified more than 5 days ago","find . -type f -mtime +5","find Path -type f -mtime +Timespan",y,y,y,y,y,y,,
"Find all regular files that reside in the current directory tree and were last modified more than 5 days ago","find . -name '.?????????????????????????????????????????????????'","find Path -name Regex",n,n,n,n,n,n,,
"Find all regular files that reside in the current directory tree and were last modified more than 5 days ago","find . -name '.??????????????????????????????????????????????????'","find Path -name Regex",n,n,n,n,n,n,,
"Find all regular files under ${S} directory","find ${S} -type f","find Path -type f",y,y,y,y,y,y,,
"Find all regular files under ${S} directory","find ""${S}"" -type f","find Path -type f",y,y,y,y,y,y,,
"Find all regular files under ${S} directory","find ""${S}}"" -type f","find Path -type f",y,n,y,n,y,n,,
"Find all regular files whose names contain a case insensitive pattern composed of space separated positional arguments and display a long listing of them","find . -type f -iname ""*.a"" -exec echo {} \; -exec ls -l {} \;","find Path -type f -iname Regex -exec echo {} \; -exec ls -l {} \;",y,n,y,n,n,n,y,y
"Find all regular files whose names contain a case insensitive pattern composed of space separated positional arguments and display a long listing of them","find . -type f -iname ""*.a"" | xargs -I {} ls -l {}","find Path -type f -iname Regex | xargs -I {} ls -l {}",y,n,y,n,y,n,,
"Find all regular files whose names contain a case insensitive pattern composed of space separated positional arguments and display a long listing of them","find . -type f -iname ""*.a"" -exec md5sum {} \;","find Path -type f -iname Regex -exec md5sum {} \;",n,n,n,n,n,n,,
"Find all SUID set files under current directory and show a few lines of output from the beginning","find . -perm /u=s | head","find Path -perm Permission | head",y,y,y,n,y,y,y,y
"Find all SUID set files under current directory and show a few lines of output from the beginning","find . -perm /u+s | head","find Path -perm Permission | head",y,y,y,y,y,y,y,
"Find all SUID set files under current directory and show a few lines of output from the beginning","find . -perm -u+s | head","find Path -perm -Permission | head",y,y,y,y,y,n,y,y
"find all text files in the current folder","find . -name ""*.txt"" -print","find Path -name Regex -print",y,y,y,y,y,y,,
"find all text files in the current folder","find . -name ""*.txt""","find Path -name Regex",y,y,y,y,y,y,,
"find all text files in the current folder","find . -name ""*.txt"" -exec grep ""__SP__UNK"" {} \;","find Path -name Regex -exec grep Regex {} \;",n,n,n,n,n,n,,
"find all text files in current folder and delete all the files that have the word foo in their name","find . -name ""*.txt"" | xargs -I {} rm {}","find Path -name Regex | xargs -I {} rm {}",n,n,y,n,n,n,n,n
"find all text files in current folder and delete all the files that have the word foo in their name","find . -name ""*.txt"" -exec rm {} \;","find Path -name Regex -exec rm {} \;",n,n,y,n,n,n,n,n
"find all text files in current folder and delete all the files that have the word foo in their name","find . -name ""*.txt"" -exec rm -f {} \;","find Path -name Regex -exec rm -f {} \;",n,n,y,n,n,n,n,n
"find all the text files that have modified in the last 2 days and not modified today","find . -name ""*.txt"" -daystart -mtime -2 -type f -mtime -2","find Path -name Regex -daystart -mtime -Timespan -type f -mtime -Timespan",y,y,y,y,n,n,y,y
"find all the text files that have modified in the last 2 days and not modified today","find . -name ""*.txt"" -daystart -mtime -2 -type f -daystart -mtime -2","find Path -name Regex -daystart -mtime -Timespan -type f -daystart -mtime -Timespan",y,y,y,y,n,n,y,y
"find all the text files that have modified in the last 2 days and not modified today","find . -name ""*.txt"" -daystart -mtime -2 -type f","find Path -name Regex -daystart -mtime -Timespan -type f",y,y,y,y,n,n,y,y
"Find all TXT files that belong to user root","find / -user root -name ""*.txt""","find Path -user Regex -name Regex",y,y,y,y,y,n,y,y
"Find all TXT files that belong to user root","find / -user root -iname ""*.txt""","find Path -user Regex -iname Regex",y,y,y,y,y,y,,
"Find all TXT files that belong to user root","find . -user root -name ""*.txt""","find Path -user Regex -name Regex",y,y,y,y,y,n,y,y
"Find and delete all .zip files in the current directory tree","find . -name ""*.zip"" -exec rm -r -f {} \;","find Path -name Regex -exec rm -r -f {} \;",y,y,y,y,n,n,y,y
"Find and delete all .zip files in the current directory tree","find . -name ""*.zip"" | xargs -I {} rm -r -f {}","find Path -name Regex | xargs -I {} rm -r -f {}",y,y,y,y,n,n,y,y
"Find and delete all .zip files in the current directory tree","find . -name ""*.zip"" -print0 | xargs -0 -I {} rm -r -f {}","find Path -name Regex -print0 | xargs -0 -I {} rm -r -f {}",y,y,y,y,n,n,y,y
"Find and remove the .rhosts file in the /home directory tree","find /home -name ""*.rhosts"" -exec rm -f {} \;","find Path -name Regex -exec rm -f {} \;",n,n,y,y,n,n,n,n
"Find and remove the .rhosts file in the /home directory tree","find /home -name ""*.rhosts"" | xargs -I {} rm {}","find Path -name Regex | xargs -I {} rm {}",n,n,y,y,n,n,n,n
"Find and remove the .rhosts file in the /home directory tree","find /home -name ""*.rhosts"" -exec rm {} \;","find Path -name Regex -exec rm {} \;",n,n,y,y,n,n,n,n
"this find command Substitute space with underscore in the file name replaces space in all the *.mp3 files with _","find /usr/local -name ""*.mp3"" -name ""*.mp3"" -exec rename 's/ /_/g' {} \;","find Path -name Regex -name Regex -exec rename Regex {} \;",y,y,y,n,y,y,y,y
"this find command Substitute space with underscore in the file name replaces space in all the *.mp3 files with _","find /usr/local -name ""*.mp3"" -name ""*.mp3"" -exec grep -l ""_space"" {} \;","find Path -name Regex -name Regex -exec grep -l Regex {} \;",n,n,n,n,n,n,,
"this find command Substitute space with underscore in the file name replaces space in all the *.mp3 files with _","find /usr/local -name ""*.mp3"" -name ""*.mp3"" -exec grep ""_space"" {} \;","find Path -name Regex -name Regex -exec grep Regex {} \;",n,n,n,n,n,n,,
"find directories in the folder /usr/spool/uucp","find /usr/spool/uucp -type d","find Path -type d",y,y,y,y,y,y,,
"find directories in the folder /usr/spool/uucp","find /usr/spool/uucp/uucp -type d","find Path -type d",y,n,y,n,y,n,,
"find directories in the folder /usr/spool/uucp","find /usr/spool/uucp -type d -print","find Path -type d -print",y,y,y,y,y,y,,
"Find empty regular files in /dir and its subdirectories","find /dir -type f -empty","find Path -type f -empty",y,y,y,y,y,y,,
"Find empty regular files in /dir and its subdirectories","find /dir -maxdepth 1 -type f -empty","find Path -maxdepth Quantity -type f -empty",n,n,n,n,n,n,,
"Find empty regular files in /dir and its subdirectories","find /dir -type f -empty -exec ls -l {} \;","find Path -type f -empty -exec ls -l {} \;",y,y,y,y,n,n,y,y
"Find every JavaScript file in the wordpress directory","find /home/pat -name ""*.js""","find Path -name Regex",y,n,y,n,n,n,y,n
"Find every JavaScript file in the wordpress directory","find /home/pat -iname ""*.js""","find Path -iname Regex",y,n,y,n,n,n,y,n
"Find every JavaScript file in the wordpress directory","find wordpress -name *.js","find Path -name Regex",y,n,y,y,n,n,y,n
"find the file ""filename.txt"" in the usr folder","find /etc -name filename.txt","find Path -name Regex",y,n,y,n,y,n,,
"find the file ""filename.txt"" in the usr folder","find /home -name filename.txt","find Path -name Regex",y,n,y,n,y,n,,
"find the file ""filename.txt"" in the usr folder","find /__SP__UNK -name filename.txt","find Path -name Regex",y,n,y,n,y,n,,
"Find files/directories named 'filename' in the entire filesystem","find / -name filename","find Path -name Regex",y,y,y,y,y,y,,
"Find files/directories named 'filename' in the entire filesystem","find / -iname ""filename""","find Path -iname Regex",n,n,n,n,n,n,,
"Find files/directories named 'filename' in the entire filesystem","find / -iname filename","find Path -iname Regex",n,n,n,n,n,n,,
"Find files/directories named 'photo.jpg' in the entire filesystem","find / -name photo.jpg","find Path -name Regex",y,y,y,y,y,y,,
"Find files/directories named 'photo.jpg' in the entire filesystem","find / -name ""photo.jpg""","find Path -name Regex",y,y,y,y,y,y,,
"Find files/directories named 'photo.jpg' in the entire filesystem","find / \( -name photo.jpg -or -name photo.jpg \)","find Path \( -name Regex -or -name Regex \)",y,y,y,y,y,y,,
"Find files/directories named 'somename.txt' under current directory tree","find . -name somename.txt","find Path -name Regex",y,y,y,y,y,y,,
"Find files/directories named 'somename.txt' under current directory tree","find . -name somename.txt -print","find Path -name Regex -print",y,y,y,y,y,y,,
"Find files/directories named 'somename.txt' under current directory tree","find . -iname somename.txt","find Path -iname Regex",n,n,n,n,n,n,,
"Find files in the current directory tree whose names begin with ""file"" and whose size is 0, and remove them","find . -name file* -size +0c -exec rm {} \;","find Path -name Regex -size +Size -exec rm {} \;",y,n,y,n,n,n,y,n
"Find files in the current directory tree whose names begin with ""file"" and whose size is 0, and remove them","find . -name ""file*"" -size +0c -exec rm {} \;","find Path -name Regex -size +Size -exec rm {} \;",y,n,y,n,n,n,y,n
"Find files in the current directory tree whose names begin with ""file"" and whose size is 0, and remove them","find . -name 'file*' -size +0c -exec rm {} \;","find Path -name Regex -size +Size -exec rm {} \;",y,n,y,n,n,n,y,n
"Find files in the current directory tree whose permissions are 775","find . -type f -perm 775 -print","find Path -type f -perm Permission -print",y,y,y,y,y,y,,
"Find files in the current directory tree whose permissions are 775","find . -type f -perm 0777 -print","find Path -type f -perm Permission -print",y,n,y,n,y,n,,
"Find files in the current directory tree whose permissions are 775","find . -perm 775 -print","find Path -perm Permission -print",y,y,y,y,y,y,,
"Find the file whose inode number is 1316256","find . -inum 1316256","find Path -inum Quantity",y,y,y,y,y,y,,
"Find the file whose inode number is 1316256","find . -inum 1316256 -exec ls -l {} \;","find Path -inum Quantity -exec ls -l {} \;",n,n,n,n,n,n,,
"Find the file whose inode number is 1316256","find . -type f -inum 1316256","find Path -type f -inum Quantity",y,y,y,y,y,y,,
"find the file with the name ""file"" in the entire file system","find / -name file -print","find Path -name Regex -print",y,y,y,y,y,y,,
"find the file with the name ""file"" in the entire file system","find / -name file","find Path -name Regex",y,y,y,y,y,y,,
"find the file with the name ""file"" in the entire file system","find / -iname file","find Path -iname Regex",n,n,n,n,n,n,,
"Find the first file/directory in ... directory and quit","find . -name ""*..""","find Path -name Regex",n,n,n,n,n,n,,
"Find the first file/directory in ... directory and quit","find . -name '*..'","find Path -name Regex",n,n,n,n,n,n,,
"Find the first file/directory in ... directory and quit","find . -name '*..' | xargs -I {} tar -c -v -f quit.tar.gz {}","find Path -name Regex | xargs -I {} tar -c -v -f File {}",n,n,n,n,n,n,,
"Finds the folder where temporary files would be written to, and save path to it in a 'TMPDIR' variable.","mktemp -d","mktemp -d",n,n,n,n,n,n,,
"Finds the folder where temporary files would be written to, and save path to it in a 'TMPDIR' variable.","dirname $(mktemp -u -t ""$FILE"")","dirname $( mktemp -u -t Regex )",n,n,n,n,y,n,n,n
"Finds the folder where temporary files would be written to, and save path to it in a 'TMPDIR' variable.","dirname $(dirname ""$1"")","dirname $( dirname Regex )",n,n,n,n,n,n,,
"Find out if there are any files on the system owned by user `account'","find / -user account -print","find Path -user Regex -print",y,y,y,y,y,y,,
"Find out if there are any files on the system owned by user `account'","find / -user account -exec ls -l {} \;","find Path -user Regex -exec ls -l {} \;",n,n,n,n,n,n,,
"Find out if there are any files on the system owned by user `account'","find / -user account","find Path -user Regex",y,y,y,y,y,y,,
"Find PHP files with abstract classes","find . -name \*.php -type f -exec grep -H -n 'abstract' {} \;","find Path -name Regex -type f -exec grep -H -n Regex {} \;",y,n,y,n,n,n,y,y
"Find PHP files with abstract classes","find . -name ""*.php"" -type f -exec ls -l {} \;","find Path -name Regex -type f -exec ls -l {} \;",n,n,n,n,n,n,,
"Find PHP files with abstract classes","find . -name ""*.php"" -type f -exec grep -H -n 'abstract' {} \;","find Path -name Regex -type f -exec grep -H -n Regex {} \;",y,n,y,n,n,n,y,y
"Finds recursively all files in '/path/' excluding folders dir1, dir2 and all like *.dst, that contain 'pattern', and prints matched strings with string number and file name.","grep -r -n -w /path/' /path/' -e 'pattern'","grep -r -n -w Regex -e Regex",n,n,n,n,n,n,,
"Finds recursively all files in '/path/' excluding folders dir1, dir2 and all like *.dst, that contain 'pattern', and prints matched strings with string number and file name.","grep -r -n -w /path/' /path/' -e ""pattern""","grep -r -n -w Regex -e Regex",n,n,n,n,n,n,,
"Finds recursively all files in '/path/' excluding folders dir1, dir2 and all like *.dst, that contain 'pattern', and prints matched strings with string number and file name.","grep -r -n -w ""/path/'/'excludingdir2"" /path/to/dirdir2 /path/to/dirdir","grep -r -n -w Regex File File",n,n,n,n,n,n,,
"Find recursively all files matching pattern 'file??' in the xargstest/ directory and print a sorted list of them","find xargstest/ -name 'file??' | sort | uniq","find Path -name Regex | sort | uniq",y,y,y,y,y,y,,
"Find recursively all files matching pattern 'file??' in the xargstest/ directory and print a sorted list of them","find xargstest/ -name file?? | sort | uniq","find Path -name Regex | sort | uniq",y,y,y,y,y,y,,
"Find recursively all files matching pattern 'file??' in the xargstest/ directory and print a sorted list of them","find xargstest -name file?? | sort | uniq -c","find Path -name Regex | sort | uniq -c",y,n,y,y,n,n,y,n
"Find regular files in the current directory that are writable by at least somebody","find . -type f -perm -somebody","find Path -type f -perm -Permission",n,n,n,n,n,n,,
"Find regular files in the current directory that are writable by at least somebody","find . -type f -perm +111 -print","find Path -type f -perm +Permission -print",y,n,y,n,n,n,y,n
"Find regular files in the current directory that are writable by at least somebody","find . -type f ! -perm -444","find Path -type f ! -perm -Permission",n,n,n,n,n,n,,
"find regular files in the current directory, without descending into sub-directories and display as a null separated list.","find . -maxdepth 1 -type f -print0","find Path -maxdepth Quantity -type f -print0",y,y,y,y,y,y,,
"find regular files in the current directory, without descending into sub-directories and display as a null separated list.","find . -maxdepth 1 -type f -print0 | xargs -0 -I {} echo {}","find Path -maxdepth Quantity -type f -print0 | xargs -0 -I {} echo {}",n,n,n,n,n,n,,
"find regular files in the current directory, without descending into sub-directories and display as a null separated list.","find . -maxdepth 1 -type f -print0 | xargs -0 -n 1 -P 8 -I {} echo {}","find Path -maxdepth Quantity -type f -print0 | xargs -0 -n Quantity -P Quantity -I {} echo {}",n,n,n,n,n,n,,
"Finds strings like ""texthere"" recursively in all files of a current folder regarding all symlinks.","find . -type f -exec grep texthere {} \;","find Path -type f -exec grep Regex {} \;",y,y,y,y,n,n,y,y
"Finds strings like ""texthere"" recursively in all files of a current folder regarding all symlinks.","find . -type f -print0 | xargs -0 -I {} grep texthere {}","find Path -type f -print0 | xargs -0 -I {} grep Regex {}",y,y,y,y,n,n,y,y
"Finds strings like ""texthere"" recursively in all files of a current folder regarding all symlinks.","find . -type f -print0 | xargs -0 -I {} grep ""texthere"" {}","find Path -type f -print0 | xargs -0 -I {} grep Regex {}",y,y,y,y,n,n,y,y
"Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the first dot.","find . -type f -printf ""%T@ %p\n"" | sort -n | tail -n 1 | cut -d ' ' -f 1","find Path -type f -printf ""%T@ %p\n"" | sort -n | tail -n Quantity | cut -d Regex -f Number",n,n,n,n,n,n,,
"Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the first dot.","find . -type f -printf ""%T@ %p\n"" | sort -n | tail - 1 | cut -d ' ' -f 1","find Path -type f -printf ""%T@ %p\n"" | sort -n | tail - Quantity | cut -d Regex -f Number",n,n,n,n,n,n,,
"Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the first dot.","find . -type f -printf '%TY-%Tm-%Td %p\n' | sort -n | tail -n 1","find Path -type f -printf '%TY-%Tm-%Td %p\n' | sort -n | tail -n Quantity",n,n,n,n,n,n,,
"Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the second and third dot.","find . -type f -printf ""%T@ %p\n"" | sort -n | tail -n 1 | cut -d ' ' -f 1","find Path -type f -printf ""%T@ %p\n"" | sort -n | tail -n Quantity | cut -d Regex -f Number",n,n,n,n,n,n,,
"Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the second and third dot.","find . -type f -printf ""%T@ %p\n"" | sort -n | tail - 1 | cut -d ' ' -f 1","find Path -type f -printf ""%T@ %p\n"" | sort -n | tail - Quantity | cut -d Regex -f Number",n,n,n,n,n,n,,
"Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the second and third dot.","find . -type f -printf ""%T@ %p\n"" | sort -n | tail - 1 | cut -f 2- -d "" ""","find Path -type f -printf ""%T@ %p\n"" | sort -n | tail - Quantity | cut -f Number -d Regex",n,n,n,n,n,n,,
"Finds strings with dot-separated sequence of numbers, and prints part of that sequence between the first and second dot.","find . -type f -printf ""%T@ %p\n"" | sort -n | tail - 1 | cut -d ' ' -f 1","find Path -type f -printf ""%T@ %p\n"" | sort -n | tail - Quantity | cut -d Regex -f Number",n,n,n,n,n,n,,
"Finds strings with dot-separated sequence of numbers, and prints part of that sequence between the first and second dot.","find . -type f -printf ""%T@ %p\n"" | sort -n | tail - 1 | cut -f 2- -d "" ""","find Path -type f -printf ""%T@ %p\n"" | sort -n | tail - Quantity | cut -f Number -d Regex",n,n,n,n,n,n,,
"Finds strings with dot-separated sequence of numbers, and prints part of that sequence between the first and second dot.","find . -type f -printf ""%T@ %p\n"" | sort -n | tail -n 1 | cut -d ' ' -f 1","find Path -type f -printf ""%T@ %p\n"" | sort -n | tail -n Quantity | cut -d Regex -f Number",n,n,n,n,n,n,,
"Find symlinks in the current directory tree","find . -type l","find Path -type l",y,y,y,y,y,y,,
"Find symlinks in the current directory tree","find ./ -type l","find Path -type l",y,y,y,y,y,y,,
"Find symlinks in the current directory tree","find ./ -follow -lname ""*""","find Path -follow -lname Regex",n,n,n,n,n,n,,
"Force create a symbolc link named ""softlink_name"" to ""source_file_or_directory_name"" without dereferencing ""softlink_name""","ln -s -f softlink_file_or_directory_name source_file_or_directory_name source_file_or_directory_name","ln -s -f File Regex File",n,n,n,n,n,n,,
"Force create a symbolc link named ""softlink_name"" to ""source_file_or_directory_name"" without dereferencing ""softlink_name""","ln -s -f source_file_or_directory_name source_file_or_directory_name source_file_or_directory_name","ln -s -f File Regex File",n,n,n,n,n,n,,
"Force create a symbolc link named ""softlink_name"" to ""source_file_or_directory_name"" without dereferencing ""softlink_name""","ln -s -f softlink_file_or_directory_name source_file_or_directory_name softlink_file_or_directory_name","ln -s -f File Regex File",n,n,n,n,n,n,,
"Forcefully delete all files in the current directory","find . -exec rm -f {} \;","find Path -exec rm -f {} \;",y,y,y,y,y,y,,
"Forcefully delete all files in the current directory","find . -exec rm {} \;","find Path -exec rm {} \;",n,n,n,n,n,n,,
"Forcefully delete all files in the current directory","find . | xargs -I {} rm -f {}","find Path | xargs -I {} rm -f {}",y,y,y,y,y,y,,
"Format the contents of ""[file]"" in a neat table","cat [file] | column -t","cat File | column -t",y,y,y,y,y,y,,
"Format the contents of ""[file]"" in a neat table","column -t [file]","column -t File",y,y,y,y,y,y,,
"Format the contents of ""[file]"" in a neat table","column -t -s ""[file]"" [file]","column -t -s Regex File",y,n,y,n,n,n,y,y
"Format time string @1267619929 according to default time format","date --date=@1267619929","date --date Regex",y,y,y,y,y,y,y,
"Format time string @1267619929 according to default time format","date --date=@__SP__UNK","date --date Regex",y,n,n,n,y,n,y,n
"Format time string @1267619929 according to default time format","date -d @1267619929","date -d Regex",y,y,y,y,y,y,,
"Forward port 16186 on hello.com to 8888 on localhost using private key ""privatekeystuffdis88s8dsf8h8hsd8fh8d"" for login","ssh -f privatekeystuffdis.com -p ""privatekeystuffdis8888888888888888888888888888888888hsd8fh8fh8d""","ssh -f Regex -p Regex",n,n,n,n,n,n,,
"Forward port 16186 on hello.com to 8888 on localhost using private key ""privatekeystuffdis88s8dsf8h8hsd8fh8d"" for login","ssh -f privatekeystuffdis.com -p ""privatekeystuffdis888888888888888888888888888888888hsd8fh8fh8d""","ssh -f Regex -p Regex",n,n,n,n,n,n,,
"Forward port 16186 on hello.com to 8888 on localhost using private key ""privatekeystuffdis88s8dsf8h8hsd8fh8d"" for login","ssh -f privatekeystuffdis.com -p ""privatekeystuffdis88888888888888888888888888888888888hsd8fh8fh8d""","ssh -f Regex -p Regex",n,n,n,n,n,n,,
"Get domain ""$domain"" IP address","dig ""$domain"" | grep ""$domain""","dig Regex | grep Regex",y,n,y,n,n,n,y,y
"Get domain ""$domain"" IP address","dig ""$domain"" | grep -E ""$domain""","dig Regex | grep -E Regex",y,n,y,n,n,n,y,y
"Get domain ""$domain"" IP address","dig +short ""$domain""","dig Regex Regex",y,y,y,y,y,y,,
"Get domain name of $ip and save it to the variable 'reverse'","$ip | tr 'A-Z' 'a-z'"," | tr Regex Regex",n,n,n,n,n,n,,
"Get domain name of $ip and save it to the variable 'reverse'","$ip | tr 'A-Z' 'reverse'"," | tr Regex Regex",n,n,n,n,n,n,,
"Get domain name of $ip and save it to the variable 'reverse'","$ip | grep PTR | cut -d ' ' -f 1"," | grep Regex | cut -d Regex -f Number",n,n,n,n,n,n,,
"Gets MAC address of p2p0 network interface.","ifconfig p2 | grep -E -o '[[:xdigit:]]{1,2}'","ifconfig Regex | grep -E -o Regex",y,n,y,n,n,n,y,n
"Gets MAC address of p2p0 network interface.","ifconfig p2 | grep -E -o '[[:xdigit:]]{1,2}' | cut -d ' ' -f 9","ifconfig Regex | grep -E -o Regex | cut -d Regex -f Number",y,n,y,n,n,n,y,n
"Gets MAC address of p2p0 network interface.","ifconfig p2 | grep -E -o '[[:xdigit:]]{1,2}0' | cut -d ' ' -f 9","ifconfig Regex | grep -E -o Regex | cut -d Regex -f Number",y,n,y,n,n,n,y,n
"Get second line from text contained in variable $data.","cat $data | grep PTR | cut -d ' ' -f 2 | xargs -I {} grep -H -n ""$data"" {}","cat File | grep Regex | cut -d Regex -f Number | xargs -I {} grep -H -n Regex {}",n,n,n,n,n,n,,
"Get second line from text contained in variable $data.","grep ""$data"" | cut -d "" "" -f 2 | cut -d "" "" -f 2 | cut -d "" "" -f 2 | cut -d "" "" -f 2 | cut -d "" "" -f 1","grep Regex | cut -d Regex -f Number | cut -d Regex -f Number | cut -d Regex -f Number | cut -d Regex -f Number | cut -d Regex -f Number",n,n,n,n,n,n,,
"Get second line from text contained in variable $data.","cut -d "" "" -f 1 | cut -d "" "" -f 2 | cut -d "" "" -f 2 | cut -d "" "" -f 2 | cut -d "" "" -f 2 | cut -d "" ""","cut -d Regex -f Number | cut -d Regex -f Number | cut -d Regex -f Number | cut -d Regex -f Number | cut -d Regex -f Number | cut -d Regex",n,n,n,n,n,n,,
"get year-month-day hour:minute:second from date","date +%Y-%m-%d","date +%Y-%m-%d",n,n,y,n,n,n,n,n
"get year-month-day hour:minute:second from date","date +%Y-%m-%m-%d","date +%Y-%m-%m-%d",n,n,y,n,n,n,n,n
"get year-month-day hour:minute:second from date","date +%Y-%m-%d | tail -n 1","date +%Y-%m-%d | tail -n Quantity",n,n,y,n,n,n,n,n
"Go to directory /cygdrive/c/Program Files (x86) using backslashes to escape special characters","cd /cygdrive/c/Program","cd Directory",y,n,y,n,y,n,,
"Go to directory /cygdrive/c/Program Files (x86) using backslashes to escape special characters","cd $(find /cygdrive/c/Program -maxdepth 1 -type d -exec mv {} /cygdrive/c/Program \;)","cd $( find Path -maxdepth Quantity -type d -exec mv {} File \; )",n,n,n,n,n,n,,
"Go to directory /cygdrive/c/Program Files (x86) using backslashes to escape special characters","cd $(find /cygdrive/c/Program -type d -exec mv {} /cygdrive/c/Program \;)","cd $( find Path -type d -exec mv {} File \; )",n,n,n,n,n,n,,
"Go to directory /cygdrive/c/Program Files (x86) using quotes to escape special characters","cd /cygdrive/c/Program","cd Directory",y,n,y,n,y,n,,
"Go to directory /cygdrive/c/Program Files (x86) using quotes to escape special characters","cd $(find /cygdrive/c/Program -maxdepth 1 -type d -exec mv {} /cygdrive/c/Program \;)","cd $( find Path -maxdepth Quantity -type d -exec mv {} File \; )",n,n,n,n,n,n,,
"Go to directory /cygdrive/c/Program Files (x86) using quotes to escape special characters","cd $(find /cygdrive/c/Program -type d -exec mv {} /cygdrive/c/Program \;)","cd $( find Path -type d -exec mv {} File \; )",n,n,n,n,n,n,,
"Interactively create a symbolic link in the current directory for ""$SCRIPT_DIR/$FILE""","ln -s $SCRIPT_DIR/$FILE $SCRIPT_DIR/$FILE","ln -s File Regex",n,n,n,n,n,y,n,n
"Interactively create a symbolic link in the current directory for ""$SCRIPT_DIR/$FILE""","ln -s -f $SCRIPT_DIR/$FILE $SCRIPT_DIR/$FILE","ln -s -f File Regex",n,n,n,n,n,y,n,n
"Interactively create a symbolic link in the current directory for ""$SCRIPT_DIR/$FILE""","ln -s -f ""$SCRIPT_DIR/$FILE"" $SCRIPT_DIR/$FILE","ln -s -f File Regex",n,n,n,n,n,y,n,n
"Isolate first comma-delimited field of each line in ""file"", discard consecutive duplicates, and search ""file"" for first matching occurrence of that field.","cut -d ' ' -f 1 file | xargs -I {} grep -m 1 -i 'file' {}","cut -d Regex -f Number File | xargs -I {} grep -m Quantity -i Regex {}",n,n,n,n,n,n,,
"Isolate first comma-delimited field of each line in ""file"", discard consecutive duplicates, and search ""file"" for first matching occurrence of that field.","cut -d ' ' -f 1 file | xargs -I {} grep -m 1 'file' {}","cut -d Regex -f Number File | xargs -I {} grep -m Quantity Regex {}",n,n,n,n,n,n,,
"Isolate first comma-delimited field of each line in ""file"", discard consecutive duplicates, and search ""file"" for first matching occurrence of that field.","cut -d ' ' -f 1 file | xargs -n 1 -I {} grep -m 1 'file' {}","cut -d Regex -f Number File | xargs -n Quantity -I {} grep -m Quantity Regex {}",n,n,n,n,n,n,,
"Join columns in ""file1"" and ""file2"" if their first field matches and format the output as a table","join -1 2 -2 1 file1 file2","join -1 Regex -2 Regex File File",n,n,n,n,n,n,,
"Join columns in ""file1"" and ""file2"" if their first field matches and format the output as a table","join -1 2 -2 1 file1 file2 | column -t","join -1 Regex -2 Regex File File | column -t",y,n,y,n,y,n,,
"Join columns in ""file1"" and ""file2"" if their first field matches and format the output as a table","join -1 1 -2 1 file1 file2 | column -t","join -1 Regex -2 Regex File File | column -t",y,y,y,y,y,y,,
"Join comma-separated data in file1 and file2, including extra non-matching information in both files.","join -t , file1 file2","join -t Regex File File",n,n,n,n,n,n,,
"Join comma-separated data in file1 and file2, including extra non-matching information in both files.","join -t , file1 file2 | join -t , <(sort file2)","join -t Regex File File | join -t Regex <( sort File )",n,n,n,n,n,n,,
"Join comma-separated data in file1 and file2, including extra non-matching information in both files.","join -t , file1 file2 | join -v 2 <(sort file2)","join -t Regex File File | join -v Quantity <( sort File )",n,n,n,n,n,n,,
"List .log files from the current directory tree","find . -name ""*.log""","find Path -name Regex",y,y,y,y,y,y,,
"List .log files from the current directory tree","find . -name ""*.log"" | xargs -I {} ls -l {}","find Path -name Regex | xargs -I {} ls -l {}",n,n,y,y,n,n,n,n
"List .log files from the current directory tree","find . -name .log | xargs -I {} ls -l {}","find Path -name Regex | xargs -I {} ls -l {}",n,n,y,y,n,n,n,n
"List all .jpg files in the home directory tree","find ~ -name ""*.jpg""","find Path -name Regex",y,y,y,y,y,y,,
"List all .jpg files in the home directory tree","find ~/ -name '*.jpg' -exec ls {} \;","find Path -name Regex -exec ls {} \;",y,y,y,y,y,y,,
"List all .jpg files in the home directory tree","find ~/ -name '*.jpg' -exec echo {} \;","find Path -name Regex -exec echo {} \;",y,y,y,y,y,y,,
"List all .jpg files in the home directory tree in a fast way","find ~/ -name '*.jpg' -exec echo {} \;","find Path -name Regex -exec echo {} \;",y,y,y,y,y,y,,
"List all .jpg files in the home directory tree in a fast way","find ~/ -name '*.jpg' -print0 | xargs -0 -n 1 -I {} ls {}","find Path -name Regex -print0 | xargs -0 -n Quantity -I {} ls {}",y,y,y,y,y,y,,
"List all .jpg files in the home directory tree in a fast way","find $HOME -name '*.jpg' -print0 | xargs -0 -n 1 -I {} ls {}","find Path -name Regex -print0 | xargs -0 -n Quantity -I {} ls {}",y,y,y,y,y,y,,
"List all .svn files/directories under current directory","find . -name .svn -exec ls -l {} \;","find Path -name Regex -exec ls -l {} \;",n,n,y,y,n,n,n,n
"List all .svn files/directories under current directory","find . -name .svn -exec ls {} \;","find Path -name Regex -exec ls {} \;",y,y,y,y,y,y,,
"List all .svn files/directories under current directory","find . -name .svn | xargs -I {} ls -l {}","find Path -name Regex | xargs -I {} ls -l {}",n,n,y,y,n,n,n,n
"List all files and directories in long list format with a time style of ""long-iso"" and sort from oldest modifed to newest modified","ls -a -l -r -t long-iso | sort | uniq -c","ls -a -l -r -t File | sort | uniq -c",n,n,n,n,n,n,,
"List all files and directories in long list format with a time style of ""long-iso"" and sort from oldest modifed to newest modified","ls -a -l -r -t long-iso | tail -n 1","ls -a -l -r -t File | tail -n Quantity",n,n,n,n,n,n,,
"List all files and directories in long list format with a time style of ""long-iso"" and sort from oldest modifed to newest modified","ls -a -l -r -t long-iso | tail - 1","ls -a -l -r -t File | tail - Quantity",n,n,n,n,n,n,,
"List all files/directories under current directory","find .","find Path",y,y,y,y,y,y,,
"List all files/directories under current directory","find . -print","find Path -print",y,y,y,y,y,y,,
"List all files/directories under current directory","find . -print | xargs -I {} ls {}","find Path -print | xargs -I {} ls {}",n,n,y,y,n,n,n,n
"List all files/directories under current directory with 'FooBar' in their names ensuring white space safety","find . -print0 | grep --null 'FooBar' | xargs -0","find Path -print0 | grep --null Regex | xargs -0",n,n,y,y,n,n,n,n
"List all files/directories under current directory with 'FooBar' in their names ensuring white space safety","find . -name 'FooBar*' -print0 | xargs -0 -I {} ls {}","find Path -name Regex -print0 | xargs -0 -I {} ls {}",n,n,n,n,n,n,,
"List all files/directories under current directory with 'FooBar' in their names ensuring white space safety","find . -name 'FooBar*' -print0","find Path -name Regex -print0",y,n,y,n,y,n,,
"List all files in the current directory tree larger than 1000 kb","find . -size +1000k","find Path -size +Size",y,y,y,y,y,y,,
"List all files in the current directory tree larger than 1000 kb","find . -size +1000k -exec ls -l {} \;","find Path -size +Size -exec ls -l {} \;",n,n,y,y,n,n,n,n
"List all files in the current directory tree larger than 1000 kb","find . -size +1000k -exec ls -l -h {} \;","find Path -size +Size -exec ls -l -h {} \;",n,n,y,y,n,n,n,n
"List all files under current directory with their sizes and paths","find . -type f -printf ""%s %p\n"" | sort -r -n | head -n path","find Path -type f -printf ""%s %p\n"" | sort -r -n | head -n Quantity",n,n,n,n,n,n,,
"List all files under current directory with their sizes and paths","find . -type f -printf ""%s %p\n""","find Path -type f -printf ""%s %p\n""",y,y,y,y,y,y,,
"List all files under current directory with their sizes and paths","find . -type f -printf ""%s %p\n"" | sort -n | head -n path","find Path -type f -printf ""%s %p\n"" | sort -n | head -n Quantity",n,n,n,n,n,n,,
"List all IPV4 addresses found in all files under /etc directory","find /etc -type f -name ""*.4"" -exec grep -l StringBuffer {} \;","find Path -type f -name Regex -exec grep -l Regex {} \;",n,n,n,n,n,n,,
"List all IPV4 addresses found in all files under /etc directory","find /etc -name ""*.4"" -exec grep -l StringBuffer {} \;","find Path -name Regex -exec grep -l Regex {} \;",n,n,n,n,n,n,,
"List all IPV4 addresses found in all files under /etc directory","find /etc -type f -exec grep ""4"" {} \; -exec ls -l {} \;","find Path -type f -exec grep Regex {} \; -exec ls -l {} \;",n,n,n,n,n,n,,
"List all regular files from the current directory tree that were modified less than 60 minutes ago","find . -mmin -60 -type f -ls","find Path -mmin -Quantity -type f -ls",y,y,y,y,y,y,,
"List all regular files from the current directory tree that were modified less than 60 minutes ago","find . -mmin -60 -type f -exec ls -l {} \;","find Path -mmin -Quantity -type f -exec ls -l {} \;",y,y,y,y,n,n,y,y
"List all regular files from the current directory tree that were modified less than 60 minutes ago","find . -mmin -60 -type f -exec ls -l {} +","find Path -mmin -Quantity -type f -exec ls -l {} +",y,y,y,y,n,n,y,y
"List all SGID and SUID files in entire file system","find / -perm +g=s","find Path -perm +Permission",y,y,y,y,y,y,,
"List all SGID and SUID files in entire file system","find / -perm +4000 -exec ls -l {} \;","find Path -perm +Permission -exec ls -l {} \;",n,n,n,n,n,n,,
"List all SGID and SUID files in entire file system","find / -perm +2000 -exec ls -l {} \;","find Path -perm +Permission -exec ls -l {} \;",n,n,n,n,n,n,,
"List files and directories recursively","find .","find Path",y,y,y,y,y,y,,
"List files and directories recursively","find . \( -name '*.list' -or -name '*.list' \)","find Path \( -name Regex -or -name Regex \)",y,n,y,n,n,n,y,n
"List files and directories recursively","find . \( -name '*.list' -or -name '*.list' \) -exec ls -l {} \;","find Path \( -name Regex -or -name Regex \) -exec ls -l {} \;",n,n,n,n,n,n,,
"List files in ""dir1"" that are not in ""dir2""","find dir1 ! -name 'dir2' -exec ls -l {} \;","find Path ! -name Regex -exec ls -l {} \;",n,n,n,n,n,n,,
"List files in ""dir1"" that are not in ""dir2""","find dir1","find Path",n,n,n,n,n,n,,
"List files in ""dir1"" that are not in ""dir2""","find dir1 ! -path ""dir2"" -prune -or -type f -exec ls -l {} \;","find Path ! -path Regex -prune -or -type f -exec ls -l {} \;",n,n,n,n,n,n,,
"List the full path of each directory in the current working directory","tree -d -f -i $(pwd)","tree -d -f -i $( pwd )",y,y,y,y,y,y,,
"List the full path of each directory in the current working directory","ls -d $(pwd)","ls -d $( pwd )",n,n,n,n,n,n,,
"List the full path of each directory in the current working directory","ls -d -l $(pwd)","ls -d -l $( pwd )",n,n,n,n,n,n,,
"list regular files ending in .mbox","find . -type f -name ""*.mbox""","find Path -type f -name Regex",y,y,y,y,n,n,y,y
"list regular files ending in .mbox","find . -type f \( -name ""*.mbox"" -or -name ""*.mbox"" \)","find Path -type f \( -name Regex -or -name Regex \)",y,y,y,y,n,n,y,y
"list regular files ending in .mbox","find . -type f -name ""*.mbox""","find Path -type f -name Regex",y,y,y,y,n,n,y,y
"Locate all *.mov files in the current directory tree","find . -name ""*.mov""","find Path -name Regex",y,y,y,y,y,n,y,y
"Locate all *.mov files in the current directory tree","find . -name *.mov","find Path -name Regex",y,n,y,y,y,n,y,n
"Locate all *.mov files in the current directory tree","find . -iname ""*.mov""","find Path -iname Regex",y,y,y,y,n,n,y,y
"Locate all files in the current directory and below that have ""testfile"" in their names","find . -iname ""*testfile*""","find Path -iname Regex",n,n,n,n,n,n,,
"Locate all files in the current directory and below that have ""testfile"" in their names","find . -name ""*testfile*""","find Path -name Regex",y,y,y,y,y,y,,
"Locate all files in the current directory and below that have ""testfile"" in their names","find . -iname '*testfile*'","find Path -iname Regex",n,n,n,n,n,n,,
"long list the detials of all the shell scripts in current directory","find . -name ""*.sh"" -exec ls -l -d {} \;","find Path -name Regex -exec ls -l -d {} \;",y,y,y,y,y,y,,
"long list the detials of all the shell scripts in current directory","find . -type f -name ""*.script"" -exec ls -l {} \;","find Path -type f -name Regex -exec ls -l {} \;",y,n,y,n,y,n,,
"long list the detials of all the shell scripts in current directory","find . -type d -name "".*"" -exec ls -l {} \;","find Path -type d -name Regex -exec ls -l {} \;",n,n,n,n,y,n,n,n
"looks for all files larger than 10 megabytes (10485760 bytes) within /home","find /home -size +10M -exec ls -l -h {} \;","find Path -size +Size -exec ls -l -h {} \;",y,y,y,y,y,y,,
"looks for all files larger than 10 megabytes (10485760 bytes) within /home","find /home -size +10M","find Path -size +Size",y,y,y,y,y,y,,
"looks for all files larger than 10 megabytes (10485760 bytes) within /home","find /home -size +10M -exec find {} +","find Path -size +Size -exec find {} +",y,y,y,y,n,n,y,y
"Make directory ""/tmp/foo""","mkdir /tmp/foo","mkdir Directory",y,y,y,y,y,y,,
"Make directory ""/tmp/foo""","find /tmp/foo -type d -exec mkdir /tmp/foo {} \;","find Path -type d -exec mkdir Directory {} \;",n,n,n,n,n,n,,
"Make directory ""/tmp/foo""","find /tmp/foo -name ""apt"" -execdir mkdir '/tmp/foo' {} \;","find Path -name Regex -execdir mkdir Directory {} \;",n,n,n,n,n,n,,
"Make directories to ""directory{1..3}/subdirectory{1..3}/subsubdirectory{1..2}"" as needed","mkdir --parents directory{1..3}/subsubdirectory{1..3}/subsubdirectory{1..2} /subsubdirectory{1..3}/subsubdirectory{1..2}","mkdir --parents Directory Directory",y,n,y,n,y,n,,
"Make directories to ""directory{1..3}/subdirectory{1..3}/subsubdirectory{1..2}"" as needed","mkdir --parents directory{1..3}/subdirectory{1..3}/subsubdirectory{1..2} /subsubdirectory{1..3}/subsubdirectory{1..2}","mkdir --parents Directory Directory",y,n,y,n,y,n,,
"Make directories to ""directory{1..3}/subdirectory{1..3}/subsubdirectory{1..2}"" as needed","mkdir --parents directory{1..3}/subsubdirectory{1..3}/subsubdirectory{1..2} /subsubdirectory{1..2}","mkdir --parents Directory Directory",y,n,y,n,y,n,,
"Merge lines from ""file_1"" and ""file_2"" and format the output as a table with tab separators","sort file_1 file_2 | column -t","sort File File | column -t",n,n,n,n,n,n,,
"Merge lines from ""file_1"" and ""file_2"" and format the output as a table with tab separators","sort -u file_1 file_2 | column -t","sort -u File File | column -t",n,n,n,n,n,n,,
"Merge lines from ""file_1"" and ""file_2"" and format the output as a table with tab separators","sort file_1 file_2 | uniq -c","sort File File | uniq -c",n,n,n,n,n,n,,
"Modify interval to 0.1 seconds for the watch command","find . -lname '0.1' -exec mv {} 0.1 \;","find Path -lname Regex -exec mv {} File \;",n,n,n,n,n,n,,
"Modify interval to 0.1 seconds for the watch command","find . -lname '0.1' -exec cp {} 0.1 \;","find Path -lname Regex -exec cp {} File \;",n,n,n,n,n,n,,
"Modify interval to 0.1 seconds for the watch command","find . -lname ""0.1"" -exec mv {} 0.1 \;","find Path -lname Regex -exec mv {} File \;",n,n,n,n,n,n,,
"Mount ""nifs"" filesystem ""/dev/mapper/myldm"" on ""/mnt"" as read only","mount -t nifs none /dev/mapper/myldm /mnt","mount -t nifs Regex Regex Directory",n,n,n,n,n,n,,
"Mount ""nifs"" filesystem ""/dev/mapper/myldm"" on ""/mnt"" as read only","mount -t nifs /dev/mapper/myldm /mnt -t nifs","mount -t nifs Regex Regex -t nifs",n,n,n,n,n,n,,
"Mount ""nifs"" filesystem ""/dev/mapper/myldm"" on ""/mnt"" as read only","mount -t nifs -o /dev/mapper/myldm /mnt -t nifs","mount -t nifs -o /dev/mapper/myldm Regex -t nifs",n,n,n,n,n,n,,
"Mount partition with label ""WHITE"" on ""/mnt/WHITE""","mount /mnt/WHITE -o label,rw","mount Regex -o label,rw",n,n,n,n,n,n,,
"Mount partition with label ""WHITE"" on ""/mnt/WHITE""","mount /mnt/WHITE -o label,__SP__UNK","mount Regex -o label,__SP__UNK",n,n,n,n,n,n,,
"Mount partition with label ""WHITE"" on ""/mnt/WHITE""","mount /mnt/WHITE -o /mnt/WHITE","mount Regex -o /mnt/WHITE",n,n,n,n,n,n,,
"Mount partition with label ""WHITE"" on ""/mnt/WHITE"" with read and write permission and have it accessible by user and group ""test""","mount -L WHITE /mnt/WHITE -o test","mount Regex Regex Directory -o test",n,n,n,n,n,n,,
"Mount partition with label ""WHITE"" on ""/mnt/WHITE"" with read and write permission and have it accessible by user and group ""test""","mount -l -t WHITE /mnt/WHITE test","mount -l -t WHITE Regex Regex",n,n,n,n,n,n,,
"Mount partition with label ""WHITE"" on ""/mnt/WHITE"" with read and write permission and have it accessible by user and group ""test""","mount /mnt/WHITE -o label,rw","mount Regex -o label,rw",n,n,n,n,n,n,,
"Move all *.pdf.marker files and their corresponding *.pdf files under ${INPUT} to ${OUTPUT}","find ${INPUT} -name '*.pdf.marker.marker' -print0 | xargs -0 -I {} mv {} ${OUTPUT}","find Path -name Regex -print0 | xargs -0 -I {} mv {} File",n,n,n,n,n,n,,
"Move all *.pdf.marker files and their corresponding *.pdf files under ${INPUT} to ${OUTPUT}","find ""${INPUT}"" -name ""*.pdf"" -or -name ""*.pdf"" -print0 | xargs -0 -I {} mv {} ${OUTPUT}","find Path -name Regex -or -name Regex -print0 | xargs -0 -I {} mv {} File",y,n,y,n,n,n,y,n
"Move all *.pdf.marker files and their corresponding *.pdf files under ${INPUT} to ${OUTPUT}","find ""${INPUT}"" -name '*.pdf.marker.marker' -print0 | xargs -0 -I {} mv {} ${OUTPUT}","find Path -name Regex -print0 | xargs -0 -I {} mv {} File",n,n,n,n,n,n,,
"Move all files excluding hidden files in ""/path/subfolder/"" to ""/path/""","mv /path/subfolder/.* /path/","mv File File",y,n,y,n,y,n,,
"Move all files excluding hidden files in ""/path/subfolder/"" to ""/path/""","mv /path/subfolder/*.* /path/","mv File File",y,n,y,n,y,n,,
"Move all files excluding hidden files in ""/path/subfolder/"" to ""/path/""","mv /path/subfolder/{.,}* /path/","mv File File",y,n,y,n,y,n,,
"Move each of the directories in /path/to/folders/* to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory then move all *.emlx files into this directory","find /path/to/folders/* -maxdepth 0 -type d -exec mkdir -p {} \;","find Path -maxdepth Quantity -type d -exec mkdir -p {} \;",n,n,n,n,n,n,,
"Move each of the directories in /path/to/folders/* to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory then move all *.emlx files into this directory","find /path/to/folders/* -type d -exec mkdir -p {}/to/folders/* \;","find Path -type d -exec mkdir -p Directory \;",n,n,n,n,n,n,,
"Move each of the directories in /path/to/folders/* to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory then move all *.emlx files into this directory","find /path/to/folders/* -maxdepth 0 -type f -exec mv {} /path/to/folders/* \;","find Path -maxdepth Quantity -type f -exec mv {} File \;",n,n,n,n,n,n,,
"Move files from $sourcePath to $destPath that have not been modified in the last 10 days","mv $sourcePath $sourcePath","mv File File",n,n,n,n,n,n,,
"Move files from $sourcePath to $destPath that have not been modified in the last 10 days","mv $sourcePath $sourcePath $sourcePath","mv File File File",n,n,n,n,n,n,,
"Move files from $sourcePath to $destPath that have not been modified in the last 10 days","mv $sourcePath $sourcePath $destPath","mv File File File",n,n,n,n,n,n,,
"Numerically sort file ""file.dat"" by the second word of each line and output from greatest value to least value","sort file.dat | uniq -c | sort -k 2,2 -r -k 2,2 -n","sort File | uniq -c | sort -k Number -r -k Number -n",n,n,n,n,n,n,,
"Numerically sort file ""file.dat"" by the second word of each line and output from greatest value to least value","sort file.dat | uniq -c | sort -n -r","sort File | uniq -c | sort -n -r",n,n,n,n,n,n,,
"Numerically sort file ""file.dat"" by the second word of each line and output from greatest value to least value","sort file.dat | uniq -c","sort File | uniq -c",n,n,n,n,n,n,,
"Open gcc info manual and select ""option index"" menu entry.","info gcc --index-search=option index","info Regex --index-search Regex Regex",n,n,n,n,n,n,,
"Open gcc info manual and select ""option index"" menu entry.","info gcc --index-search=""option index""","info Regex --index-search Regex",y,y,y,y,y,y,,
"Open gcc info manual and select ""option index"" menu entry.","echo gcc ""option index"" | tr ""\n"" ""option index"" | tr '\n' '\n' | grep -v 'option index'","echo Regex Regex | tr Regex Regex | tr Regex Regex | grep -v Regex",n,n,n,n,n,n,,
"Perform case-insensitive search for file `TeSt123.txt' on the system","find / -iname TeSt123.txt","find Path -iname Regex",y,y,y,y,y,y,,
"Perform case-insensitive search for file `TeSt123.txt' on the system","find / -iname ""TeSt123.txt""","find Path -iname Regex",y,y,y,y,y,y,,
"Perform case-insensitive search for file `TeSt123.txt' on the system","find / -iname 'TeSt123.txt'","find Path -iname Regex",y,y,y,y,y,y,,
"Print ""deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu precise main"" and append to file ""/etc/apt/sources.list""","mv /etc/apt/sources.list /etc/apt/sources.list","mv File File",n,n,n,n,n,n,,
"Print ""deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu precise main"" and append to file ""/etc/apt/sources.list""","echo -e /etc/apt/sources.list | tee /etc/apt/sources.list","echo -e Regex | tee File",n,n,n,n,n,n,,
"Print ""deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu precise main"" and append to file ""/etc/apt/sources.list""","echo -e /etc/apt/sources.list | tee -a /etc/apt/sources.list","echo -e Regex | tee -a File",y,n,y,n,n,n,y,n
"Print 'file' content, formatting output as 29-symbol wide column","cat file | fold -s -w 29","cat File | fold -s -w Quantity",y,y,y,y,n,n,y,y
"Print 'file' content, formatting output as 29-symbol wide column","cat file | fold -w 29","cat File | fold -w Quantity",y,y,y,y,y,y,,
"Print 'file' content, formatting output as 29-symbol wide column","cat file | xargs -n 1 -I {} echo file {}","cat File | xargs -n Quantity -I {} echo Regex {}",n,n,n,n,n,n,,
"Print 1 byte from ""/dev/urandom"" as a signed decimal value and no address radix","od -t x1 -A n /dev/urandom | tr -s ' ' | cut -d ' ' -f 4","od -t x1 -A n File | tr -s Regex | cut -d Regex -f Number",n,n,n,n,n,n,,
"Print 1 byte from ""/dev/urandom"" as a signed decimal value and no address radix","od -t x1 -A n /dev/urandom | tr '\n' '\n'","od -t x1 -A n File | tr Regex Regex",n,n,n,n,n,n,,
"Print 1 byte from ""/dev/urandom"" as a signed decimal value and no address radix","od -t x1 -A n /dev/urandom | tr -d '\n'","od -t x1 -A n File | tr -d Regex",n,n,n,n,n,n,,
"Print a list of all *.code files from the current directory tree","find . -name *.code -exec ls {} \;","find Path -name Regex -exec ls {} \;",n,n,y,y,n,n,n,n
"Print a list of all *.code files from the current directory tree","find . -name *.code -printf '%h\n'","find Path -name Regex -printf '%h\n'",y,n,y,n,y,n,,
"Print a list of all *.code files from the current directory tree","find . -name *.code -exec echo {} \;","find Path -name Regex -exec echo {} \;",y,y,y,y,y,y,,
"Print a list of regular files from directory tree sort_test/ sorted with LC_COLLATE=en_US.UTF-8","find sort_test/sort -type f -exec ls -l {} \;","find Path -type f -exec ls -l {} \;",n,n,n,n,n,n,,
"Print a list of regular files from directory tree sort_test/ sorted with LC_COLLATE=en_US.UTF-8","find sort_test/sort -type f -print0 | xargs -0 -I {} ls -l -d {}","find Path -type f -print0 | xargs -0 -I {} ls -l -d {}",n,n,n,n,n,n,,
"Print a list of regular files from directory tree sort_test/ sorted with LC_COLLATE=en_US.UTF-8","find sort_test/sort -type f -exec echo {} \;","find Path -type f -exec echo {} \;",n,n,n,n,n,n,,
"Print a list of regular files from directory tree sort_test/ sorted with LC_COLLATE=en_US.utf8","find sort_test/sort -type f -exec ls -l {} \;","find Path -type f -exec ls -l {} \;",n,n,n,n,n,n,,
"Print a list of regular files from directory tree sort_test/ sorted with LC_COLLATE=en_US.utf8","find sort_test/sort -type f -print0 | xargs -0 -i -I {} ls -l {} \;","find Path -type f -print0 | xargs -0 -i -I {} ls -l {} File",n,n,n,n,n,n,,
"Print a list of regular files from directory tree sort_test/ sorted with LC_COLLATE=en_US.utf8","find sort_test/sort -type f -exec echo {} \;","find Path -type f -exec echo {} \;",n,n,n,n,n,n,,
"Print a list of unique users who are logged in","who | cut -d ' ' -f 1 | sort -u","who | cut -d Regex -f Number | sort -u",y,y,y,y,y,y,,
"Print a list of unique users who are logged in","who | cut -d ' ' -f 1","who | cut -d Regex -f Number",n,n,n,n,n,n,,
"Print a list of unique users who are logged in","who | cut -d ' ' -f 1 | cut -d ' ' -f 1","who | cut -d Regex -f Number | cut -d Regex -f Number",n,n,n,n,n,n,,
"Print a randomly sorted list of numbers from 1 to 10 to file ""/tmp/lst"" and outputs ""-------"" followed by the reverse list to the screen","seq 1 10 | sort -R | tee /tmp/lst | tee /tmp/lst","seq Number Number | sort -R | tee File | tee File",n,n,n,n,n,n,,
"Print a randomly sorted list of numbers from 1 to 10 to file ""/tmp/lst"" and outputs ""-------"" followed by the reverse list to the screen","seq 10 | sort -R | tee /tmp/lst | tee /tmp/lst","seq Number | sort -R | tee File | tee File",n,n,n,n,n,n,,
"Print a randomly sorted list of numbers from 1 to 10 to file ""/tmp/lst"" and outputs ""-------"" followed by the reverse list to the screen","seq 10 | tee /tmp/lst | tee /tmp/lst","seq Number | tee File | tee File",n,n,n,n,n,n,,
"Print a space separated list of numbers from 1 to 10","seq 1 10 | tr -d ' '","seq Number Number | tr -d Regex",n,n,n,n,y,y,n,n
"Print a space separated list of numbers from 1 to 10","seq 10 | xargs -I {} echo {}","seq Number | xargs -I {} echo {}",n,n,n,n,y,y,n,n
"Print a space separated list of numbers from 1 to 10","seq 1 10 | xargs -I {} echo {}","seq Number Number | xargs -I {} echo {}",n,n,n,n,y,y,n,n
"Print absolute path of ""PATH""","readlink -f PATH","readlink -f File",y,y,y,y,y,y,,
"Print absolute path of ""PATH""","readlink -f $(which PATH)","readlink -f $( which Regex )",n,n,n,n,n,n,,
"Print absolute path of ""PATH""","echo ""PATH"" | readlink -f $(readlink -f ""PATH"" \) \( which PATH)","echo Regex | readlink -f $( readlink -f File File File File File )",n,n,n,n,n,n,,
"Prints all business days in a current month.","cal -h | cut -c 4-__SP__UNK | tail -n +3","cal -h | cut -c Number | tail -n +Quantity",n,n,n,n,y,n,n,n
"Prints all business days in a current month.","cal -h | cut -c 4-__SP__UNK | head -n 1","cal -h | cut -c Number | head -n Quantity",n,n,n,n,n,n,,
"Prints all business days in a current month.","cal -h | cut -c __SP__UNK-20","cal -h | cut -c Number",n,n,n,n,y,n,n,n
"Print common files of directory ""1"" and ""2""","comm -1 -2 <(ls 2)","comm -1 -2 <( ls File )",n,n,n,n,y,y,n,n
"Print common files of directory ""1"" and ""2""","","",n,n,n,n,n,n,n,
"Print common files of directory ""1"" and ""2""","","",n,n,n,n,n,n,n,
"Print the contents of ""order.txt""","cat order.txt","cat File",y,y,y,y,y,y,,
"Print the contents of ""order.txt""","cat order.txt | xargs -n 1 -I {} cat {}","cat File | xargs -n Quantity -I {} cat {}",n,n,n,n,n,n,,
"Print the contents of ""order.txt""","cat order.txt | xargs -I {} cat {}","cat File | xargs -I {} cat {}",n,n,n,n,n,n,,
"Print count of unique lines in all files like 'list_part*'","cat list_part* | wc -l","cat File | wc -l",n,n,n,n,n,n,,
"Print count of unique lines in all files like 'list_part*'","cat list_part* | sort -u | wc -l","cat File | sort -u | wc -l",y,y,y,y,y,y,,
"Print count of unique lines in all files like 'list_part*'","cat list_part* | xargs -L 1 -I {} wc -l {}","cat File | xargs -L Quantity -I {} wc -l {}",n,n,n,n,n,n,,
"Print current date as epoch seconds","date -d $'\n'","date -d Regex",n,n,n,n,n,n,,
"Print current date as epoch seconds","date -u -I $(date -d ""%d"" +%s)","date -u -I $( date -d Regex +%s )",n,n,n,n,n,n,,
"Print current date as epoch seconds","date -u -I $(date +%F)","date -u -I $( date +%F )",n,n,n,n,n,n,,
"Print the current directory tree with the date of last modification for each file or directory","find . -type f -print0 | xargs -0 -I {} echo {}","find Path -type f -print0 | xargs -0 -I {} echo {}",n,n,n,n,n,n,,
"Print the current directory tree with the date of last modification for each file or directory","find . -type f -print0 | xargs -0 -n 1 -I {} echo {}","find Path -type f -print0 | xargs -0 -n Quantity -I {} echo {}",n,n,n,n,n,n,,
"Print the current directory tree with the date of last modification for each file or directory","find . -type f -exec echo {} \;","find Path -type f -exec echo {} \;",n,n,n,n,n,n,,
"Print details for all files in the ./work directory tree with extension .sh that were modified less than 20 days ago","find ./work -name ""*.sh"" -mtime -20 -exec echo {} \;","find Path -name Regex -mtime -Timespan -exec echo {} \;",n,n,n,n,n,n,,
"Print details for all files in the ./work directory tree with extension .sh that were modified less than 20 days ago","find ./work -name ""*.sh"" -mtime -20 -exec cat {} \;","find Path -name Regex -mtime -Timespan -exec cat {} \;",n,n,n,n,n,n,,
"Print details for all files in the ./work directory tree with extension .sh that were modified less than 20 days ago","find ./work -name ""*.sh"" -mtime -20","find Path -name Regex -mtime -Timespan",n,n,n,n,n,n,,
"Print differences between the sorted content of file $1 and file $2, executing 'diff' with options from ""${@:3}"" array slice","diff -q ""$1"" ""${@:3}""","diff -q File File",n,n,n,n,n,n,,
"Print differences between the sorted content of file $1 and file $2, executing 'diff' with options from ""${@:3}"" array slice","diff -q ""$1"" ""${@:3}"" | sort -k 2,2 -r -u","diff -q File File | sort -k Number -r -u",n,n,n,n,n,n,,
"Print differences between the sorted content of file $1 and file $2, executing 'diff' with options from ""${@:3}"" array slice","diff ""$1"" ""${@:3}"" ""${@:3}""","diff File File File",y,n,y,n,n,n,y,y
"Print directories in the the current directory as a list with no report information","ls -d -1 $PWD/**/* | tr '\n' '\n'","ls -d -1 File | tr Regex Regex",n,n,n,n,n,n,,
"Print directories in the the current directory as a list with no report information","ls -1 -b | tr '\n' '\n'","ls -1 -b | tr Regex Regex",n,n,n,n,n,n,,
"Print directories in the the current directory as a list with no report information","ls -d -1 $PWD/** | tr '\n' '\n'","ls -d -1 File | tr Regex Regex",n,n,n,n,n,n,,
"Print each line in ""set1"" and ""set2"" that does not exist in the other","sort set1 set2 | uniq -u","sort File File | uniq -u",n,n,y,y,n,n,n,n
"Print each line in ""set1"" and ""set2"" that does not exist in the other","sort set1 set2 | uniq -d","sort File File | uniq -d",n,n,n,n,n,n,,
"Print each line in ""set1"" and ""set2"" that does not exist in the other","sort set1 set2 | uniq","sort File File | uniq",n,n,n,n,y,y,n,n
"Print the file content of command ""[whatever]""","cat [whatever] | cat","cat File | cat",n,n,n,n,n,n,,
"Print the file content of command ""[whatever]""","cat $(which [whatever])","cat $( which Regex )",y,y,y,y,y,y,,
"Print the file content of command ""[whatever]""","cat [whatever] | xargs -n 1 -I {} cat {}","cat File | xargs -n Quantity -I {} cat {}",n,n,n,n,n,n,,
"Print files created/modified in the last day","find created/modified/modified -printf ""%T@ %p\n"" | sort | tail -n 1","find Path -printf ""%T@ %p\n"" | sort | tail -n Quantity",n,n,n,n,n,n,,
"Print files created/modified in the last day","find created/modified -printf ""%T@ %p\n"" | sort | tail -n 1","find Path -printf ""%T@ %p\n"" | sort | tail -n Quantity",n,n,n,n,n,n,,
"Print files created/modified in the last day","find created/modified/ -mtime +modified -exec ls -l {} \;","find Path -mtime +Timespan -exec ls -l {} \;",n,n,n,n,n,n,,
"Print first 11 characters from $line, print a tab, print the md5 sum of the file specified by the 13th and onward characters from $line and print a null character at end without a trailing new line","echo ""$line"" | fold -w 11 | tr -d '\n'","echo Regex | fold -w Quantity | tr -d Regex",n,n,n,n,n,n,,
"Print first 11 characters from $line, print a tab, print the md5 sum of the file specified by the 13th and onward characters from $line and print a null character at end without a trailing new line","echo ""$line"" | fold -w 11 | cut -c 2- | tr '\n' '\n'","echo Regex | fold -w Quantity | cut -c Number | tr Regex Regex",n,n,n,n,n,n,,
"Print first 11 characters from $line, print a tab, print the md5 sum of the file specified by the 13th and onward characters from $line and print a null character at end without a trailing new line","echo ""$line"" | fold -w 11 | tr '\n' '\n' | tr '\n' '\n'","echo Regex | fold -w Quantity | tr Regex Regex | tr Regex Regex",n,n,n,n,n,n,,
"Print first field from semicolon-seprated line $string.","echo $string | cut -d ';' -f 2","echo Regex | cut -d Regex -f Number",y,n,y,n,y,n,,
"Print first field from semicolon-seprated line $string.","echo $string | cut -d ';' -f 1","echo Regex | cut -d Regex -f Number",y,y,y,y,y,y,,
"Print first field from semicolon-seprated line $string.","head -n 1 $string","head -n Quantity File",n,n,n,n,n,n,,
"Print flow of random data, showing all non-printing characters","cat -v -e data","cat -v -e File",n,n,y,n,n,n,n,n
"Print flow of random data, showing all non-printing characters","cat $(cat /proc/data/* | tr '\n' '\n' '\n' | tr '\n' '\n' '\n')","cat $( cat File | tr Regex Regex Regex | tr Regex Regex Regex )",n,n,n,n,n,n,,
"Print flow of random data, showing all non-printing characters","cat $(cat /proc/data/* | tr '\n' '\n' '\n' | tr '\n' '\n' '\n' | cat)","cat $( cat File | tr Regex Regex Regex | tr Regex Regex Regex | cat )",n,n,n,n,n,n,,
"Print the full path of a file under the current working directory with inode number specified on standard input","find . -inum $inum -exec ls -l {} \;","find Path -inum Quantity -exec ls -l {} \;",n,n,n,n,n,n,,
"Print the full path of a file under the current working directory with inode number specified on standard input","find . -inum $inum -exec ls {} \;","find Path -inum Quantity -exec ls {} \;",n,n,n,n,n,n,,
"Print the full path of a file under the current working directory with inode number specified on standard input","find . -inum $inum -exec readlink {} \;","find Path -inum Quantity -exec readlink {} \;",n,n,n,n,n,n,,
"Print the full path of executable ""lshw""","which lshw","which Regex",y,y,y,y,y,y,,
"Print the full path of executable ""lshw""","readlink -f $(which lshw)","readlink -f $( which Regex )",y,y,y,y,y,y,,
"Print the full path of executable ""lshw""","which lshw | xargs -I {} dirname {}","which Regex | xargs -I {} dirname {}",n,n,n,n,n,n,,
"Prints full path to files with dot in name in a current folder.","ls $(pwd)","ls $( pwd )",n,n,n,n,n,n,,
"Prints full path to files with dot in name in a current folder.","ls -d -1 $PWD/**","ls -d -1 File",y,n,y,n,y,n,,
"Prints full path to files with dot in name in a current folder.","ls $PWD/**","ls File",n,n,n,n,n,n,,
"Print the given file name's extensions.","find . -name ""*.extensions""","find Path -name Regex",n,n,n,n,n,n,,
"Print the given file name's extensions.","echo ""$FILE"" | cut -d "" "" -f 1","echo Regex | cut -d Regex -f Number",y,n,y,n,y,n,,
"Print the given file name's extensions.","echo ""$FILE"" | cut -d ' ' -f 1","echo Regex | cut -d Regex -f Number",y,n,y,n,y,n,,
"Print the largest 20 files under current directory","find . -type f -exec ls -s {} \; | sort -n -r | head - 20","find Path -type f -exec ls -s {} \; | sort -n -r | head - Quantity",y,n,n,n,y,n,y,n
"Print the largest 20 files under current directory","find . -name ""20"" -exec echo {} \;","find Path -name Regex -exec echo {} \;",n,n,n,n,n,n,,
"Print the largest 20 files under current directory","find . -name 20 -type f -exec ls -s {} \; | sort -n -r | head - 20","find Path -name Regex -type f -exec ls -s {} \; | sort -n -r | head - Quantity",n,n,n,n,n,n,,
"Print last 10 commands in history","history | head -n 10","history | head -n Quantity",n,n,n,n,n,n,,
"Print last 10 commands in history","history | head - 10","history | head - Quantity",n,n,n,n,n,n,,
"Print last 10 commands in history","history ""$10""","history Quantity",y,n,y,n,y,n,,
"Print line number of each line in /etc/passwd file, where current user name is found","cut -d ' ' -f 1 /etc/passwd | wc -l","cut -d Regex -f Number File | wc -l",n,n,n,n,n,n,,
"Print line number of each line in /etc/passwd file, where current user name is found","cut -d ' ' -f 1 /etc/passwd | sort | uniq -c","cut -d Regex -f Number File | sort | uniq -c",n,n,n,n,n,n,,
"Print line number of each line in /etc/passwd file, where current user name is found","cut -d ' ' -f 1 /etc/passwd | xargs -L 1 -I {} wc -l {}","cut -d Regex -f Number File | xargs -L Quantity -I {} wc -l {}",n,n,n,n,n,n,,
"Print the list of files in the current directory tree excluding those whose paths contain ""exclude3"" or ""exclude4""","find . ! -path ""*exclude3"" -not -path ""*exclude4*"" -exec grep ""exclude3"" {} \;","find Path ! -path Regex -not -path Regex -exec grep Regex {} \;",n,n,n,n,n,n,,
"Print the list of files in the current directory tree excluding those whose paths contain ""exclude3"" or ""exclude4""","find . ! -path ""*exclude3"" -not -path ""*exclude3"" -exec grep ""exclude3"" {} \;","find Path ! -path Regex -not -path Regex -exec grep Regex {} \;",n,n,n,n,n,n,,
"Print the list of files in the current directory tree excluding those whose paths contain ""exclude3"" or ""exclude4""","find . -not -path '*exclude3*' -not -path '*exclude4*'","find Path -not -path Regex -not -path Regex",y,y,y,y,y,y,,
"Print the list of regular files from the current directory tree that were modified less than 2 days ago","find . -mtime -2 -type f","find Path -mtime -Timespan -type f",y,y,y,y,y,y,,
"Print the list of regular files from the current directory tree that were modified less than 2 days ago","find . -type f -mtime -2","find Path -type f -mtime -Timespan",y,y,y,y,y,y,,
"Print the list of regular files from the current directory tree that were modified less than 2 days ago","find . -daystart -mtime -2 -type f","find Path -daystart -mtime -Timespan -type f",n,n,n,n,n,n,,
"Prints logged in users in sorted order.","w | head -n log | cut -d "" "" -f 1 | sort | uniq","w | head -n Quantity | cut -d Regex -f Number | sort | uniq",n,n,n,n,n,n,,
"Prints logged in users in sorted order.","w | cut -d ' ' -f 1 | sort | uniq","w | cut -d Regex -f Number | sort | uniq",y,y,y,y,y,y,,
"Prints logged in users in sorted order.","w | head - log | cut -f 2- -d "" ""","w | head - Quantity | cut -f Number -d Regex",n,n,n,n,n,n,,
"Prints long listing of the current directory and top-level directories within, sorted from oldest to newest, with appended indicators.","ls -F -l -t -r $(find . -maxdepth 1 -type d -printf ""%P\n"" | sort -n | head - 1 | cut -f 2- -d "" "" | sort)","ls -F -l -t -r $( find Path -maxdepth Quantity -type d -printf ""%P\n"" | sort -n | head - Quantity | cut -f Number -d Regex | sort )",n,n,n,n,n,n,,
"Prints long listing of the current directory and top-level directories within, sorted from oldest to newest, with appended indicators.","ls -F -l -t -r $(find . -maxdepth 1 -type d -printf ""%P\n"" | sort -n | tail - 1 | cut -f 2- -d "" "" | sort)","ls -F -l -t -r $( find Path -maxdepth Quantity -type d -printf ""%P\n"" | sort -n | tail - Quantity | cut -f Number -d Regex | sort )",n,n,n,n,n,n,,
"Prints long listing of the current directory and top-level directories within, sorted from oldest to newest, with appended indicators.","ls -F -l -t -r $(pwd)","ls -F -l -t -r $( pwd )",y,y,y,y,n,n,y,y
"Prints long listing of the current directory, sorted from oldest to newest, with appended indicators.","ls -F -l -t -r $(pwd)","ls -F -l -t -r $( pwd )",y,y,y,y,y,y,,
"Prints long listing of the current directory, sorted from oldest to newest, with appended indicators.","ls -F -l -t -r $(ls -1 | tr '\n' '\n' '\n')","ls -F -l -t -r $( ls -1 | tr Regex Regex Regex )",n,n,n,n,n,n,,
"Prints long listing of the current directory, sorted from oldest to newest, with appended indicators.","ls -F -l -t -r $(ls -1 -t | tr '\n' '\n')","ls -F -l -t -r $( ls -1 -t | tr Regex Regex )",n,n,n,n,n,n,,
"Print the most repeated line in ""list2.txt"" that exists in ""list1.txt"" prefixed by the number of occurrences","comm -1 -3 list1.txt list1.txt","comm -1 -3 File File",n,n,n,n,n,n,,
"Print the most repeated line in ""list2.txt"" that exists in ""list1.txt"" prefixed by the number of occurrences","sort list1.txt list1.txt | uniq -c","sort File File | uniq -c",n,n,n,n,n,n,,
"Print the most repeated line in ""list2.txt"" that exists in ""list1.txt"" prefixed by the number of occurrences","sort list2.txt list1.txt | uniq -c","sort File File | uniq -c",n,n,n,n,n,n,,
"Print the names of the directories from the paths expanded by the glob pattern /path/to/directory/*","find /path/to/directory/* -maxdepth 0 -type d","find Path -maxdepth Quantity -type d",y,y,y,y,y,n,y,y
"Print the names of the directories from the paths expanded by the glob pattern /path/to/directory/*","find /path/to/directory/* -type d -printf ""%P\n""","find Path -type d -printf ""%P\n""",y,y,y,y,y,y,,
"Print the names of the directories from the paths expanded by the glob pattern /path/to/directory/*","find /path/to/directory/* -type d -printf '%p:'","find Path -type d -printf '%p:'",y,n,y,n,y,n,,
"Print nothing because 'MYVAR' string doesn`t match with '/[^/]+:' pattern","echo -e '/[^^/]+:' | xargs -n 1 -I {} echo /[^/]+: {}","echo -e Regex | xargs -n Quantity -I {} echo Regex {}",n,n,n,n,n,n,,
"Print nothing because 'MYVAR' string doesn`t match with '/[^/]+:' pattern","echo -e '/[^^/]+:' | tr '\n' '/[^/]+:'","echo -e Regex | tr Regex Regex",n,n,n,n,n,n,,
"Print nothing because 'MYVAR' string doesn`t match with '/[^/]+:' pattern","echo -n -e '/[^^/]+:' | xargs -n 1 -I {} echo /[^/]+: {}","echo -n -e Regex | xargs -n Quantity -I {} echo Regex {}",n,n,n,n,n,n,,
"Print the number of lines for each *.txt file from the $DIR directory tree","find $DIR -name '*.txt' -print0 | xargs -0 -I {} wc -l {}","find Path -name Regex -print0 | xargs -0 -I {} wc -l {}",y,y,y,y,y,y,,
"Print the number of lines for each *.txt file from the $DIR directory tree","find $DIR -name '*.txt' | xargs -I {} wc -l {}","find Path -name Regex | xargs -I {} wc -l {}",y,y,y,y,y,y,,
"Print the number of lines for each *.txt file from the $DIR directory tree","find $DIR -name ""*.txt"" -exec wc -l {} +","find Path -name Regex -exec wc -l {} +",n,n,y,y,n,n,n,n
"Print only common strings in content of files 'file1.sorted' and 'file2.sorted'","comm -1 -2 file1.sorted file2.sorted","comm -1 -2 File File",y,y,y,y,y,y,,
"Print only common strings in content of files 'file1.sorted' and 'file2.sorted'","cat file1.sorted | sort | uniq -c","cat File | sort | uniq -c",n,n,n,n,n,n,,
"Print only common strings in content of files 'file1.sorted' and 'file2.sorted'","cat file1.sorted | grep -i 'file1.sorted' | cut -d ' ' -f 2","cat File | grep -i Regex | cut -d Regex -f Number",n,n,n,n,n,n,,
"Prints only unique strings of those stored in variables $COMMANDS and $ALIASES.","echo $COMMANDS | cut -d ' ' -f 1 | sort -u","echo Regex | cut -d Regex -f Number | sort -u",n,n,n,n,n,n,,
"Prints only unique strings of those stored in variables $COMMANDS and $ALIASES.","echo $COMMANDS | sort | uniq -c | sort -n","echo Regex | sort | uniq -c | sort -n",n,n,n,n,n,n,,
"Prints only unique strings of those stored in variables $COMMANDS and $ALIASES.","echo ""$COMMANDS"" | cut -d ' ' -f 1 | sort -u","echo Regex | cut -d Regex -f Number | sort -u",n,n,n,n,n,n,,
"Prints sizes of all top-level folders in a current folder with human-readable format and descending order.","ls -1 -b | tr '\n' '\n' | sort -n -r","ls -1 -b | tr Regex Regex | sort -n -r",n,n,n,n,n,n,,
"Prints sizes of all top-level folders in a current folder with human-readable format and descending order.","ls -1 | tee files.txt | xargs -I {} du -c -h {} | tail -n 1","ls -1 | tee File | xargs -I {} du -c -h {} | tail -n Quantity",n,n,n,n,n,n,,
"Prints sizes of all top-level folders in a current folder with human-readable format and descending order.","ls -1 -b | tee files.txt | xargs -I {} du -c -h {} | tail -n 1","ls -1 -b | tee File | xargs -I {} du -c -h {} | tail -n Quantity",n,n,n,n,n,n,,
"Prints string ""0 1 * * * /root/test.sh"" to the terminal, and append it to file '/var/spool/cron/root'","echo /var/spool/test.sh | tee /var/spool/cron/root","echo Regex | tee File",n,n,n,n,n,n,,
"Prints string ""0 1 * * * /root/test.sh"" to the terminal, and append it to file '/var/spool/cron/root'","echo /var/spool/cron.sh | tee /var/spool/cron/root","echo Regex | tee File",n,n,n,n,n,n,,
"Prints string ""0 1 * * * /root/test.sh"" to the terminal, and append it to file '/var/spool/cron/root'","cat /var/spool/test.sh | tee -a /var/spool/cron/root","cat File | tee -a File",n,n,n,n,n,n,,
"Prints strings with text ""texthere"" in all files recursively in a current folder.","find . -name ""*texthere*"" -exec grep ""texthere"" {} +","find Path -name Regex -exec grep Regex {} +",n,n,y,n,n,n,n,n
"Prints strings with text ""texthere"" in all files recursively in a current folder.","find . -name ""*texthere*"" -exec grep ""texthere"" {} \;","find Path -name Regex -exec grep Regex {} \;",n,n,y,n,n,n,n,n
"Prints strings with text ""texthere"" in all files recursively in a current folder.","find . -type f -exec grep -H -n ""texthere"" {} +","find Path -type f -exec grep -H -n Regex {} +",y,n,y,n,n,n,y,y
"Print the text file paths that match 'needle text' in their contents under 'my_folder' recursively","find my_folder -type f -exec grep ""needle text"" {} \;","find Path -type f -exec grep Regex {} \;",n,n,n,n,n,n,,
"Print the text file paths that match 'needle text' in their contents under 'my_folder' recursively","find my_folder -type f -exec grep -l ""needle text"" {} \;","find Path -type f -exec grep -l Regex {} \;",y,y,y,y,y,y,,
"Print the text file paths that match 'needle text' in their contents under 'my_folder' recursively","cat my_folder | grep -E ""needle text""","cat File | grep -E Regex",n,n,n,n,n,n,,
"Print unique lines of sorted ""File 1"" compared with sorted ""File 2""","sort File 1 File 2 | uniq -c","sort File File File File | uniq -c",n,n,n,n,n,n,,
"Print unique lines of sorted ""File 1"" compared with sorted ""File 2""","sort File 1 | uniq -c","sort File File | uniq -c",n,n,n,n,n,n,,
"Print unique lines of sorted ""File 1"" compared with sorted ""File 2""","sort File 1 File 2 | uniq -u","sort File File File File | uniq -u",n,n,n,n,n,n,,
"Print unique lines of sorted file ""A.txt"" compared to sorted file ""B.txt""","comm -2 -3 A.txt B.txt","comm -2 -3 File File",y,y,y,y,y,n,y,y
"Print unique lines of sorted file ""A.txt"" compared to sorted file ""B.txt""","comm -1 -3 A.txt B.txt","comm -1 -3 File File",y,n,y,n,y,n,,
"Print unique lines of sorted file ""A.txt"" compared to sorted file ""B.txt""","comm -2 -3 B.txt B.txt","comm -2 -3 File File",y,n,y,n,y,n,y,
"Prints what day it was 222 days ago","date --date=""222 days ago"" +""%Y""","date --date Regex +""%Y""",y,n,y,n,y,n,,
"Prints what day it was 222 days ago","date --date='222 days ago' '222 days ago'","date --date Regex '222 days ago'",n,n,n,n,y,n,n,n
"Prints what day it was 222 days ago","date --date='222 days ago' '+%Y'","date --date Regex '+%Y'",y,n,y,n,y,n,,
"Print which files differ in ""/tmp/dir1"" and ""/tmp/dir2"" recursively","diff -q -r /tmp/dir1 /tmp/dir2","diff -q -r File File",y,y,y,y,y,y,y,
"Print which files differ in ""/tmp/dir1"" and ""/tmp/dir2"" recursively","diff -r -q /tmp/dir1 /tmp/dir2","diff -r -q File File",y,y,y,y,y,y,,
"Print which files differ in ""/tmp/dir1"" and ""/tmp/dir2"" recursively","diff -q -r /tmp/dir1 /tmp/dir1","diff -q -r File File",y,n,y,y,y,n,y,n
"Print your/dir if it's empty","find your/dir -prune -empty","find Path -prune -empty",y,y,y,y,y,y,,
"Print your/dir if it's empty","find your/dir -prune -empty -type d","find Path -prune -empty -type d",y,y,y,y,y,n,y,y
"Print your/dir if it's empty","find your/dir -prune -empty -type -d","find Path -prune -empty -type -d",y,n,n,n,y,n,y,y
"Process each file beginning with ""file"" in the current directory as an argument to ""bash script.sh""","cat file | xargs -I {} mv {} bash script.sh","cat File | xargs -I {} mv {} File File",n,n,n,n,n,n,,
"Process each file beginning with ""file"" in the current directory as an argument to ""bash script.sh""","cat file | xargs -n 1 -I {} grep ""bash script.sh"" {}","cat File | xargs -n Quantity -I {} grep Regex {}",n,n,n,n,n,n,,
"Process each file beginning with ""file"" in the current directory as an argument to ""bash script.sh""","find . -name file | xargs -I {} grep ""bash script.sh"" {}","find Path -name Regex | xargs -I {} grep Regex {}",n,n,n,n,n,n,,
"Puts the job 1 in the background.","jobs -l","jobs -l",n,n,n,n,n,n,,
"Puts the job 1 in the background.","jobs -l | xargs -I {} rm {}","jobs -l | xargs -I {} rm {}",n,n,n,n,n,n,,
"Puts the job 1 in the background.","jobs -l | xargs -I {} grep ""1"" {}","jobs -l | xargs -I {} grep Regex {}",n,n,n,n,n,n,,
"Read a line from standard input and save each word in the bash array variable ""arr""","read arr","read Regex",n,n,n,n,n,n,,
"Read a line from standard input and save each word in the bash array variable ""arr""","read -a arr","read -a Regex",y,y,y,y,y,y,,
"Read a line from standard input and save each word in the bash array variable ""arr""","read arr | xargs -n 1 -I {} echo -n ""arr"" {}","read Regex | xargs -n Quantity -I {} echo -n Regex {}",n,n,n,n,n,n,,
"Read a line from standard input into variable ""message"" with escaped prompt ""Please Enter a Message: \n\b""","read -p ""Please Enter a Message \\b"" message","read -p Regex Regex",y,n,n,n,y,n,y,n
"Read a line from standard input into variable ""message"" with escaped prompt ""Please Enter a Message: \n\b""","read -p ""Please Enter a Message \n\b"" message","read -p Regex Regex",y,y,n,n,y,y,y,y
"Read a line from standard input into variable ""message"" with escaped prompt ""Please Enter a Message: \n\b""","read -r -p ""Please Enter a Message \\b"" message","read -r -p Regex Regex",n,n,n,n,n,n,,
"Read the first line of output from ""du -s $i"" into variable ""k"" in ksh","read -p ""du -s s $i"" k","read -p Regex Regex",n,n,n,n,n,n,,
"Read the first line of output from ""du -s $i"" into variable ""k"" in ksh","read k","read Regex",n,n,n,n,n,n,,
"Read the first line of output from ""du -s $i"" into variable ""k"" in ksh","read -p ""du -s i"" ""du -s s $i"" k","read -p Regex Regex Regex",n,n,n,n,n,n,,
"Read standard input and replace any repeated characters except spaces with a single instance","read -s -N 1 $(echo -e '\n' | tr '\n' '\n' | tr '\n' '\n')","read -s -N Quantity $( echo -e Regex | tr Regex Regex | tr Regex Regex )",n,n,n,n,n,n,,
"Read standard input and replace any repeated characters except spaces with a single instance","read -s -N $(echo -e '\n' | tr '\n' '\n' | tr '\n' '\n' | tr '\n' ' ')","read -s -N $( echo -e Regex | tr Regex Regex | tr Regex Regex | tr Regex Regex )",n,n,n,n,n,n,,
"Read standard input and replace any repeated characters except spaces with a single instance","read -s -N 1 $(echo -e '\n' | tr '\n' '\n' | tr '\n' '[:instance:]')","read -s -N Quantity $( echo -e Regex | tr Regex Regex | tr Regex Regex )",n,n,n,n,n,n,,
"Read standard input until a null character is found and save the result in variable ""f2""","read -r -n 1 f2","read -r -n Quantity Regex",n,n,n,n,n,n,,
"Read standard input until a null character is found and save the result in variable ""f2""","read -r -d $'\0'","read -r -d Regex",n,n,n,n,n,n,,
"Read standard input until a null character is found and save the result in variable ""f2""","read -r -n 1 -p ""f2"" f2","read -r -n Quantity -p Regex Regex",n,n,n,n,n,n,,
"Recursively changes group ownership of everything within a '/path/to/repo' to 'GROUP'.","chgrp -R GROUP /path/to/repo","chgrp -R Regex File",y,y,y,y,y,y,,
"Recursively changes group ownership of everything within a '/path/to/repo' to 'GROUP'.","chgrp -R GROUP /path/to/repo GROUP","chgrp -R Regex File File",n,n,n,n,n,n,,
"Recursively changes group ownership of everything within a '/path/to/repo' to 'GROUP'.","chgrp -R GROUP /path/to/repo -exec chgrp GROUP /path/to/repo GROUP:GROUP /path/to/repo","chgrp -R Regex File File File File File File File",n,n,n,n,n,n,,
"Recursively changes group ownership of everything within a current folder to 'admin'.","chgrp -R admin .","chgrp -R Regex File",y,y,y,y,y,y,,
"Recursively changes group ownership of everything within a current folder to 'admin'.","chgrp -R admin ./","chgrp -R Regex File",y,y,y,y,y,y,,
"Recursively changes group ownership of everything within a current folder to 'admin'.","ls | xargs -I {} chown -R admin:admin {}","ls | xargs -I {} chown -R Regex {}",y,n,y,n,y,y,y,n
"Recursively change owner of all files in ""folder"" to ""user_name""","chown -R user_name folder","chown -R Regex File",y,y,y,y,y,y,,
"Recursively change owner of all files in ""folder"" to ""user_name""","find user_name -type f -exec chown -R user_name {} \;","find Path -type f -exec chown -R Regex {} \;",y,n,y,n,y,n,,
"Recursively change owner of all files in ""folder"" to ""user_name""","find folder -name ""*user_name"" -exec chown -R user_name {} \;","find Path -name Regex -exec chown -R Regex {} \;",y,n,y,n,n,n,y,n
"Recursively change the owner to ""$USER"" and group to ""$GROUP"" of ""/var/lib/cassandra""","chown -R $USER:$GROUP /var/lib/cassandra","chown -R Regex File",y,y,y,y,y,y,,
"Recursively change the owner to ""$USER"" and group to ""$GROUP"" of ""/var/lib/cassandra""","chown -R $USER:$USER /var/lib/cassandra","chown -R Regex File",y,n,y,n,y,n,,
"Recursively change the owner to ""$USER"" and group to ""$GROUP"" of ""/var/lib/cassandra""","chown -R $GROUP:$GROUP /var/lib/cassandra","chown -R Regex File",y,n,y,n,y,n,,
"Recursively change the owner to ""${JBOSS_USER}"" of ""$JBOSS_LOG_DIR""","chown -R $JBOSS_USER} $JBOSS_LOG_DIR","chown -R Regex File",y,y,y,y,y,y,,
"Recursively change the owner to ""${JBOSS_USER}"" of ""$JBOSS_LOG_DIR""","chown -R ${JBOSS_USER} $JBOSS_LOG_DIR","chown -R Regex File",y,y,y,y,y,y,,
"Recursively change the owner to ""${JBOSS_USER}"" of ""$JBOSS_LOG_DIR""","chown -R $JBOSS_USER} ${JBOSS_USER} $JBOSS_LOG_DIR","chown -R Regex File File",n,n,n,n,n,n,,
"Recursively copy ""emptydir"" to ""destination/newdir""","cp -R emptydir destination/newdir","cp -R File File",y,y,y,y,y,y,,
"Recursively copy ""emptydir"" to ""destination/newdir""","rsync -r -v --exclude=""emptydir"" destination/newdir","rsync -r -v --exclude Regex File",n,n,n,n,n,n,,
"Recursively copy ""emptydir"" to ""destination/newdir""","rsync -r -v -v emptydir destination/newdir --exclude=destination/newdir","rsync -r -v -v File File --exclude Regex",y,n,y,y,n,n,y,n
"Recursively copy /path/foo on host ""prod"" to local directory ""/home/user/Desktop"", connecting as ssh username corresponding to local username.","scp -r prod:/path/foo /home/user/Desktop","scp -r File File",y,y,y,y,y,y,,
"Recursively copy /path/foo on host ""prod"" to local directory ""/home/user/Desktop"", connecting as ssh username corresponding to local username.","scp -r prod:/path/user/Desktop","scp -r File",n,n,n,n,n,n,,
"Recursively copy /path/foo on host ""prod"" to local directory ""/home/user/Desktop"", connecting as ssh username corresponding to local username.","scp -r prod:/path/foo /home/user/Desktop/","scp -r File File",y,y,y,y,y,y,,
"Recursively copy all files with names ending with .txt from dir_1 to the same location within copy_of_dir_1","cp -R dir_1 dir_of_dir_1","cp -R File File",n,n,y,n,n,n,n,n
"Recursively copy all files with names ending with .txt from dir_1 to the same location within copy_of_dir_1","find dir_1 dir_of_dir_1 -type f -exec cp copy_of_dir_1 {} \;","find Path Path -type f -exec cp File {} \;",n,n,n,n,n,n,,
"Recursively copy all files with names ending with .txt from dir_1 to the same location within copy_of_dir_1","find dir_1 copy_1 -type f -name ""*.txt"" -exec cp {} copy_of_dir_1 {} \;","find Path Path -type f -name Regex -exec cp {} File {} \;",n,n,n,n,n,n,,
"Recursively copy local file/directory ""/copy/from/path"" to remote location ""/copy/to/path"" on host ""server"", connecting as ssh user ""user"" and using identity key file ""/path/to/your/.pemkey"" instead of the default in ~/.ssh/","find ~/.ssh/path -type f -exec basename {} \; -exec basename {} \; | grep user@server | cut -d / -f 2- | ssh ~/.ssh/your/","find Path -type f -exec basename {} \; -exec basename {} \; | grep Regex | cut -d Regex -f Number | ssh Regex",n,n,n,n,n,n,,
"Recursively copy local file/directory ""/copy/from/path"" to remote location ""/copy/to/path"" on host ""server"", connecting as ssh user ""user"" and using identity key file ""/path/to/your/.pemkey"" instead of the default in ~/.ssh/","find ~/.ssh/path -iname ""*server*"" -exec grep -q ""user"" {} \; -print","find Path -iname Regex -exec grep -q Regex {} \; -print",n,n,n,n,n,n,,
"Recursively copy local file/directory ""/copy/from/path"" to remote location ""/copy/to/path"" on host ""server"", connecting as ssh user ""user"" and using identity key file ""/path/to/your/.pemkey"" instead of the default in ~/.ssh/","find ~/.ssh/path -type f -exec basename {} \; -exec chown user@server:/to/path {} \;","find Path -type f -exec basename {} \; -exec chown Regex {} \;",n,n,n,n,n,n,,
"Recursively from current folder searches only files that names match "".*xxx"" pattern, ignores binary files and prints file name before every string that contains ""my Text to grep"".","find . -name "".*xxx"" -not -name "".*xxx"" -exec grep ""my Text to grep"" {} \;","find Path -name Regex -not -name Regex -exec grep Regex {} \;",n,n,n,n,n,n,,
"Recursively from current folder searches only files that names match "".*xxx"" pattern, ignores binary files and prints file name before every string that contains ""my Text to grep"".","find . -name '.*xxx' | xargs -I {} grep -i -l 'my Text to grep' {}","find Path -name Regex | xargs -I {} grep -i -l Regex {}",n,n,n,n,n,n,,
"Recursively from current folder searches only files that names match "".*xxx"" pattern, ignores binary files and prints file name before every string that contains ""my Text to grep"".","find . -name "".*xxx"" -not -name "".*xxx"" -exec grep ""my Text to grep"" {} \; -print","find Path -name Regex -not -name Regex -exec grep Regex {} \; -print",n,n,n,n,n,n,,
"recursively look for files ending in either .py or .py.server","find . -type f \( -name ""*.py"" -or -name ""*.py.server"" \)","find Path -type f \( -name Regex -or -name Regex \)",y,y,y,y,n,n,y,y
"recursively look for files ending in either .py or .py.server","find . -type f \( -name ""*.py"" -or -name ""*.py.server"" \) -print","find Path -type f \( -name Regex -or -name Regex \) -print",y,y,y,y,n,n,y,y
"recursively look for files ending in either .py or .py.server","find . \( -name '*.py' -or -name '*.py.server' \) -print","find Path \( -name Regex -or -name Regex \) -print",y,y,y,y,y,y,,
"Recursively print all files and directories in the current directory tree including hidden files","tree .","tree Directory",n,n,n,n,y,y,n,n
"Recursively print all files and directories in the current directory tree including hidden files","tree $(tree -i -f '.*' | grep -v '^$' | cut -d '/' -f 2- | xargs -d '\n' -I {} dirname {})","tree $( tree -i -f Directory | grep -v Regex | cut -d Regex -f Number | xargs -d Regex -I {} dirname {} )",n,n,n,n,n,n,,
"Recursively print all files and directories in the current directory tree including hidden files","tree $(tree -i -f '.*' | grep -v '^$' | cut -d '.' -f -32 | xargs -0 -I {} dirname {})","tree $( tree -i -f Directory | grep -v Regex | cut -d Regex -f -Number | xargs -0 -I {} dirname {} )",n,n,n,n,n,n,,
"Recursively search current directory for all files with name ending with "".t1"", change this to .t2","find . -type f -name ""*.t1"" -exec chown .t2 {} \;","find Path -type f -name Regex -exec chown Regex {} \;",n,n,n,n,n,n,,
"Recursively search current directory for all files with name ending with "".t1"", change this to .t2","find . -name ""*.t1"" -exec chown -R .t2 {} \;","find Path -name Regex -exec chown -R Regex {} \;",n,n,n,n,n,n,,
"Recursively search current directory for all files with name ending with "".t1"", change this to .t2","find . -name ""*.t1"" -exec chown .t2 {} \;","find Path -name Regex -exec chown Regex {} \;",n,n,n,n,n,n,,
"Recursively search for everything under the current directory, displaying human-readable file type description for each entry.","find . -print | xargs -I {} file {}","find Path -print | xargs -I {} file {}",y,y,y,y,y,y,,
"Recursively search for everything under the current directory, displaying human-readable file type description for each entry.","find . -print0 | xargs -0 -I {} file {}","find Path -print0 | xargs -0 -I {} file {}",y,y,y,y,y,y,,
"Recursively search for everything under the current directory, displaying human-readable file type description for each entry.","find . -type f -exec file {} \;","find Path -type f -exec file {} \;",n,n,n,n,y,y,n,n
"Recursively set all permissions under ""../tools"" to 777","chmod 777 ../tools","chmod Permission File",n,n,n,n,n,n,,
"Recursively set all permissions under ""../tools"" to 777","chmod 777 -R ../tools","chmod Permission -R File",y,y,y,y,y,y,,
"Recursively set all permissions under ""../tools"" to 777","chmod -R 777 ../tools","chmod -R Permission File",y,y,y,y,y,y,,
"Recursively set all permissions under ""/whatever/your/directory/is"" to 755","chmod 755 -R /whatever/your/directory/is","chmod Permission -R File",y,y,y,y,y,y,,
"Recursively set all permissions under ""/whatever/your/directory/is"" to 755","chmod 755 /whatever/your/directory/is","chmod Permission File",n,n,n,n,n,n,,
"Recursively set all permissions under ""/whatever/your/directory/is"" to 755","chmod 755 $(chmod 755 /whatever/your/directory/is)","chmod Permission $( chmod Permission File )",n,n,n,n,n,n,,
"Reformat date ""Sat Aug 09 13:37:14 2014 +1100"" according to format string ""%a %b %d %H:%M:%S %Y %z""","echo ""%a %b:14 2014 2014 2014 2014 2014 2014 2014 %Y %z"" | read -t % +","echo Regex | read -t Quantity +",n,n,n,n,n,n,,
"Reformat date ""Sat Aug 09 13:37:14 2014 +1100"" according to format string ""%a %b %d %H:%M:%S %Y %z""","echo ""%a %b:14 2014 2014 2014 2014 2014 2014 2014 %Y %z"" | read -t +","echo Regex | read -t +",n,n,n,n,n,n,,
"Reformat date ""Sat Aug 09 13:37:14 2014 +1100"" according to format string ""%a %b %d %H:%M:%S %Y %z""","echo ""%a %b:14 2014 2014 2014 2014 2014 2014 2014 2014 %Y %z"" | read -t % +","echo Regex | read -t Quantity +",n,n,n,n,n,n,,
"remote copy all text files from one location to another","find . -name ""*.txt"" -exec cp {} /dev/null \;","find Path -name Regex -exec cp {} File \;",n,n,n,n,n,n,,
"remote copy all text files from one location to another","find . -name ""*.txt"" -exec cp {} /tmp \;","find Path -name Regex -exec cp {} File \;",n,n,n,n,n,n,,
"remote copy all text files from one location to another","find . -name ""*.txt"" -exec cp {} /tmp/to/stuff \;","find Path -name Regex -exec cp {} File \;",n,n,n,n,n,n,,
"Remount ""/system"" with read and write permission","mount -o remount,rw /system","mount -o remount,rw Regex",y,y,y,y,y,y,,
"Remount ""/system"" with read and write permission","mount /system -o remount,rw","mount Regex -o remount,rw",y,y,y,y,y,y,,
"Remount ""/system"" with read and write permission","mount -o rw,remount /system","mount -o rw,remount Regex",y,y,y,y,y,y,,
"Remount ""yaffs2"" filesystem ""/dev/block/mtdblk4"" to ""/system"" as read and write only","mount -o remount,ro -t yaffs2 /dev/block/mtdblk4 /system","mount -o remount,ro -t yaffs2 Regex Regex",y,n,y,n,y,n,,
"Remount ""yaffs2"" filesystem ""/dev/block/mtdblk4"" to ""/system"" as read and write only","mount -o rw,remount -t yaffs2 /dev/block/mtdblk4 /system","mount -o rw,remount -t yaffs2 Regex Regex",y,y,y,y,y,y,,
"Remount ""yaffs2"" filesystem ""/dev/block/mtdblk4"" to ""/system"" as read and write only","mount -o remount,ro /dev/block/mtdblk4 /system","mount -o remount,ro Regex Regex",n,n,n,n,n,n,,
"Removes '/var/lib/mongodb/mongod.lock' in 'sudo' mode.","rm -f /var/lib/mongodb/mongod.lock /var/lib/mongodb/mongod.lock","rm -f File File",n,n,n,n,n,n,,
"Removes '/var/lib/mongodb/mongod.lock' in 'sudo' mode.","rm /var/lib/mongodb/mongod.lock /var/lib/mongodb/mongod.lock","rm File File",n,n,n,n,n,n,,
"Removes '/var/lib/mongodb/mongod.lock' in 'sudo' mode.","rm -r -f /var/lib/mongodb/mongod.lock /var/lib/mongodb/mongod.lock","rm -r -f File File",n,n,n,n,n,n,,
"Removes 'foo' file.","rm foo","rm File",y,y,y,y,y,y,,
"Removes 'foo' file.","find . -name foo -exec rm {} \;","find Path -name Regex -exec rm {} \;",n,n,n,n,n,n,,
"Removes 'foo' file.","find foo -type f -exec rm {} \; | tr '\n' 'foo' | xargs -0 -I {} rm {}","find Path -type f -exec rm {} \; | tr Regex Regex | xargs -0 -I {} rm {}",n,n,n,n,n,n,,
"Remove all *.swp files under current directory ensuring white space safety","find . -name ""*.swp"" -print0 | xargs -0 -n 1 -I {} rm {}","find Path -name Regex -print0 | xargs -0 -n Quantity -I {} rm {}",y,y,y,y,y,y,,
"Remove all *.swp files under current directory ensuring white space safety","find . -name ""*.swp"" -print0 | xargs -0 -I {} rm {}","find Path -name Regex -print0 | xargs -0 -I {} rm {}",y,y,y,y,y,y,,
"Remove all *.swp files under current directory ensuring white space safety","find . -name ""*.swp"" | xargs -n 1 -I {} rm {}","find Path -name Regex | xargs -n Quantity -I {} rm {}",n,n,n,n,y,y,n,n
"Remove all .txt files from the /full/path/dir directory tree","find /full/path/dir -name '*.txt' -print0 | xargs -0 -I {} rm {}","find Path -name Regex -print0 | xargs -0 -I {} rm {}",y,y,y,y,y,y,,
"Remove all .txt files from the /full/path/dir directory tree","find /full/path/dir -name '*.txt' | xargs -I {} rm {}","find Path -name Regex | xargs -I {} rm {}",y,y,y,y,y,y,,
"Remove all .txt files from the /full/path/dir directory tree","find /full/path/dir -name ""*.txt"" -print0 | xargs -0 -I {} rm {}","find Path -name Regex -print0 | xargs -0 -I {} rm {}",y,y,y,y,y,y,,
"Remove all directories in and below the current directory","find . -mindepth 1 -maxdepth 1 -type d -exec rm -r -f {} \;","find Path -mindepth Quantity -maxdepth Quantity -type d -exec rm -r -f {} \;",n,n,n,n,n,n,,
"Remove all directories in and below the current directory","find . -type d -exec rm -r -f {} \;","find Path -type d -exec rm -r -f {} \;",y,y,y,y,y,y,,
"Remove all directories in and below the current directory","find . -type d -exec rm -r -f {} +","find Path -type d -exec rm -r -f {} +",y,y,y,y,y,y,,
"Removes all empty folders under path '/foo/bar' and the path itself.","find /foo/bar -type d -empty -exec rmdir {} \;","find Path -type d -empty -exec rmdir {} \;",y,y,y,y,y,y,,
"Removes all empty folders under path '/foo/bar' and the path itself.","find /foo/bar -type d -empty -print0 | xargs -0 -I {} rmdir {}","find Path -type d -empty -print0 | xargs -0 -I {} rmdir {}",y,y,y,y,y,y,,
"Removes all empty folders under path '/foo/bar' and the path itself.","find /foo/bar -maxdepth 1 -type d -empty -exec rmdir {} \;","find Path -maxdepth Quantity -type d -empty -exec rmdir {} \;",n,n,n,n,n,n,,
"Remove all files and directories called ""test"" from the current directory tree","find . -name test -exec rm {} \;","find Path -name Regex -exec rm {} \;",n,n,n,n,y,y,n,n
"Remove all files and directories called ""test"" from the current directory tree","find . -name test -exec rm -r {} \;","find Path -name Regex -exec rm -r {} \;",y,y,y,y,y,y,,
"Remove all files and directories called ""test"" from the current directory tree","find . -name test | xargs -I {} rm {}","find Path -name Regex | xargs -I {} rm {}",n,n,n,n,n,n,,
"Removes all files but $1 newest ones from current folder.","find . -name ""$1"" -exec rm {} \;","find Path -name Regex -exec rm {} \;",n,n,n,n,n,n,,
"Removes all files but $1 newest ones from current folder.","ls -1 | xargs -I {} rm {}","ls -1 | xargs -I {} rm {}",n,n,n,n,n,n,,
"Removes all files but $1 newest ones from current folder.","ls -t $1 | xargs -I {} rm {}","ls -t File | xargs -I {} rm {}",n,n,n,n,n,n,,
"Removes all files from current folder but 3 newest ones","ls -t -r | head -n 3 | xargs -I {} rm {}","ls -t -r | head -n Quantity | xargs -I {} rm {}",y,n,y,n,y,n,,
"Removes all files from current folder but 3 newest ones","ls -t -r | tail -n +3 | xargs -I {} rm {}","ls -t -r | tail -n +Quantity | xargs -I {} rm {}",n,n,n,n,n,n,,
"Removes all files from current folder but 3 newest ones","ls -t -r | tr '\n' '\n' | xargs -0 -I {} rm {}","ls -t -r | tr Regex Regex | xargs -0 -I {} rm {}",n,n,n,n,n,n,,
"Remove all files named `junk' and `dummy'","find / -name junk -exec rm {} \;","find Path -name Regex -exec rm {} \;",n,n,n,n,n,n,,
"Remove all files named `junk' and `dummy'","find / -name junk | xargs -I {} rm {}","find Path -name Regex | xargs -I {} rm {}",n,n,n,n,n,n,,
"Remove all files named `junk' and `dummy'","find . -name junk -exec rm {} \;","find Path -name Regex -exec rm {} \;",n,n,n,n,n,n,,
"Remove all files that end with 'prefs copy' in their names under '/mnt/zip' directory tree","find /mnt/zip -name ""*prefs copy"" -exec rm {} \;","find Path -name Regex -exec rm {} \;",y,y,y,y,y,y,,
"Remove all files that end with 'prefs copy' in their names under '/mnt/zip' directory tree","find /mnt/zip -name '*prefs copy' -exec rm {} \;","find Path -name Regex -exec rm {} \;",y,y,y,y,y,y,,
"Remove all files that end with 'prefs copy' in their names under '/mnt/zip' directory tree","find /mnt/zip -name ""*prefs copy"" -print0 | xargs -0 -I {} rm {}","find Path -name Regex -print0 | xargs -0 -I {} rm {}",y,y,y,y,y,y,,
"remove all the log files which have not been modified in the last 5 days","find . -name ""*.log"" -mtime +5 -exec rm {} \;","find Path -name Regex -mtime +Timespan -exec rm {} \;",y,y,y,y,y,y,,
"remove all the log files which have not been modified in the last 5 days","find ./ -name ""*.log"" -mtime +5 -exec rm {} \;","find Path -name Regex -mtime +Timespan -exec rm {} \;",y,y,y,y,y,y,,
"remove all the log files which have not been modified in the last 5 days","find . -name ""*.log"" -mtime +5 -exec rm -f {} \;","find Path -name Regex -mtime +Timespan -exec rm -f {} \;",y,y,y,y,y,y,,
"Remove all regular files from the current directory tree that were modified a day ago","find . -type f -mtime 1 -exec rm -f {} \;","find Path -type f -mtime Timespan -exec rm -f {} \;",y,y,y,y,y,y,,
"Remove all regular files from the current directory tree that were modified a day ago","find . -type f -mtime 1 -print0 | xargs -0 -I {} rm {}","find Path -type f -mtime Timespan -print0 | xargs -0 -I {} rm {}",y,y,y,y,y,y,,
"Remove all regular files from the current directory tree that were modified a day ago","find . -type f -mtime 1 -exec rm {} \;","find Path -type f -mtime Timespan -exec rm {} \;",y,y,y,y,y,y,,
"Remove all vmware-*.log files/directories under current directory","find . -name vmware-*.log -delete","find Path -name Regex -delete",n,n,y,y,n,n,n,n
"Remove all vmware-*.log files/directories under current directory","find . -name vmware-*.log -exec rm {} \;","find Path -name Regex -exec rm {} \;",n,n,n,n,n,n,,
"Remove all vmware-*.log files/directories under current directory","find . -name vmware-*.log -print0 | xargs -0 -I {} rm {}","find Path -name Regex -print0 | xargs -0 -I {} rm {}",n,n,n,n,n,n,,
"Remove duplicates in variable ""variable"" and preserve the order","echo variable | tr "" "" ""\n"" | tr ' ' '\n' | tr ' ' '\n' | tr '\n' '\n'","echo Regex | tr Regex Regex | tr Regex Regex | tr Regex Regex | tr Regex Regex",n,n,n,n,n,n,,
"Remove duplicates in variable ""variable"" and preserve the order","echo variable | tr "" "" ""\n"" | tr ' ' '\n' | tr ' ' '\n' | tr '\n' ' '","echo Regex | tr Regex Regex | tr Regex Regex | tr Regex Regex | tr Regex Regex",n,n,n,n,n,n,,
"Remove duplicates in variable ""variable"" and preserve the order","echo variable | tr ' ' '\n' | tr ' ' '\n' | tr ' ' '\n' | tr '\n' ' '","echo Regex | tr Regex Regex | tr Regex Regex | tr Regex Regex | tr Regex Regex",n,n,n,n,n,n,,
"Removes empty folder 'symlink'.","rmdir symlink","rmdir Directory",y,y,y,y,y,y,,
"Removes empty folder 'symlink'.","find symlink -type d -exec rmdir symlink {} \;","find Path -type d -exec rmdir Directory {} \;",n,n,n,n,n,n,,
"Removes empty folder 'symlink'.","find symlink -type d -empty -exec rmdir {} \;","find Path -type d -empty -exec rmdir {} \;",n,n,n,n,n,n,,
"Remove files in current directory according to the filenames found in ~/clang+llvm-3.3/bin/","find . -type f -exec basename {} ~/clang+llvm-3.3/bin/ \; | xargs -I {} rm {}","find Path -type f -exec basename {} Regex \; | xargs -I {} rm {}",n,n,n,n,n,n,,
"Remove files in current directory according to the filenames found in ~/clang+llvm-3.3/bin/","find . ~/clang+llvm-3.3/bin/ -type f -exec rm {} \;","find Path Path -type f -exec rm {} \;",n,n,n,n,n,n,,
"Remove files in current directory according to the filenames found in ~/clang+llvm-3.3/bin/","find . ~/clang+llvm-3.3/bin -type f -exec rm {} \;","find Path Path -type f -exec rm {} \;",n,n,n,n,n,n,,
"Removes files ~/.android/adbkey and ~/.android/adbkey.pub without prompting.","rm -v ~/.android/adbkey.pub ~/.android/adbkey/adbkey.pub","rm -v File File",n,n,y,n,n,n,n,n
"Removes files ~/.android/adbkey and ~/.android/adbkey.pub without prompting.","rm -r -f ~/.android/adbkey/adbkey.pub ~/.android/adbkey/adbkey.pub","rm -r -f File File",y,n,y,n,y,n,,
"Removes files ~/.android/adbkey and ~/.android/adbkey.pub without prompting.","rm -v ~/.android/adbkey/adbkey.pub ~/.android/adbkey/adbkey.pub","rm -v File File",n,n,y,n,n,n,n,n
"Remove the first 13 characters of each "".txt"" filename in the ""/tmp"" directory tree and number the output","find /tmp -name ""*.txt"" | xargs -I {} rm {}","find Path -name Regex | xargs -I {} rm {}",n,n,n,n,n,n,,
"Remove the first 13 characters of each "".txt"" filename in the ""/tmp"" directory tree and number the output","find /tmp -type f -name ""*.txt"" -exec rm -f {} \;","find Path -type f -name Regex -exec rm -f {} \;",n,n,n,n,n,n,,
"Remove the first 13 characters of each "".txt"" filename in the ""/tmp"" directory tree and number the output","find /tmp -name .txt | xargs -I {} rm {}","find Path -name Regex | xargs -I {} rm {}",n,n,n,n,n,n,,
"Remove the first 7 characters of every line in the output of ""history""","history | cut -c 8-","history | cut -c Number",y,y,y,y,y,y,y,
"Remove the first 7 characters of every line in the output of ""history""","history | cut -c 1-7","history | cut -c Number",y,n,y,n,y,y,y,n
"Remove the first 7 characters of every line in the output of ""history""","history | head -n 7 | cut -c 8-","history | head -n Quantity | cut -c Number",n,n,n,n,n,n,,
"Remove the last 3 characters from 987654321, keeping only 987654","echo ""$url"" | rev | cut -c 4- | rev","echo Regex | rev | cut -c Number | rev",y,n,y,n,y,n,,
"Remove the last 3 characters from 987654321, keeping only 987654","echo ""__SP__UNK"" | rev | cut -c 4- | rev","echo Regex | rev | cut -c Number | rev",y,n,y,n,y,n,,
"Remove the last 3 characters from 987654321, keeping only 987654","echo ""$url"" | rev | cut -d '/' -f 4- | rev","echo Regex | rev | cut -d Regex -f Number | rev",n,n,n,n,n,n,,
"Removes only lowest level subfolders from current directory tree (folders without files and another folders within).","find . -mindepth subfolders -maxdepth 2 -type d | xargs -I {} rm -r -f {}","find Path -mindepth Quantity -maxdepth Quantity -type d | xargs -I {} rm -r -f {}",n,n,n,n,n,n,,
"Removes only lowest level subfolders from current directory tree (folders without files and another folders within).","find . -mindepth lowest -maxdepth 2 -type d | xargs -I {} rm -r -f {}","find Path -mindepth Quantity -maxdepth Quantity -type d | xargs -I {} rm -r -f {}",n,n,n,n,n,n,,
"Removes only lowest level subfolders from current directory tree (folders without files and another folders within).","find . -mindepth subfolders -maxdepth 3 -type d | xargs -I {} rm -r -f {}","find Path -mindepth Quantity -maxdepth Quantity -type d | xargs -I {} rm -r -f {}",n,n,n,n,n,n,,
"Remove the passphrase from user's ssh key without prompting.","echo ""$ssh"" | tr ' ' '\n' | tr '\n' '\n' | tr '\n' '\n' | tr '\n'","echo Regex | tr Regex Regex | tr Regex Regex | tr Regex Regex | tr Regex",n,n,n,n,n,n,,
"Remove the passphrase from user's ssh key without prompting.","echo ""$ssh"" | tr '\n' '\n' | tr '\n' '\n' | tr '\n' '\n' | tr '\n'","echo Regex | tr Regex Regex | tr Regex Regex | tr Regex Regex | tr Regex",n,n,n,n,n,n,,
"Remove the passphrase from user's ssh key without prompting.","echo ""$ssh"" | tr '\n' '\n' | tr '\n' '\n' | tr ' ' '\n' | tr '\n'","echo Regex | tr Regex Regex | tr Regex Regex | tr Regex Regex | tr Regex",n,n,n,n,n,n,,
"Remove the regular files from the current directory tree that are newer than /tmp/date.start but not newer than /tmp/date.end","find . -type f -newer /tmp/date.start -not -newer /tmp/date.end -delete","find Path -type f -newer File -not -newer File -delete",y,y,y,y,y,y,,
"Remove the regular files from the current directory tree that are newer than /tmp/date.start but not newer than /tmp/date.end","find . -type f -newer /tmp/date.start ! -newer /tmp/date.end -delete","find Path -type f -newer File ! -newer File -delete",y,y,y,y,y,y,,
"Remove the regular files from the current directory tree that are newer than /tmp/date.start but not newer than /tmp/date.end","find . -type f -newer /tmp/date.start -not -newer /tmp/date.end -exec rm {} \;","find Path -type f -newer File -not -newer File -exec rm {} \;",y,y,y,y,y,y,,
"Remove regular files in the current directory tree","find . -type f -exec rm -f {} \;","find Path -type f -exec rm -f {} \;",y,y,y,y,y,y,,
"Remove regular files in the current directory tree","find . -type f -print0 | xargs -0 -I {} rm -f {}","find Path -type f -print0 | xargs -0 -I {} rm -f {}",y,y,y,y,y,y,,
"Remove regular files in the current directory tree","find . -type f -print0 | xargs -0 -I {} rm {}","find Path -type f -print0 | xargs -0 -I {} rm {}",y,y,y,y,y,y,,
"Rename all .html files to .txt","rename 's/\.html$/.txt/' .txt","rename Regex Regex",y,n,y,n,y,n,,
"Rename all .html files to .txt","rename 's/\.html$/.html/' .txt","rename Regex Regex",y,n,y,n,y,n,,
"Rename all .html files to .txt","rename 's/\.html/.html/' .txt","rename Regex Regex",y,n,y,n,y,n,,
"Replace all sequence of 'blank' characters in file 'log' with a single occurence of such symbol and print space-separated fields of each string but first two fields","echo blank | rev | cut -d "" "" -f 1 | rev","echo Regex | rev | cut -d Regex -f Number | rev",n,n,n,n,n,n,,
"Replace all sequence of 'blank' characters in file 'log' with a single occurence of such symbol and print space-separated fields of each string but first two fields","tr 'blank' 'blank' | tr '[:2:]' '[:2:]' | rev | cut -d ' ' -f 1 | rev","tr Regex Regex | tr Regex Regex | rev | cut -d Regex -f Number | rev",n,n,n,n,n,n,,
"Replace all sequence of 'blank' characters in file 'log' with a single occurence of such symbol and print space-separated fields of each string but first two fields","tr 'blank' 'blank' | tr '[:2:]' '[:digit:]' | rev | cut -d ' ' -f 1 | rev","tr Regex Regex | tr Regex Regex | rev | cut -d Regex -f Number | rev",n,n,n,n,n,n,,
"Reports count of characters in the value of ${FOO_NO_LEAD_SPACE} variable as follows: ""length(FOO_NO_LEAD_SPACE)==<counted number of characters>""","echo -e $(echo -n -e ""${FOO_NO_LEAD_SPACE}"" | wc -m)","echo -e $( echo -n -e Regex | wc -m )",y,y,y,y,y,y,,
"Reports count of characters in the value of ${FOO_NO_LEAD_SPACE} variable as follows: ""length(FOO_NO_LEAD_SPACE)==<counted number of characters>""","echo -e $(echo -n -e ""${FOO_NO_LEAD_SPACE_SPACE}"" | wc -m)","echo -e $( echo -n -e Regex | wc -m )",y,n,y,n,y,n,,
"Reports count of characters in the value of ${FOO_NO_LEAD_SPACE} variable as follows: ""length(FOO_NO_LEAD_SPACE)==<counted number of characters>""","echo -e $(echo -e ""${FOO_NO_LEAD_SPACE_SPACE}"" | wc -m)","echo -e $( echo -e Regex | wc -m )",n,n,n,n,n,n,,
"Report file system containing path-to-file disk usage human-readable.","df -h /path/to/file","df -h File",y,n,y,n,y,n,,
"Report file system containing path-to-file disk usage human-readable.","df -h /path/to/-file","df -h File",y,n,y,n,y,n,,
"Report file system containing path-to-file disk usage human-readable.","df -h /path/to/destination-file","df -h File",y,n,y,n,y,n,,
"Report root file system disk usage human-readable.","df -h","df -h",n,n,n,n,n,n,,
"Report root file system disk usage human-readable.","df -P -h | tr -s ' ' ' ' | cut -d ' ' -f 2 | xargs -I {} du -h -h {} | tail -n 1","df -P -h | tr -s Regex Regex | cut -d Regex -f Number | xargs -I {} du -h -h {} | tail -n Quantity",n,n,n,n,n,n,,
"Report root file system disk usage human-readable.","df -P -h | tr -s ' ' | cut -d ' ' -f 2 | xargs -I {} du -h -h {} | tail -n 1","df -P -h | tr -s Regex | cut -d Regex -f Number | xargs -I {} du -h -h {} | tail -n Quantity",n,n,n,n,n,n,,
"Returns 0 if user $1 belongs to group $2.","echo ""$1"" | tr ' ' '\n' | grep -v $2","echo Regex | tr Regex Regex | grep -v Regex",n,n,n,n,n,n,,
"Returns 0 if user $1 belongs to group $2.","echo $1 | tr ' ' '\n' | grep -v $2","echo Regex | tr Regex Regex | grep -v Regex",n,n,n,n,n,n,,
"Returns 0 if user $1 belongs to group $2.","echo ""$1"" | cut -d "" "" -f 2- -d ""$2""","echo Regex | cut -d Regex -f Number -d Regex",n,n,n,n,n,n,,
"return every file that does not have bar somewhere in its full pathname","find / -type f ! -size +somewhere -exec ls -l {} \;","find Path -type f ! -size +Size -exec ls -l {} \;",n,n,n,n,n,n,,
"return every file that does not have bar somewhere in its full pathname","find / -nouser -exec grep ""bar"" {} \;","find Path -nouser -exec grep Regex {} \;",n,n,n,n,n,n,,
"return every file that does not have bar somewhere in its full pathname","find / ! \( -name ""*somewhere*"" -or -name ""*.somewhere"" \)","find Path ! \( -name Regex -or -name Regex \)",y,n,n,n,y,y,y,n
"Run a shell with all environment variables specified in the file 'cronenv' in the user's home directory.","env ~/cronenv","env Program",n,n,n,n,n,n,,
"Run a shell with all environment variables specified in the file 'cronenv' in the user's home directory.","env $HOME cronenv","env Program Program",n,n,n,n,n,n,,
"Run a shell with all environment variables specified in the file 'cronenv' in the user's home directory.","find ~/cronenv -type f -print0 | xargs -0 -I {} grep -m 1 -i 'cronenv' {}","find Path -type f -print0 | xargs -0 -I {} grep -m Quantity -i Regex {}",n,n,n,n,n,n,,
"Save a nginx link to ""/path/to/file"" with the current user and system FQDN host name in variable ""path""","whoami | tee /path/to/file","whoami | tee File",n,n,n,n,n,n,,
"Save a nginx link to ""/path/to/file"" with the current user and system FQDN host name in variable ""path""","hostname -f | tee /path/to/file","hostname -f | tee File",n,n,n,n,n,n,,
"Save a nginx link to ""/path/to/file"" with the current user and system FQDN host name in variable ""path""","readlink -m /path/to/file","readlink -m File",n,n,n,n,n,n,,
"Save a space separated list of process ids of currently running jobs to variable 'bgxjobs'","ps -e -f | tr ' ' '\n' | tr ' ' ' '","ps -e -f | tr Regex Regex | tr Regex Regex",n,n,n,n,n,n,,
"Save a space separated list of process ids of currently running jobs to variable 'bgxjobs'","ps -e -f | tr ' ' '\n' | tr ' ' '\n'","ps -e -f | tr Regex Regex | tr Regex Regex",n,n,n,n,n,n,,
"Save a space separated list of process ids of currently running jobs to variable 'bgxjobs'","ps -e -f | tr ' ' '\n' | tr '\n' ' '","ps -e -f | tr Regex Regex | tr Regex Regex",n,n,n,n,n,n,,
"Save absolute path of the script filename in variable ""MY_PATH""","readlink -f ""${BASH_SOURCE[0]}""","readlink -f File",n,n,n,n,y,n,n,n
"Save absolute path of the script filename in variable ""MY_PATH""","readlink -f ""${BASH_SOURCE[0-9]}""","readlink -f File",n,n,n,n,y,y,n,n
"Save absolute path of the script filename in variable ""MY_PATH""","readlink -f $(readlink -f ""$0"")","readlink -f $( readlink -f File )",n,n,n,n,n,n,,
"Saves calendar of $month, $year in the 'cal' variable.","echo $month | rev | cut -d "" "" -f 2- | rev | cut -d "" "" -f 2- | rev | cut -d "" "" -f 2- | rev","echo Regex | rev | cut -d Regex -f Number | rev | cut -d Regex -f Number | rev | cut -d Regex -f Number | rev",n,n,n,n,n,n,,
"Saves calendar of $month, $year in the 'cal' variable.","dirname $(echo ""$month$year"" | tr '[A-Z]' '[a-z]')","dirname $( echo Regex | tr Regex Regex )",n,n,n,n,n,n,,
"Saves calendar of $month, $year in the 'cal' variable.","echo $month$year | wc -c","echo Regex | wc -c",n,n,n,n,n,n,,
"Save the directory name of the current bash script to variable ""path"" if it is found in one of the directories specified by PATH.","dirname $(readlink -f $0)","dirname $( readlink -f File )",n,n,n,n,n,n,,
"Save the directory name of the current bash script to variable ""path"" if it is found in one of the directories specified by PATH.","dirname $(readlink -f ""$0"")","dirname $( readlink -f File )",n,n,n,n,n,n,,
"Save the directory name of the current bash script to variable ""path"" if it is found in one of the directories specified by PATH.","dirname $(pwd)","dirname $( pwd )",n,n,n,n,n,n,,
"Saves listing of a current folder in 'var' variable.","ls -1","ls -1",n,n,n,n,n,n,,
"Saves listing of a current folder in 'var' variable.","ls -1 | tr '[A-Z]' '[A-Z]' | tr '[A-Z]' '[A-Z]'","ls -1 | tr Regex Regex | tr Regex Regex",n,n,n,n,n,n,,
"Saves listing of a current folder in 'var' variable.","ls -1 | tr '[A-Z]' '[A-Z]' | tr '[A-Z]' '[A-Za-z]'","ls -1 | tr Regex Regex | tr Regex Regex",n,n,n,n,n,n,,
"Saves list of logged in users in system together with 'USER' header in the 'b' variable.","w | cut -d ' ' -f 1","w | cut -d Regex -f Number",n,n,n,n,y,y,n,n
"Saves list of logged in users in system together with 'USER' header in the 'b' variable.","w | cut -d ' ' -f 1 | cut -d ' ' -f 1","w | cut -d Regex -f Number | cut -d Regex -f Number",n,n,n,n,n,n,,
"Saves list of logged in users in system together with 'USER' header in the 'b' variable.","w | cut -d ' ' -f 1 | grep USER","w | cut -d Regex -f Number | grep Regex",n,n,n,n,n,n,,
"Saves number of lines of current directory listing in 'n_max' variable.","cat n_max | wc -l","cat File | wc -l",n,n,n,n,n,n,,
"Saves number of lines of current directory listing in 'n_max' variable.","ls -1 | grep n_max | wc -l","ls -1 | grep Regex | wc -l",n,n,n,n,n,n,,
"Saves number of lines of current directory listing in 'n_max' variable.","ls | grep ""n_max"" | wc -l","ls | grep Regex | wc -l",n,n,n,n,n,n,,
"Search the ""your/dir"" directory for empty subdirectories","find your/dir -prune -empty","find Path -prune -empty",n,n,n,n,n,n,,
"Search the ""your/dir"" directory for empty subdirectories","find your/dir -prune -empty -type d","find Path -prune -empty -type d",n,n,n,n,n,n,,
"Search the ""your/dir"" directory for empty subdirectories","find your/dir -type d -empty","find Path -type d -empty",y,y,y,y,y,y,,
"Search the `images' directory tree for regular files","find images -type f","find Path -type f",y,y,y,y,y,y,,
"Search the `images' directory tree for regular files","find images -type f -exec grep -l 'images' {} \;","find Path -type f -exec grep -l Regex {} \;",n,n,n,n,n,n,,
"Search the `images' directory tree for regular files","find images -type f -exec grep ""images"" {} \;","find Path -type f -exec grep Regex {} \;",n,n,n,n,n,n,,
"Search the /Path directory tree for files matching pattern ""file_name*"" and containing ""bar"" in their pathnames","find /Path -name ""file_name*"" | xargs -I {} grep bar {}","find Path -name Regex | xargs -I {} grep Regex {}",n,n,n,n,n,n,,
"Search the /Path directory tree for files matching pattern ""file_name*"" and containing ""bar"" in their pathnames","find /Path -name ""file_name*"" -exec grep -l bar {} \;","find Path -name Regex -exec grep -l Regex {} \;",n,n,n,n,n,n,,
"Search the /Path directory tree for files matching pattern ""file_name*"" and containing ""bar"" in their pathnames","find /Path -name ""file_name*"" | xargs -I {} grep -l bar {}","find Path -name Regex | xargs -I {} grep -l Regex {}",n,n,n,n,n,n,,
"Search the /path directory tree for files matching pattern '*.foo'","find /path -name '*.foo'","find Path -name Regex",y,y,y,y,y,y,,
"Search the /path directory tree for files matching pattern '*.foo'","find /path -name *.foo","find Path -name Regex",y,y,y,y,y,y,,
"Search the /path directory tree for files matching pattern '*.foo'","find /path -name ""*.foo""","find Path -name Regex",y,y,y,y,y,y,,
"Search /usr/local recursively for directories whose names end with a number 0-9","find /usr/local -name ""*.0-9""","find Path -name Regex",n,n,n,n,n,n,,
"Search /usr/local recursively for directories whose names end with a number 0-9","find /usr/local -name ""*.a-9-9""","find Path -name Regex",n,n,n,n,n,n,,
"Search /usr/local recursively for directories whose names end with a number 0-9","find /usr/local -name ""*.0-9"" -type d","find Path -name Regex -type d",y,n,y,n,n,n,y,n
"Search all .java files residing in the current directory tree and modified at least 7 days ago for string ""swt""","find . -name ""*.java"" -mtime +7 -exec echo {} swt \;","find Path -name Regex -mtime +Timespan -exec echo {} Regex \;",n,n,n,n,n,n,,
"Search all .java files residing in the current directory tree and modified at least 7 days ago for string ""swt""","find . -name ""*.java"" -mtime 7 -exec echo {} swt \;","find Path -name Regex -mtime Timespan -exec echo {} Regex \;",n,n,n,n,n,n,,
"Search all .java files residing in the current directory tree and modified at least 7 days ago for string ""swt""","find . -name ""*.java"" -mtime +7 -exec echo {} \; | xargs -I {} echo 7 {}","find Path -name Regex -mtime +Timespan -exec echo {} \; | xargs -I {} echo Regex {}",n,n,n,n,n,n,,
"Search  all directory from /usr downwards for files whose inode number is 1234 and print them .","find /usr -inum 1234","find Path -inum Quantity",y,y,y,y,y,y,,
"Search  all directory from /usr downwards for files whose inode number is 1234 and print them .","find / -name '1234????????????????????????????????????????????????'","find Path -name Regex",n,n,n,n,n,n,,
"Search  all directory from /usr downwards for files whose inode number is 1234 and print them .","find / -name '1234?????????????????????????????????????????????????'","find Path -name Regex",n,n,n,n,n,n,,
"Search  all files & directoy from root directory which  are greater then 100M and delete them .","find / -size +100M -exec rm -r -f {} \;","find Path -size +Size -exec rm -r -f {} \;",y,y,y,y,y,y,,
"Search  all files & directoy from root directory which  are greater then 100M and delete them .","find / -size +100M -delete","find Path -size +Size -delete",n,n,y,y,n,n,n,n
"Search  all files & directoy from root directory which  are greater then 100M and delete them .","find / -name ""directoym"" -exec rm {} \;","find Path -name Regex -exec rm {} \;",n,n,n,n,n,n,,
"Search all files in the current directory tree that are named ""whatever"" for ""whatever""","find . -name ""whatever"" -print","find Path -name Regex -print",n,n,n,n,n,n,,
"Search all files in the current directory tree that are named ""whatever"" for ""whatever""","find . -name ""whatever"" -exec grep -l whatever {} \;","find Path -name Regex -exec grep -l Regex {} \;",n,n,y,y,n,n,n,n
"Search all files in the current directory tree that are named ""whatever"" for ""whatever""","find . -name ""whatever*"" -print","find Path -name Regex -print",n,n,n,n,n,n,,
"Search all files in the current directory tree whose names contain ""."" for ""SearchString""","find . -name '*.[ch]' | xargs -I {} grep SearchString {}","find Path -name Regex | xargs -I {} grep Regex {}",y,n,y,n,y,n,n,
"Search all files in the current directory tree whose names contain ""."" for ""SearchString""","find . -name '*.*' | xargs -I {} grep SearchString {}","find Path -name Regex | xargs -I {} grep Regex {}",n,n,y,y,n,n,n,n
"Search all files in the current directory tree whose names contain ""."" for ""SearchString""","find . -name '*.*' -exec grep SearchString {} \;","find Path -name Regex -exec grep Regex {} \;",n,n,y,y,n,n,n,n
"search all files in the current folder which match the regular expression","find . -regex "".*/my.*p.$""","find Path -regex Regex",y,n,y,n,n,n,y,n
"search all files in the current folder which match the regular expression","find . -regex "".*\.\(expression\|__SP__UNK\)""","find Path -regex Regex",y,n,y,n,n,n,y,n
"search all files in the current folder which match the regular expression","find . -regex '.*\(net\|__SP__UNK\)$'","find Path -regex Regex",y,n,y,n,n,n,y,n
"search all jpg images in current folder and rename them","find . -name \*.jpg -type f -exec mv {} ./ \;","find Path -name Regex -type f -exec mv {} File \;",y,n,y,n,n,n,y,n
"search all jpg images in current folder and rename them","find . -name \*.jpg -type f -exec mv {} .. \;","find Path -name Regex -type f -exec mv {} File \;",y,n,y,n,n,n,y,n
"search all jpg images in current folder and rename them","find . -name ""*.jpg"" -type f -exec mv {} ./ \;","find Path -name Regex -type f -exec mv {} File \;",y,n,y,n,n,n,y,n
"Search all non-hidden files in the current directory and all non-hidden sub-directories for the file hi.dat.","find . -name hi.dat","find Path -name Regex",n,n,n,n,n,n,,
"Search all non-hidden files in the current directory and all non-hidden sub-directories for the file hi.dat.","find . -name hi.dat -exec grep hi.dat {} \;","find Path -name Regex -exec grep Regex {} \;",n,n,n,n,n,n,,
"Search all non-hidden files in the current directory and all non-hidden sub-directories for the file hi.dat.","find . \( -name hi.dat -or -name hi.dat \)","find Path \( -name Regex -or -name Regex \)",n,n,n,n,n,n,,
"Search the bla directory recursively for *.so files","find bla -type f -name ""*.so""","find Path -type f -name Regex",y,y,y,y,y,y,,
"Search the bla directory recursively for *.so files","find bla -name *.so","find Path -name Regex",y,y,y,y,y,y,,
"Search the bla directory recursively for *.so files","find bla bla -name *.so","find Path Path -name Regex",y,n,n,n,y,n,y,n
"Search the current directory and all of its sub-directory for any PDF files being careful to prevent the shell from expanding anything in '*.pdf'  before it'ss passed to find.","find . -name ""*.pdf"" -exec grep ""ss.pdf"" {} \; -print","find Path -name Regex -exec grep Regex {} \; -print",n,n,n,n,n,n,,
"Search the current directory and all of its sub-directory for any PDF files being careful to prevent the shell from expanding anything in '*.pdf'  before it'ss passed to find.","find . -name ""*.pdf"" -print | xargs -I {} grep ""ss.pdf"" {}","find Path -name Regex -print | xargs -I {} grep Regex {}",n,n,n,n,n,n,,
"Search the current directory and all of its sub-directory for any PDF files being careful to prevent the shell from expanding anything in '*.pdf'  before it'ss passed to find.","find . -name ""*.pdf"" -exec grep ""ss.pdf"" {} \;","find Path -name Regex -exec grep Regex {} \;",n,n,n,n,n,n,,
"Search the current directory recursively for files containing ""needle text""","find . -exec grep -l ""needle text"" {} \;","find Path -exec grep -l Regex {} \;",y,y,y,y,y,y,,
"Search the current directory recursively for files containing ""needle text""","find . -type f -exec grep -i -l ""needle text"" {} \;","find Path -type f -exec grep -i -l Regex {} \;",n,n,n,n,n,n,,
"Search the current directory recursively for files containing ""needle text""","find . -type f -exec grep -l ""needle text"" {} \;","find Path -type f -exec grep -l Regex {} \;",y,y,y,y,y,y,,
"Search the current directory recursively for regular files last modified more than 2 days ago","find . type -f -mtime +2","find Path Path -f -mtime +Timespan",y,y,y,y,y,y,,
"Search the current directory recursively for regular files last modified more than 2 days ago","find . | xargs -I {} find . -type f -mtime +2 | xargs -I {} find {} -type f -mtime +2","find Path | xargs -I {} find Path -type f -mtime +Timespan | xargs -I {} find {} -type f -mtime +Timespan",n,n,n,n,n,n,,
"Search the current directory recursively for regular files last modified more than 2 days ago","find . | xargs -0 -I {} find . -type f -mtime +2 | xargs -I {} find {} -type f -mtime +2","find Path | xargs -0 -I {} find Path -type f -mtime +Timespan | xargs -I {} find {} -type f -mtime +Timespan",n,n,n,n,n,n,,
"Search the current directory tree for all regular non-hidden files except *.o","find . -type f -not -name ""*.o"" ! -name *.o","find Path -type f -not -name Regex ! -name Regex",y,n,y,n,n,n,y,n
"Search the current directory tree for all regular non-hidden files except *.o","find . -type f -not -path '*.o' ! -path '*.o'","find Path -type f -not -path Regex ! -path Regex",n,n,y,n,n,n,n,n
"Search the current directory tree for all regular non-hidden files except *.o","find . -type f -not -name ""*.o"" ! -path ""*.o"" ! -name ""*.o""","find Path -type f -not -name Regex ! -path Regex ! -name Regex",n,n,y,n,n,n,n,n
"Search the current directory tree for files whose names begin with ""my"" and end with ""p"" followed by any character, ignoring path names containing ""test""","find . -name ""my*"" -not -path ""*/test/*""","find Path -name Regex -not -path Regex",y,n,y,n,n,n,y,n
"Search the current directory tree for files whose names begin with ""my"" and end with ""p"" followed by any character, ignoring path names containing ""test""","find . -name 'my*' -not -regex '.*p.*'","find Path -name Regex -not -regex Regex",y,n,y,n,n,n,y,n
"Search the current directory tree for files whose names begin with ""my"" and end with ""p"" followed by any character, ignoring path names containing ""test""","find . -name ""my*"" -type f -print0 | xargs -0 -n 1 -I {} grep test {}","find Path -name Regex -type f -print0 | xargs -0 -n Quantity -I {} grep Regex {}",n,n,n,n,n,n,,
"Search the current directory tree for files whose name is "".note"", case insensitive","find . -iname "".note""","find Path -iname Regex",y,y,y,y,y,y,,
"Search the current directory tree for files whose name is "".note"", case insensitive","find . -iname '.note'","find Path -iname Regex",y,y,y,y,y,y,,
"Search the current directory tree for files whose name is "".note"", case insensitive","find . -iname '.note' | xargs -i -I {} grep -i '.note' {}","find Path -iname Regex | xargs -i -I {} grep -i Regex {}",n,n,n,n,n,n,,
"Search the current directory tree for files whose names do not end in "".exe"" and "".dll""","find . ! -name ""*.exe"" -not -name ""*.dll""","find Path ! -name Regex -not -name Regex",y,y,y,y,y,y,,
"Search the current directory tree for files whose names do not end in "".exe"" and "".dll""","find . -not -name ""*.exe"" -not -name ""*.dll""","find Path -not -name Regex -not -name Regex",y,y,y,y,y,y,,
"Search the current directory tree for files whose names do not end in "".exe"" and "".dll""","find . ! \( -name ""*.exe"" -or -name ""*.dll"" \) -print","find Path ! \( -name Regex -or -name Regex \) -print",y,y,y,y,y,y,,
"Search the current directory tree for symbolic links named ""link1""","find . -lname ""link1""","find Path -lname Regex",n,n,n,n,n,n,,
"Search the current directory tree for symbolic links named ""link1""","find . -lname 'link1'","find Path -lname Regex",n,n,n,n,n,n,,
"Search the current directory tree for symbolic links named ""link1""","find . -lname 'link1' -exec ln -s {} /dev/null \;","find Path -lname Regex -exec ln -s {} Regex \;",n,n,n,n,n,n,,
"Search directory trees foo and bar for .java files","find foo -name ""*.java""","find Path -name Regex",n,n,n,n,n,n,,
"Search directory trees foo and bar for .java files","find foo barbar -name '*.java'","find Path Path -name Regex",y,n,y,n,y,n,,
"Search directory trees foo and bar for .java files","find foo -type f -name ""*.java""","find Path -type f -name Regex",n,n,n,n,n,n,,
"Search the entire file hierarchy for files ending in '.old' and delete them.","find / -name ""*.old"" -exec rm -f {} \;","find Path -name Regex -exec rm -f {} \;",y,y,y,y,y,y,,
"Search the entire file hierarchy for files ending in '.old' and delete them.","find / -name *.old -exec rm {} \;","find Path -name Regex -exec rm {} \;",y,y,y,y,y,y,,
"Search the entire file hierarchy for files ending in '.old' and delete them.","find / -name *.old -exec rm -f {} \;","find Path -name Regex -exec rm -f {} \;",y,y,y,y,y,y,,
"Search the files from the current directory tree for ""foo""","find . -exec grep foo {} +","find Path -exec grep Regex {} +",y,y,y,y,y,y,,
"Search the files from the current directory tree for ""foo""","find . | xargs -I {} grep foo {}","find Path | xargs -I {} grep Regex {}",y,y,y,y,y,y,,
"Search the files from the current directory tree for ""foo""","find . | xargs -I {} grep ""foo"" {}","find Path | xargs -I {} grep Regex {}",y,y,y,y,y,y,,
"Search for 'Text To Find' in all regular files under current directory tree and show the matched files","find . -type f -exec grep -l 'Text To Find' {} +","find Path -type f -exec grep -l Regex {} +",y,y,y,y,y,y,,
"Search for 'Text To Find' in all regular files under current directory tree and show the matched files","find . -type f -exec grep -l ""Text To Find"" {} \;","find Path -type f -exec grep -l Regex {} \;",y,y,y,y,y,y,,
"Search for 'Text To Find' in all regular files under current directory tree and show the matched files","find . -type f -exec grep -l 'Text To Find' {} \;","find Path -type f -exec grep -l Regex {} \;",y,y,y,y,y,y,,
"Search for 'birthday' (case insensitive) in all regular files under ~/Documents directory tree and show only the filenames","find ~/Documents -type f -exec grep birthday {} \;","find Path -type f -exec grep Regex {} \;",n,n,n,n,n,n,,
"Search for 'birthday' (case insensitive) in all regular files under ~/Documents directory tree and show only the filenames","find ~/Documents -type f -exec grep birthday {} \; -print","find Path -type f -exec grep Regex {} \; -print",n,n,n,n,n,n,,
"Search for 'birthday' (case insensitive) in all regular files under ~/Documents directory tree and show only the filenames","find ~/Documents -type f -exec grep birthday {} \; -exec grep -H -n 'birthday' {} \;","find Path -type f -exec grep Regex {} \; -exec grep -H -n Regex {} \;",n,n,n,n,n,n,,
"Search for 'foo' in all the java files under 'dir1', 'dir2' and 'dir3' directory tree and print only the names of the matched files","find dir1 dir3 -name '*.java' | xargs -I {} grep foo {}","find Path Path -name Regex | xargs -I {} grep Regex {}",n,n,n,n,n,n,,
"Search for 'foo' in all the java files under 'dir1', 'dir2' and 'dir3' directory tree and print only the names of the matched files","find dir1 dir2 dir3 -name '*.java' | xargs -I {} grep foo {}","find Path Path Path -name Regex | xargs -I {} grep Regex {}",n,n,n,n,n,n,,
"Search for 'foo' in all the java files under 'dir1', 'dir2' and 'dir3' directory tree and print only the names of the matched files","find dir1 dir2 -name '*.java' -exec grep -H -n 'foo' {} \;","find Path Path -name Regex -exec grep -H -n Regex {} \;",n,n,n,n,n,n,,
"Search for 'string-to-find' in all HTML files under current directory tree and show the matched lines with their filenames","find . -name ""*.html"" -exec grep -H -n ""string-to-find"" {} \;","find Path -name Regex -exec grep -H -n Regex {} \;",n,n,y,y,n,n,n,n
"Search for 'string-to-find' in all HTML files under current directory tree and show the matched lines with their filenames","find . -name ""*.html"" -exec grep -H ""string-to-find"" {} \;","find Path -name Regex -exec grep -H Regex {} \;",y,y,y,y,y,y,,
"Search for 'string-to-find' in all HTML files under current directory tree and show the matched lines with their filenames","find . -name \*.html -type f -exec grep -H -n 'string-to-find' {} \;","find Path -name Regex -type f -exec grep -H -n Regex {} \;",y,y,y,y,n,n,y,y
"Search for 'stuff' in all *,txt files under current directory","find . -name ""*txt"" -print | xargs -I {} grep stuff {}","find Path -name Regex -print | xargs -I {} grep Regex {}",y,n,y,n,y,n,,
"Search for 'stuff' in all *,txt files under current directory","find . -name ""*txt"" -exec grep ""stuff"" {} \;","find Path -name Regex -exec grep Regex {} \;",y,n,y,n,y,n,,
"Search for 'stuff' in all *,txt files under current directory","find . -name ""*txt"" -exec grep -l stuff {} \;","find Path -name Regex -exec grep -l Regex {} \;",n,n,n,n,y,n,n,n
"Search for .pdf files","find . -name ""*.pdf""","find Path -name Regex",y,y,y,y,y,y,,
"Search for .pdf files","find . -name ""*.pdf"" -print","find Path -name Regex -print",y,y,y,y,y,y,,
"Search for .pdf files","find . -name ""*.pdf"" -exec grep ""__SP__UNK"" {} \;","find Path -name Regex -exec grep Regex {} \;",n,n,n,n,n,n,,
"Search for Subscription.java under current directory, and go to directory containing it.","cd $(find . -name Subscription.java | xargs -I {} dirname {})","cd $( find Path -name Regex | xargs -I {} dirname {} )",y,y,y,y,n,n,y,y
"Search for Subscription.java under current directory, and go to directory containing it.","cd $(find . -name ""Subscription.java"" | xargs -I {} dirname {})","cd $( find Path -name Regex | xargs -I {} dirname {} )",y,y,y,y,n,n,y,y
"Search for Subscription.java under current directory, and go to directory containing it.","cd $(find . -name 'Subscription.java' | xargs -I {} dirname {})","cd $( find Path -name Regex | xargs -I {} dirname {} )",y,y,y,y,n,n,y,y
"search for all ""tif"" images in current folder","find . -iname ""*tif*""","find Path -iname Regex",n,n,y,n,n,n,n,n
"search for all ""tif"" images in current folder","find . -iname '*tif*'","find Path -iname Regex",n,n,y,n,n,n,n,n
"search for all ""tif"" images in current folder","find . -iname '*.tif'","find Path -iname Regex",n,n,y,y,n,n,n,n
"Search for all .mp3 files in the /mnt/usb directory tree","find /mnt/usb -name *.mp3","find Path -name Regex",y,y,y,y,y,y,,
"Search for all .mp3 files in the /mnt/usb directory tree","find /mnt/usb -iname *.mp3","find Path -iname Regex",y,n,y,y,n,n,y,n
"Search for all .mp3 files in the /mnt/usb directory tree","find /mnt/usb -name '*.mp3'","find Path -name Regex",y,y,y,y,y,y,,
"Search for all files in the current directory recursively whose names contain ""linkin park"", ignoring the case","find . -iname ""*linkin park*""","find Path -iname Regex",y,y,y,y,y,y,,
"Search for all files in the current directory recursively whose names contain ""linkin park"", ignoring the case","find . -iname '*linkin park*'","find Path -iname Regex",y,y,y,y,y,y,,
"Search for all files in the current directory recursively whose names contain ""linkin park"", ignoring the case","find . -iname ""*linkin park*"" -exec grep -i -l ""linkin park"" {} \;","find Path -iname Regex -exec grep -i -l Regex {} \;",n,n,n,n,n,n,,
"search for all the files in the folder /data/images which have been modified after /tmp/start and before /tmp/end","find /data/images -newer /tmp/start -newer /tmp/start","find Path -newer File -newer File",n,n,n,n,n,n,,
"search for all the files in the folder /data/images which have been modified after /tmp/start and before /tmp/end","find /data/images -newer /tmp/start -newer /tmp/end","find Path -newer File -newer File",n,n,n,n,n,n,,
"search for all the files in the folder /data/images which have been modified after /tmp/start and before /tmp/end","find /data/images -newer /tmp/start /tmp/end","find Path -newer File Path",n,n,n,n,n,n,,
"Search for the case insensitive regex 'STRING_TO_SEARCH_FOR' in all files under current directory","find . -iname ""STRING_TO_SEARCH_FOR"" -exec grep -i ""STRING_TO_SEARCH_FOR"" {} \;","find Path -iname Regex -exec grep -i Regex {} \;",n,n,y,n,n,n,n,n
"Search for the case insensitive regex 'STRING_TO_SEARCH_FOR' in all files under current directory","find . -iname ""STRING_TO_SEARCH_FOR""","find Path -iname Regex",n,n,n,n,n,n,,
"Search for the case insensitive regex 'STRING_TO_SEARCH_FOR' in all files under current directory","find . -iname ""STRING_TO_SEARCH_FOR"" -exec grep -i ""STRING_TO_SEARCH_FOR"" {} +","find Path -iname Regex -exec grep -i Regex {} +",n,n,y,n,n,n,n,n
"search for the file ""job.history"" in the folder /data/Spoolln and search for multiple patterns in the file and display the count of matched lines along with the pattern","find /data/Spoolln -name job.history | wc -l","find Path -name Regex | wc -l",n,n,n,n,n,n,,
"search for the file ""job.history"" in the folder /data/Spoolln and search for multiple patterns in the file and display the count of matched lines along with the pattern","find /data/Spoolln -name job.history -exec grep -H ""job.history"" {} \; | wc -l","find Path -name Regex -exec grep -H Regex {} \; | wc -l",n,n,n,n,n,n,,
"search for the file ""job.history"" in the folder /data/Spoolln and search for multiple patterns in the file and display the count of matched lines along with the pattern","find /data/Spoolln -name job.history | xargs -I {} wc -l {}","find Path -name Regex | xargs -I {} wc -l {}",n,n,n,n,n,n,,
"search for the file ""name_to_find"" in the home folder","find ~ -name name_to_find","find Path -name Regex",y,y,y,y,y,y,,
"search for the file ""name_to_find"" in the home folder","find ~ -name ""name_to_find""","find Path -name Regex",y,y,y,y,y,y,,
"search for the file ""name_to_find"" in the home folder","find ~ -name 'name_to_find'","find Path -name Regex",y,y,y,y,y,y,,
"search for the file, filename.txt in the folder /home","find /home -name filename.txt","find Path -name Regex",y,y,y,y,y,y,,
"search for the file, filename.txt in the folder /home","find /home -iname filename.txt","find Path -iname Regex",n,n,n,n,n,n,,
"search for the file, filename.txt in the folder /home","find /home -type f -name filename.txt","find Path -type f -name Regex",y,y,y,y,y,y,,
"Search for the regex $greppattern in all files with '.c' or '.h' extension under $searchpath with name pattern $filepat and show the matched line numbers, file names and matched lines","find ""$searchpath"" -name ""*.c"" | xargs -I {} grep -H -n ""$greppattern"" {} | wc -l","find Path -name Regex | xargs -I {} grep -H -n Regex {} | wc -l",n,n,n,n,n,n,,
"Search for the regex $greppattern in all files with '.c' or '.h' extension under $searchpath with name pattern $filepat and show the matched line numbers, file names and matched lines","find ""$searchpath"" -name ""*.c"" -print0 | xargs -0 -I {} grep -H -n ""$greppattern"" {} | wc -l","find Path -name Regex -print0 | xargs -0 -I {} grep -H -n Regex {} | wc -l",n,n,n,n,n,n,,
"Search for the regex $greppattern in all files with '.c' or '.h' extension under $searchpath with name pattern $filepat and show the matched line numbers, file names and matched lines","find ""$searchpath"" -name ""*.c"" -print0 | xargs -0 -I {} grep -H -n ""$greppattern"" {} | head -n 1","find Path -name Regex -print0 | xargs -0 -I {} grep -H -n Regex {} | head -n Quantity",n,n,n,n,n,n,,
"Search for the string 'magic' in all regular files under current directory tree and display long listing of them","find . -type f -exec grep -l magic {} \; -exec ls -l {} \;","find Path -type f -exec grep -l Regex {} \; -exec ls -l {} \;",y,y,y,y,y,y,y,
"Search for the string 'magic' in all regular files under current directory tree and display long listing of them","find . -type f -exec grep -l magic {} \; -exec echo {} \; -exec ls -l {} \;","find Path -type f -exec grep -l Regex {} \; -exec echo {} \; -exec ls -l {} \;",y,n,y,y,n,n,y,n
"Search for the string 'magic' in all regular files under current directory tree and display long listing of them","find . -type f -exec grep -l 'magic' {} \; -exec ls -l {} \;","find Path -type f -exec grep -l Regex {} \; -exec ls -l {} \;",y,n,y,y,n,n,y,n
"search for text files in the current folder which have write access to others","find . -perm -__SP__UNK -name ""*.txt""","find Path -perm -Permission -name Regex",n,n,n,n,n,n,,
"search for text files in the current folder which have write access to others","find . -perm /a=x | xargs -I {} grep ""__SP__UNK"" {}","find Path -perm Permission | xargs -I {} grep Regex {}",n,n,n,n,n,n,,
"search for text files in the current folder which have write access to others","find . -perm -__SP__UNK -name ""*.txt"" -print","find Path -perm -Permission -name Regex -print",n,n,n,n,n,n,,
"search for the word ""foo"" in all the regular/normal files in the directory ""/path/to/dir""","find /path/to/dir -type f -exec grep foo {} +","find Path -type f -exec grep Regex {} +",y,y,y,n,y,y,y,y
"search for the word ""foo"" in all the regular/normal files in the directory ""/path/to/dir""","find /path/to/dir -type f -exec grep -l foo {} +","find Path -type f -exec grep -l Regex {} +",n,n,n,n,y,y,n,n
"search for the word ""foo"" in all the regular/normal files in the directory ""/path/to/dir""","find /path/to/dir -name ""*foo*"" -type f -exec grep ""foo"" {} \;","find Path -name Regex -type f -exec grep Regex {} \;",y,n,y,n,n,n,y,n
"search for the word ""foo"" in all the regular/normal files with the name ""file-pattern"" in the directory ""/path/to/dir""","find /path/to/dir -name ""file-pattern"" -type f | xargs -I {} grep -l ""foo"" {}","find Path -name Regex -type f | xargs -I {} grep -l Regex {}",n,n,n,n,y,y,n,n
"search for the word ""foo"" in all the regular/normal files with the name ""file-pattern"" in the directory ""/path/to/dir""","find /path/to/dir -name ""file-pattern"" -type f -exec grep ""foo"" {} \;","find Path -name Regex -type f -exec grep Regex {} \;",y,y,y,n,y,y,y,y
"search for the word ""foo"" in all the regular/normal files with the name ""file-pattern"" in the directory ""/path/to/dir""","find /path/to/dir -name ""file-pattern"" -type f -exec grep foo {} \;","find Path -name Regex -type f -exec grep Regex {} \;",y,y,y,n,y,y,y,y
"search for the word text in all the python files in the current folder","find . -name ""*.py"" | xargs -I {} grep ""text"" {}","find Path -name Regex | xargs -I {} grep Regex {}",n,n,y,n,n,n,n,n
"search for the word text in all the python files in the current folder","find . -name '*.py' | xargs -I {} grep ""text"" {}","find Path -name Regex | xargs -I {} grep Regex {}",n,n,y,n,n,n,n,n
"search for the word text in all the python files in the current folder","find . -name '*.py' | xargs -I {} grep 'text' {}","find Path -name Regex | xargs -I {} grep Regex {}",n,n,y,n,n,n,n,n
"search in the current folder for the files that begin with ""myletter""","find . -name myletter*","find Path -name Regex",y,y,y,y,y,y,,
"search in the current folder for the files that begin with ""myletter""","find . -name myletter\*","find Path -name Regex",y,y,y,y,y,y,,
"search in the current folder for the files that begin with ""myletter""","find . -name 'myletter*'","find Path -name Regex",y,y,y,y,y,y,,
"Searches the manual page names and descriptions","apropos descriptions","apropos Regex",n,n,y,n,n,n,n,n
"Searches the manual page names and descriptions","apropos $(find . -name '[__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK]')","apropos $( find Path -name Regex )",n,n,n,n,n,n,,
"Searches the manual page names and descriptions","apropos $(find . -name '[__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK][__SP__UNK]')","apropos $( find Path -name Regex )",n,n,n,n,n,n,,
"Search the system for directories named ""needle""","find / -type d -name ""needle""","find Path -type d -name Regex",y,y,y,y,y,y,,
"Search the system for directories named ""needle""","find / -name needle -type d","find Path -name Regex -type d",y,y,y,y,y,y,,
"Search the system for directories named ""needle""","find / -type d -name needle","find Path -type d -name Regex",y,y,y,y,y,y,,
"Search the system for the file “testfile.txt” ignoring the case","find / -iname testfile.txt","find Path -iname Regex",y,y,y,y,y,y,,
"Search the system for the file “testfile.txt” ignoring the case","find / -iname ""testfile.txt""","find Path -iname Regex",y,y,y,y,y,y,,
"Search the system for the file “testfile.txt” ignoring the case","find / -iname 'testfile.txt'","find Path -iname Regex",y,y,y,y,y,y,,
"Send 4 ping packets of size 2 to ""www.google.com"" on a Solaris machine","ping -c 2 -t 2 www.google.com","ping -c Quantity -t Timespan Regex",n,n,n,n,n,n,,
"Send 4 ping packets of size 2 to ""www.google.com"" on a Solaris machine","ping -c 2 www.google.com | grep -E ""www.google.com""","ping -c Quantity Regex | grep -E Regex",n,n,n,n,n,n,,
"Send 4 ping packets of size 2 to ""www.google.com"" on a Solaris machine","ping -c 2 www.google.com | grep ""www.google.com""","ping -c Quantity Regex | grep Regex",n,n,n,n,n,n,,
"Set 644 permission to all regular files under current directory","find . -type f -exec chmod 644 {} +","find Path -type f -exec chmod Permission {} +",y,y,y,y,y,y,,
"Set 644 permission to all regular files under current directory","find . -type f -exec chmod 644 {} \;","find Path -type f -exec chmod Permission {} \;",y,y,y,y,y,y,,
"Set 644 permission to all regular files under current directory","find . -type f -print0 | xargs -0 -I {} chmod 644 {}","find Path -type f -print0 | xargs -0 -I {} chmod Permission {}",y,y,y,y,y,y,,
"set a crontab to create or update the timestamp of ""washere2"" in the current directory every 30 minutes.","ls | read washere2 | tee washere2","ls | read Regex | tee File",n,n,n,n,n,n,,
"set a crontab to create or update the timestamp of ""washere2"" in the current directory every 30 minutes.","echo ""washere2"" | tee washere2 | tee washere2","echo Regex | tee File | tee File",n,n,n,n,n,n,,
"set a crontab to create or update the timestamp of ""washere2"" in the current directory every 30 minutes.","ls | read washere2 | tail -n +30 - exec touch {} \;","ls | read Regex | tail -n +Quantity - Quantity File {} File",n,n,n,n,n,n,,
"Set the bash environmental variable ""PROMPT_COMMAND"" to save the output of the last executed command to variable ""LAST"" and file '/tmp/x""","basename ""PROMPT_COMMAND"" /tmp/x","basename Regex Regex",n,n,n,n,n,n,,
"Set the bash environmental variable ""PROMPT_COMMAND"" to save the output of the last executed command to variable ""LAST"" and file '/tmp/x""","basename $(which LAST)","basename $( which Regex )",n,n,n,n,n,n,,
"Set the bash environmental variable ""PROMPT_COMMAND"" to save the output of the last executed command to variable ""LAST"" and file '/tmp/x""","echo $(basename /tmp/x)","echo $( basename Regex )",n,n,n,n,n,n,,
"Set permissions to 600 for regular files under media/","find media/ -type f -exec chmod 600 {} \;","find Path -type f -exec chmod Permission {} \;",y,y,y,y,y,y,,
"Set permissions to 600 for regular files under media/","find media/ -type f -print0 | xargs -0 -I {} chmod 600 {}","find Path -type f -print0 | xargs -0 -I {} chmod Permission {}",y,y,y,y,y,y,,
"Set permissions to 600 for regular files under media/","find media -type f -exec chmod 600 {} \;","find Path -type f -exec chmod Permission {} \;",y,y,y,y,y,y,,
"Set permissions to ug=rw,o= for files inside the ./default/files tree","find inside./default/files -type f -exec chmod ug {} \;","find Path -type f -exec chmod Permission {} \;",y,n,n,n,y,n,y,n
"Set permissions to ug=rw,o= for files inside the ./default/files tree","find ./default/files -type f -exec chmod ug {} \;","find Path -type f -exec chmod Permission {} \;",y,n,n,n,y,n,y,n
"Set permissions to ug=rw,o= for files inside the ./default/files tree","find . -path './default/files' -exec chmod ug=rw,o= {} \;","find Path -path Regex -exec chmod Permission {} \;",y,n,y,n,y,n,,
"Set the setup connection timeout to 3 seconds for connecting to ""user@ip"" via ssh","ssh user@ip -S user@ip","ssh Regex -S Path",n,n,n,n,n,n,,
"Set the setup connection timeout to 3 seconds for connecting to ""user@ip"" via ssh","ssh user@ip -M -S user@ip","ssh Regex -M -S Path",n,n,n,n,n,n,,
"Set the setup connection timeout to 3 seconds for connecting to ""user@ip"" via ssh","ssh user@ip -p ssh -L user@ip:user@ip:user@ip","ssh Regex -p Regex -L Regex",n,n,n,n,n,n,,
"Set timestamp of old_file.dat to specified timestamp.","touch -r $(date -r old_file.dat)","touch -r $( date -r File )",n,n,n,n,n,n,,
"Set timestamp of old_file.dat to specified timestamp.","touch $(date -r old_file.dat)","touch $( date -r File )",n,n,n,n,n,n,,
"Set timestamp of old_file.dat to specified timestamp.","touch -r $(date -r ""old_file.dat"")","touch -r $( date -r File )",n,n,n,n,n,n,,
"(GNU specific) Set variable LINE to full process info of process currently taking the most CPU time, squeezing multiple consecutive spaces into one.","top -b -n 1 | tail -n +8 | head -n 1","top -b -n Quantity | tail -n +Quantity | head -n Quantity",n,n,n,n,n,n,,
"(GNU specific) Set variable LINE to full process info of process currently taking the most CPU time, squeezing multiple consecutive spaces into one.","top -b -n 1 -c | tail -n 1","top -b -n Quantity -c | tail -n Quantity",n,n,n,n,n,n,,
"(GNU specific) Set variable LINE to full process info of process currently taking the most CPU time, squeezing multiple consecutive spaces into one.","top -b -n 1 | tail -n +8 | tail -n +8 | head -n 1","top -b -n Quantity | tail -n +Quantity | tail -n +Quantity | head -n Quantity",n,n,n,n,n,n,,
"Show the number of lines for each PHP file in the current directory tree","find . -name ""*.php"" | xargs -I {} wc -l {}","find Path -name Regex | xargs -I {} wc -l {}",y,y,y,y,y,y,,
"Show the number of lines for each PHP file in the current directory tree","find . -name '*.php' | xargs -I {} wc -l {}","find Path -name Regex | xargs -I {} wc -l {}",y,y,y,y,y,y,,
"Show the number of lines for each PHP file in the current directory tree","find . -name ""*.php"" -exec wc -l {} +","find Path -name Regex -exec wc -l {} +",n,n,y,y,n,n,n,n
"Silently read $char number of symbols from file descriptor 4, without backslash escaping, and store received input in 'line' variable","grep -o ""$char"" ""$char"" | tr '[A-Z]' '[a-z]'","grep -o Regex File | tr Regex Regex",n,n,n,n,n,n,,
"Silently read $char number of symbols from file descriptor 4, without backslash escaping, and store received input in 'line' variable","grep -s ""$char"" line | tr '[A-Z]' '[a-z]'","grep -s Regex File | tr Regex Regex",n,n,n,n,n,n,,
"Silently read $char number of symbols from file descriptor 4, without backslash escaping, and store received input in 'line' variable","grep -o ""$char"" ""$char"" | tr '[A-Z]' '[[:digit:]]' | tr '[A-Z]' '[a-z]'","grep -o Regex File | tr Regex Regex | tr Regex Regex",n,n,n,n,n,n,,
"Sort all files/directories under current directory according to modification time and print only the recent 7 of them","find . -exec echo {} \; | sort -n -r","find Path -exec echo {} \; | sort -n -r",n,n,n,n,n,n,,
"Sort all files/directories under current directory according to modification time and print only the recent 7 of them","find . -exec echo {} \; | sort -r","find Path -exec echo {} \; | sort -r",n,n,n,n,n,n,,
"Sort all files/directories under current directory according to modification time and print only the recent 7 of them","find . -printf ""%y %p\n"" | sort -r -n | head -n 7","find Path -printf ""%y %p\n"" | sort -r -n | head -n Quantity",y,n,y,n,n,n,y,n
"Sort and display the file name and creation month of top 11 files in the entire file system (Sort in the order of month )","find / -printf ""%y %p\n"" | sort -n | head -n 11","find Path -printf ""%y %p\n"" | sort -n | head -n Quantity",y,n,y,n,y,n,,
"Sort and display the file name and creation month of top 11 files in the entire file system (Sort in the order of month )","find / -type f -printf ""%T@ %p\n"" | sort | tail - 1 | cut -f 2- -d "" ""","find Path -type f -printf ""%T@ %p\n"" | sort | tail - Quantity | cut -f Number -d Regex",n,n,n,n,n,n,,
"Sort and display the file name and creation month of top 11 files in the entire file system (Sort in the order of month )","find / -name ""*.11"" -printf ""%T@ %p\n"" | sort | uniq -c | sort -n -r","find Path -name Regex -printf ""%T@ %p\n"" | sort | uniq -c | sort -n -r",n,n,n,n,n,n,,
"Split ""domains.xml"" into files of at most 50000 lines each with a numeric suffix of length 4 and prefix of ""domains_""","split -l 50000 domains.xml domains_","split -l Quantity File Regex",n,n,n,n,n,n,,
"Split ""domains.xml"" into files of at most 50000 lines each with a numeric suffix of length 4 and prefix of ""domains_""","split -l 50000 domains.xml domains.xml","split -l Quantity File Regex",n,n,n,n,n,n,,
"Split ""domains.xml"" into files of at most 50000 lines each with a numeric suffix of length 4 and prefix of ""domains_""","split -a 4 -d -l 50000 domains.xml domains_","split -a Quantity -d -l Quantity File Regex",y,y,y,y,y,y,,
"Split ""file.txt"" into files of at most 1 MiB in size with a numeric suffix and prefix ""file""","split -b 1M -d file.txt file --additional-suffix=file.txt","split -b Size -d File Regex --additional-suffix Regex",n,n,n,n,n,n,,
"Split ""file.txt"" into files of at most 1 MiB in size with a numeric suffix and prefix ""file""","split -b 1M -d file.txt file --additional-suffix=most.txt","split -b Size -d File Regex --additional-suffix Regex",n,n,n,n,n,n,,
"Split ""file.txt"" into files of at most 1 MiB in size with a numeric suffix and prefix ""file""","split -b 1M -d file.txt file --additional-suffix=""file.txt""","split -b Size -d File Regex --additional-suffix Regex",n,n,n,n,n,n,,
"Split ""filename"" into files of at most 200000 lines each","split -l 200000","split -l Quantity",n,n,n,n,n,n,,
"Split ""filename"" into files of at most 200000 lines each","split -l 200000 filename:","split -l Quantity File",y,n,y,n,y,n,,
"Split ""filename"" into files of at most 200000 lines each","split -l 200000 filename","split -l Quantity File",y,y,y,y,y,y,,
"split content all files file1..40000 into pieces per 1445 lines named as outputprefixNNN as digital prefix","cat file1..40000 | split -l 1445","cat File | split -l Quantity",n,n,n,n,n,n,,
"split content all files file1..40000 into pieces per 1445 lines named as outputprefixNNN as digital prefix","cat file1..40000 | split -l 1445 - 1445..","cat File | split -l Quantity File Regex",n,n,n,n,n,n,,
"split content all files file1..40000 into pieces per 1445 lines named as outputprefixNNN as digital prefix","cat file1..40000 | split -l 1445 - large_","cat File | split -l Quantity File Regex",n,n,n,n,n,n,,
"split file abc.txt into pieces per 1500000000 bytes named as ""abc.NNN""","split -b 1500000000m abc.txt 1500000000","split -b Size File Regex",y,n,n,n,y,n,y,n
"split file abc.txt into pieces per 1500000000 bytes named as ""abc.NNN""","split -b 1500000000m abc.txt abc.NNN","split -b Size File Regex",y,n,n,n,y,n,y,n
"split file abc.txt into pieces per 1500000000 bytes named as ""abc.NNN""","split -b 1500000000 abc.txt abc.NNN","split -b Size File Regex",y,n,n,n,y,n,y,n
"ssh into ""hostname"" as user ""buck""","ssh buck@hostname","ssh Regex",y,y,y,y,y,y,,
"ssh into ""hostname"" as user ""buck""","ssh buck@buck","ssh Regex",y,n,y,n,y,n,,
"ssh into ""hostname"" as user ""buck""","ssh -o hostname:hostname hostname","ssh -o hostname:hostname Regex",n,n,n,n,n,n,,
"SSH into ""hostname"" on port 22 as user ""myName""","ssh myName@22","ssh Regex",n,n,n,n,n,n,,
"SSH into ""hostname"" on port 22 as user ""myName""","ssh -o 22 myName@22","ssh -o 22 Regex",n,n,n,n,n,n,,
"SSH into ""hostname"" on port 22 as user ""myName""","ssh -p 22 hostname","ssh -p Regex Regex",y,n,y,n,y,y,n,n
"ssh into ""ssh.myhost.net"" as user ""myusername"" and run command ""mkdir -p $2""","ssh -i ssh.myhost.net myusername -p .net","ssh -i File Regex -p Regex",n,n,n,n,n,n,,
"ssh into ""ssh.myhost.net"" as user ""myusername"" and run command ""mkdir -p $2""","ssh -i ssh.myhost.net:$2","ssh -i File",n,n,n,n,n,n,,
"ssh into ""ssh.myhost.net"" as user ""myusername"" and run command ""mkdir -p $2""","ssh -i ssh.myhost.net ssh -p $2","ssh -i File Regex -p Regex",n,n,n,n,n,n,,
"ssh into localhost on port 10022","ssh -p 10022 localhost","ssh -p Regex Regex",y,y,y,y,y,y,y,
"ssh into localhost on port 10022","ssh -p localhost 10022","ssh -p Regex Regex",y,n,n,n,y,n,y,n
"ssh into localhost on port 10022","ssh -p 10022 10022","ssh -p Regex Regex",y,n,y,n,y,n,y,
"SSH into user@server and run command ${SSH_COMMAND}","ssh ${SSH_COMMAND} ${SSH_COMMAND}","ssh Regex command",y,n,y,n,y,n,,
"SSH into user@server and run command ${SSH_COMMAND}","ssh ${SSH_COMMAND} ""${SSH_COMMAND}""","ssh Regex command",y,n,y,n,y,n,,
"SSH into user@server and run command ${SSH_COMMAND}","ssh-keygen -t ""${SSH_COMMAND}""","ssh-keygen -t ""${SSH_COMMAND}""",n,n,n,n,n,n,,
"Strips last section from the path $pathname, and prints basename of the rest part.","echo ""$pathname"" | rev | cut -d ""/"" -f 2- | rev | cut -d ""/"" -f 2- | rev | cut -d ""/"" -f 2- | rev","echo Regex | rev | cut -d Regex -f Number | rev | cut -d Regex -f Number | rev | cut -d Regex -f Number | rev",n,n,y,n,n,n,n,n
"Strips last section from the path $pathname, and prints basename of the rest part.","echo ""$pathname"" | rev | cut -d ""/"" -f 2- | rev | cut -d ""/"" -f 2- | rev","echo Regex | rev | cut -d Regex -f Number | rev | cut -d Regex -f Number | rev",n,n,n,n,n,n,,
"Strips last section from the path $pathname, and prints basename of the rest part.","echo ""$pathname"" | rev | cut -d ""."" -f 2- | rev | cut -d ""/"" -f 2- | rev | cut -d ""/"" -f 2- | rev","echo Regex | rev | cut -d Regex -f Number | rev | cut -d Regex -f Number | rev | cut -d Regex -f Number | rev",n,n,y,n,n,n,n,n
"Test if ""file.tar.gz"" is corrupt","gunzip -c file.tar.gz | tar -x -v -f -","gunzip -c Regex | tar -x -v -f File",n,n,n,n,n,n,,
"Test if ""file.tar.gz"" is corrupt","gzip -d -c file.tar.gz | tar -x -v -f -","gzip -d -c Regex | tar -x -v -f File",n,n,n,n,n,n,,
"Test if ""file.tar.gz"" is corrupt","tail -n +test file.tar.gz","tail -n +Quantity File",n,n,n,n,n,n,,
"Unzip file ""$empty_variable""","zcat ""$empty_variable""","zcat Regex",n,n,y,y,n,n,n,n
"Unzip file ""$empty_variable""","zcat $empty_variable","zcat Regex",n,n,y,y,n,n,n,n
"Unzip file ""$empty_variable""","zcat ""$empty_variable_variable""","zcat Regex",n,n,y,n,n,n,n,n
"(GNU specific) Use 'top' to monitor one process.","top","top",n,n,n,n,n,n,,
"(GNU specific) Use 'top' to monitor one process.","echo top | tr ""\n"" ""[A-Z]"" | tr ""\n"" ""[A-Z]"" | tr ""\n"" ""\n""","echo Regex | tr Regex Regex | tr Regex Regex | tr Regex Regex",n,n,n,n,n,n,,
"(GNU specific) Use 'top' to monitor one process.","echo top | tr ""\n"" ""[A-Z]"" | tr ""\n"" ""[A-Z]"" | tr '\n' 'top'","echo Regex | tr Regex Regex | tr Regex Regex | tr Regex Regex",n,n,n,n,n,n,,
"use find command to search for .png and .jpg files","find . -type f \( -iname ""*.png"" -or -name ""*.jpg"" \)","find Path -type f \( -iname Regex -or -name Regex \)",y,n,y,n,n,n,y,y
"use find command to search for .png and .jpg files","find . -type f \( -iname ""*.png"" -or -name ""*.jpg"" \) -print","find Path -type f \( -iname Regex -or -name Regex \) -print",y,n,y,n,n,n,y,y
"use find command to search for .png and .jpg files","find . -type f \( -iname ""*.png"" -or -iname ""*.jpg"" \)","find Path -type f \( -iname Regex -or -iname Regex \)",y,y,y,y,y,y,,
"when using vi-insert keymap bind command ""\C-v{}\ei"" to key ""{""","bind '\C-v{v{}\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei'","bind Regex",n,n,y,n,n,n,n,n
"when using vi-insert keymap bind command ""\C-v{}\ei"" to key ""{""","bind '\C-v{v{}\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei'","bind Regex",n,n,y,n,n,n,n,n
"when using vi-insert keymap bind command ""\C-v{}\ei"" to key ""{""","bind '\C-v{v{}\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei\ei'","bind Regex",n,n,y,n,n,n,n,n
